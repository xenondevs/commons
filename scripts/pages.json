[{"name":"class GenericArrayTypeImpl(genericComponentType: Type) : GenericArrayType","description":"xyz.xenondevs.commons.reflection.GenericArrayTypeImpl","location":"commons-reflection/xyz.xenondevs.commons.reflection/-generic-array-type-impl/index.html","searchKeys":["GenericArrayTypeImpl","class GenericArrayTypeImpl(genericComponentType: Type) : GenericArrayType","xyz.xenondevs.commons.reflection.GenericArrayTypeImpl"]},{"name":"class ParameterizedTypeImpl(ownerType: Type?, rawType: Type, actualTypeArguments: Type) : ParameterizedType","description":"xyz.xenondevs.commons.reflection.ParameterizedTypeImpl","location":"commons-reflection/xyz.xenondevs.commons.reflection/-parameterized-type-impl/index.html","searchKeys":["ParameterizedTypeImpl","class ParameterizedTypeImpl(ownerType: Type?, rawType: Type, actualTypeArguments: Type) : ParameterizedType","xyz.xenondevs.commons.reflection.ParameterizedTypeImpl"]},{"name":"class WildcardTypeImpl(upperBounds: Array<out Type>, lowerBounds: Array<out Type>) : WildcardType","description":"xyz.xenondevs.commons.reflection.WildcardTypeImpl","location":"commons-reflection/xyz.xenondevs.commons.reflection/-wildcard-type-impl/index.html","searchKeys":["WildcardTypeImpl","class WildcardTypeImpl(upperBounds: Array<out Type>, lowerBounds: Array<out Type>) : WildcardType","xyz.xenondevs.commons.reflection.WildcardTypeImpl"]},{"name":"constructor(genericComponentType: Type)","description":"xyz.xenondevs.commons.reflection.GenericArrayTypeImpl.GenericArrayTypeImpl","location":"commons-reflection/xyz.xenondevs.commons.reflection/-generic-array-type-impl/-generic-array-type-impl.html","searchKeys":["GenericArrayTypeImpl","constructor(genericComponentType: Type)","xyz.xenondevs.commons.reflection.GenericArrayTypeImpl.GenericArrayTypeImpl"]},{"name":"constructor(ownerType: Type?, rawType: Type, vararg actualTypeArguments: Type)","description":"xyz.xenondevs.commons.reflection.ParameterizedTypeImpl.ParameterizedTypeImpl","location":"commons-reflection/xyz.xenondevs.commons.reflection/-parameterized-type-impl/-parameterized-type-impl.html","searchKeys":["ParameterizedTypeImpl","constructor(ownerType: Type?, rawType: Type, vararg actualTypeArguments: Type)","xyz.xenondevs.commons.reflection.ParameterizedTypeImpl.ParameterizedTypeImpl"]},{"name":"constructor(upperBounds: Array<out Type>, lowerBounds: Array<out Type>)","description":"xyz.xenondevs.commons.reflection.WildcardTypeImpl.WildcardTypeImpl","location":"commons-reflection/xyz.xenondevs.commons.reflection/-wildcard-type-impl/-wildcard-type-impl.html","searchKeys":["WildcardTypeImpl","constructor(upperBounds: Array<out Type>, lowerBounds: Array<out Type>)","xyz.xenondevs.commons.reflection.WildcardTypeImpl.WildcardTypeImpl"]},{"name":"fun <T, E> KProperty2<T, E, *>.getRuntimeDelegate(receiver: T & Any): Any?","description":"xyz.xenondevs.commons.reflection.getRuntimeDelegate","location":"commons-reflection/xyz.xenondevs.commons.reflection/get-runtime-delegate.html","searchKeys":["getRuntimeDelegate","fun <T, E> KProperty2<T, E, *>.getRuntimeDelegate(receiver: T & Any): Any?","xyz.xenondevs.commons.reflection.getRuntimeDelegate"]},{"name":"fun <T, E> KProperty2<T, E, *>.hasRuntimeDelegate(receiver: T & Any): Boolean","description":"xyz.xenondevs.commons.reflection.hasRuntimeDelegate","location":"commons-reflection/xyz.xenondevs.commons.reflection/has-runtime-delegate.html","searchKeys":["hasRuntimeDelegate","fun <T, E> KProperty2<T, E, *>.hasRuntimeDelegate(receiver: T & Any): Boolean","xyz.xenondevs.commons.reflection.hasRuntimeDelegate"]},{"name":"fun <T, E> KProperty2<T, E, *>.isLazyInitialized(receiver1: T, receiver2: E): Boolean","description":"xyz.xenondevs.commons.reflection.isLazyInitialized","location":"commons-reflection/xyz.xenondevs.commons.reflection/is-lazy-initialized.html","searchKeys":["isLazyInitialized","fun <T, E> KProperty2<T, E, *>.isLazyInitialized(receiver1: T, receiver2: E): Boolean","xyz.xenondevs.commons.reflection.isLazyInitialized"]},{"name":"fun <T, E> KProperty2<T, E, *>.isRuntimeLazyInitialized(receiver: T & Any): Boolean","description":"xyz.xenondevs.commons.reflection.isRuntimeLazyInitialized","location":"commons-reflection/xyz.xenondevs.commons.reflection/is-runtime-lazy-initialized.html","searchKeys":["isRuntimeLazyInitialized","fun <T, E> KProperty2<T, E, *>.isRuntimeLazyInitialized(receiver: T & Any): Boolean","xyz.xenondevs.commons.reflection.isRuntimeLazyInitialized"]},{"name":"fun <T> KFunction<T>.hasEmptyArguments(): Boolean","description":"xyz.xenondevs.commons.reflection.hasEmptyArguments","location":"commons-reflection/xyz.xenondevs.commons.reflection/has-empty-arguments.html","searchKeys":["hasEmptyArguments","fun <T> KFunction<T>.hasEmptyArguments(): Boolean","xyz.xenondevs.commons.reflection.hasEmptyArguments"]},{"name":"fun <T> KProperty1<T, *>.getRuntimeDelegate(receiver: T & Any): Any?","description":"xyz.xenondevs.commons.reflection.getRuntimeDelegate","location":"commons-reflection/xyz.xenondevs.commons.reflection/get-runtime-delegate.html","searchKeys":["getRuntimeDelegate","fun <T> KProperty1<T, *>.getRuntimeDelegate(receiver: T & Any): Any?","xyz.xenondevs.commons.reflection.getRuntimeDelegate"]},{"name":"fun <T> KProperty1<T, *>.hasRuntimeDelegate(receiver: T & Any): Boolean","description":"xyz.xenondevs.commons.reflection.hasRuntimeDelegate","location":"commons-reflection/xyz.xenondevs.commons.reflection/has-runtime-delegate.html","searchKeys":["hasRuntimeDelegate","fun <T> KProperty1<T, *>.hasRuntimeDelegate(receiver: T & Any): Boolean","xyz.xenondevs.commons.reflection.hasRuntimeDelegate"]},{"name":"fun <T> KProperty1<T, *>.isLazyInitialized(receiver: T): Boolean","description":"xyz.xenondevs.commons.reflection.isLazyInitialized","location":"commons-reflection/xyz.xenondevs.commons.reflection/is-lazy-initialized.html","searchKeys":["isLazyInitialized","fun <T> KProperty1<T, *>.isLazyInitialized(receiver: T): Boolean","xyz.xenondevs.commons.reflection.isLazyInitialized"]},{"name":"fun <T> KProperty1<T, *>.isRuntimeLazyInitialized(receiver: T & Any): Boolean","description":"xyz.xenondevs.commons.reflection.isRuntimeLazyInitialized","location":"commons-reflection/xyz.xenondevs.commons.reflection/is-runtime-lazy-initialized.html","searchKeys":["isRuntimeLazyInitialized","fun <T> KProperty1<T, *>.isRuntimeLazyInitialized(receiver: T & Any): Boolean","xyz.xenondevs.commons.reflection.isRuntimeLazyInitialized"]},{"name":"fun <V> Function<V>.call(vararg args: Any?): V","description":"xyz.xenondevs.commons.reflection.call","location":"commons-reflection/xyz.xenondevs.commons.reflection/call.html","searchKeys":["call","fun <V> Function<V>.call(vararg args: Any?): V","xyz.xenondevs.commons.reflection.call"]},{"name":"fun KClass<*>.createStarProjectedType(nullable: Boolean = false, annotations: List<Annotation> = emptyList()): KType","description":"xyz.xenondevs.commons.reflection.createStarProjectedType","location":"commons-reflection/xyz.xenondevs.commons.reflection/create-star-projected-type.html","searchKeys":["createStarProjectedType","fun KClass<*>.createStarProjectedType(nullable: Boolean = false, annotations: List<Annotation> = emptyList()): KType","xyz.xenondevs.commons.reflection.createStarProjectedType"]},{"name":"fun KClass<*>.isSubclassOfAny(vararg classes: KClass<*>): Boolean","description":"xyz.xenondevs.commons.reflection.isSubclassOfAny","location":"commons-reflection/xyz.xenondevs.commons.reflection/is-subclass-of-any.html","searchKeys":["isSubclassOfAny","fun KClass<*>.isSubclassOfAny(vararg classes: KClass<*>): Boolean","xyz.xenondevs.commons.reflection.isSubclassOfAny"]},{"name":"fun KClassifier.createType(vararg arguments: KType?): KType","description":"xyz.xenondevs.commons.reflection.createType","location":"commons-reflection/xyz.xenondevs.commons.reflection/create-type.html","searchKeys":["createType","fun KClassifier.createType(vararg arguments: KType?): KType","xyz.xenondevs.commons.reflection.createType"]},{"name":"fun KClassifier.createType(vararg arguments: KTypeProjection): KType","description":"xyz.xenondevs.commons.reflection.createType","location":"commons-reflection/xyz.xenondevs.commons.reflection/create-type.html","searchKeys":["createType","fun KClassifier.createType(vararg arguments: KTypeProjection): KType","xyz.xenondevs.commons.reflection.createType"]},{"name":"fun KFunction<*>.toMethodHandle(): MethodHandle","description":"xyz.xenondevs.commons.reflection.toMethodHandle","location":"commons-reflection/xyz.xenondevs.commons.reflection/to-method-handle.html","searchKeys":["toMethodHandle","fun KFunction<*>.toMethodHandle(): MethodHandle","xyz.xenondevs.commons.reflection.toMethodHandle"]},{"name":"fun KFunction<*>.toMethodHandle(instance: Any): MethodHandle","description":"xyz.xenondevs.commons.reflection.toMethodHandle","location":"commons-reflection/xyz.xenondevs.commons.reflection/to-method-handle.html","searchKeys":["toMethodHandle","fun KFunction<*>.toMethodHandle(instance: Any): MethodHandle","xyz.xenondevs.commons.reflection.toMethodHandle"]},{"name":"fun KProperty0<*>.getRuntimeDelegate(): Any?","description":"xyz.xenondevs.commons.reflection.getRuntimeDelegate","location":"commons-reflection/xyz.xenondevs.commons.reflection/get-runtime-delegate.html","searchKeys":["getRuntimeDelegate","fun KProperty0<*>.getRuntimeDelegate(): Any?","xyz.xenondevs.commons.reflection.getRuntimeDelegate"]},{"name":"fun KProperty0<*>.hasRuntimeDelegate(): Boolean","description":"xyz.xenondevs.commons.reflection.hasRuntimeDelegate","location":"commons-reflection/xyz.xenondevs.commons.reflection/has-runtime-delegate.html","searchKeys":["hasRuntimeDelegate","fun KProperty0<*>.hasRuntimeDelegate(): Boolean","xyz.xenondevs.commons.reflection.hasRuntimeDelegate"]},{"name":"fun KProperty0<*>.isLazyInitialized(): Boolean","description":"xyz.xenondevs.commons.reflection.isLazyInitialized","location":"commons-reflection/xyz.xenondevs.commons.reflection/is-lazy-initialized.html","searchKeys":["isLazyInitialized","fun KProperty0<*>.isLazyInitialized(): Boolean","xyz.xenondevs.commons.reflection.isLazyInitialized"]},{"name":"fun KProperty0<*>.isRuntimeLazyInitialized(): Boolean","description":"xyz.xenondevs.commons.reflection.isRuntimeLazyInitialized","location":"commons-reflection/xyz.xenondevs.commons.reflection/is-runtime-lazy-initialized.html","searchKeys":["isRuntimeLazyInitialized","fun KProperty0<*>.isRuntimeLazyInitialized(): Boolean","xyz.xenondevs.commons.reflection.isRuntimeLazyInitialized"]},{"name":"fun KType?.equalsIgnoreNullability(other: KType?): Boolean","description":"xyz.xenondevs.commons.reflection.equalsIgnoreNullability","location":"commons-reflection/xyz.xenondevs.commons.reflection/equals-ignore-nullability.html","searchKeys":["equalsIgnoreNullability","fun KType?.equalsIgnoreNullability(other: KType?): Boolean","xyz.xenondevs.commons.reflection.equalsIgnoreNullability"]},{"name":"fun Method.toMethodHandle(): MethodHandle","description":"xyz.xenondevs.commons.reflection.toMethodHandle","location":"commons-reflection/xyz.xenondevs.commons.reflection/to-method-handle.html","searchKeys":["toMethodHandle","fun Method.toMethodHandle(): MethodHandle","xyz.xenondevs.commons.reflection.toMethodHandle"]},{"name":"fun Method.toMethodHandle(instance: Any): MethodHandle","description":"xyz.xenondevs.commons.reflection.toMethodHandle","location":"commons-reflection/xyz.xenondevs.commons.reflection/to-method-handle.html","searchKeys":["toMethodHandle","fun Method.toMethodHandle(instance: Any): MethodHandle","xyz.xenondevs.commons.reflection.toMethodHandle"]},{"name":"fun createStarProjectedType(classifier: KClass<*>, nullable: Boolean = false, annotations: List<Annotation> = emptyList()): KType","description":"xyz.xenondevs.commons.reflection.createStarProjectedType","location":"commons-reflection/xyz.xenondevs.commons.reflection/create-star-projected-type.html","searchKeys":["createStarProjectedType","fun createStarProjectedType(classifier: KClass<*>, nullable: Boolean = false, annotations: List<Annotation> = emptyList()): KType","xyz.xenondevs.commons.reflection.createStarProjectedType"]},{"name":"fun createType(classifier: KClassifier, arguments: List<KTypeProjection> = emptyList(), nullable: Boolean = false, annotations: List<Annotation> = emptyList()): KType","description":"xyz.xenondevs.commons.reflection.createType","location":"commons-reflection/xyz.xenondevs.commons.reflection/create-type.html","searchKeys":["createType","fun createType(classifier: KClassifier, arguments: List<KTypeProjection> = emptyList(), nullable: Boolean = false, annotations: List<Annotation> = emptyList()): KType","xyz.xenondevs.commons.reflection.createType"]},{"name":"fun createType(classifier: KClassifier, vararg arguments: KType?): KType","description":"xyz.xenondevs.commons.reflection.createType","location":"commons-reflection/xyz.xenondevs.commons.reflection/create-type.html","searchKeys":["createType","fun createType(classifier: KClassifier, vararg arguments: KType?): KType","xyz.xenondevs.commons.reflection.createType"]},{"name":"fun createType(classifier: KClassifier, vararg arguments: KTypeProjection): KType","description":"xyz.xenondevs.commons.reflection.createType","location":"commons-reflection/xyz.xenondevs.commons.reflection/create-type.html","searchKeys":["createType","fun createType(classifier: KClassifier, vararg arguments: KTypeProjection): KType","xyz.xenondevs.commons.reflection.createType"]},{"name":"inline fun <T> KType.isSubtypeOf(): Boolean","description":"xyz.xenondevs.commons.reflection.isSubtypeOf","location":"commons-reflection/xyz.xenondevs.commons.reflection/is-subtype-of.html","searchKeys":["isSubtypeOf","inline fun <T> KType.isSubtypeOf(): Boolean","xyz.xenondevs.commons.reflection.isSubtypeOf"]},{"name":"inline fun <T> KType.isSuperTypeOf(): Boolean","description":"xyz.xenondevs.commons.reflection.isSuperTypeOf","location":"commons-reflection/xyz.xenondevs.commons.reflection/is-super-type-of.html","searchKeys":["isSuperTypeOf","inline fun <T> KType.isSuperTypeOf(): Boolean","xyz.xenondevs.commons.reflection.isSuperTypeOf"]},{"name":"inline fun <T> javaTypeOf(): Type","description":"xyz.xenondevs.commons.reflection.javaTypeOf","location":"commons-reflection/xyz.xenondevs.commons.reflection/java-type-of.html","searchKeys":["javaTypeOf","inline fun <T> javaTypeOf(): Type","xyz.xenondevs.commons.reflection.javaTypeOf"]},{"name":"open override fun getActualTypeArguments(): Array<out Type>","description":"xyz.xenondevs.commons.reflection.ParameterizedTypeImpl.getActualTypeArguments","location":"commons-reflection/xyz.xenondevs.commons.reflection/-parameterized-type-impl/get-actual-type-arguments.html","searchKeys":["getActualTypeArguments","open override fun getActualTypeArguments(): Array<out Type>","xyz.xenondevs.commons.reflection.ParameterizedTypeImpl.getActualTypeArguments"]},{"name":"open override fun getGenericComponentType(): Type","description":"xyz.xenondevs.commons.reflection.GenericArrayTypeImpl.getGenericComponentType","location":"commons-reflection/xyz.xenondevs.commons.reflection/-generic-array-type-impl/get-generic-component-type.html","searchKeys":["getGenericComponentType","open override fun getGenericComponentType(): Type","xyz.xenondevs.commons.reflection.GenericArrayTypeImpl.getGenericComponentType"]},{"name":"open override fun getLowerBounds(): Array<out Type>","description":"xyz.xenondevs.commons.reflection.WildcardTypeImpl.getLowerBounds","location":"commons-reflection/xyz.xenondevs.commons.reflection/-wildcard-type-impl/get-lower-bounds.html","searchKeys":["getLowerBounds","open override fun getLowerBounds(): Array<out Type>","xyz.xenondevs.commons.reflection.WildcardTypeImpl.getLowerBounds"]},{"name":"open override fun getOwnerType(): Type?","description":"xyz.xenondevs.commons.reflection.ParameterizedTypeImpl.getOwnerType","location":"commons-reflection/xyz.xenondevs.commons.reflection/-parameterized-type-impl/get-owner-type.html","searchKeys":["getOwnerType","open override fun getOwnerType(): Type?","xyz.xenondevs.commons.reflection.ParameterizedTypeImpl.getOwnerType"]},{"name":"open override fun getRawType(): Type","description":"xyz.xenondevs.commons.reflection.ParameterizedTypeImpl.getRawType","location":"commons-reflection/xyz.xenondevs.commons.reflection/-parameterized-type-impl/get-raw-type.html","searchKeys":["getRawType","open override fun getRawType(): Type","xyz.xenondevs.commons.reflection.ParameterizedTypeImpl.getRawType"]},{"name":"open override fun getUpperBounds(): Array<out Type>","description":"xyz.xenondevs.commons.reflection.WildcardTypeImpl.getUpperBounds","location":"commons-reflection/xyz.xenondevs.commons.reflection/-wildcard-type-impl/get-upper-bounds.html","searchKeys":["getUpperBounds","open override fun getUpperBounds(): Array<out Type>","xyz.xenondevs.commons.reflection.WildcardTypeImpl.getUpperBounds"]},{"name":"val <K> Map<K, *>.keyType: KType","description":"xyz.xenondevs.commons.reflection.keyType","location":"commons-reflection/xyz.xenondevs.commons.reflection/key-type.html","searchKeys":["keyType","val <K> Map<K, *>.keyType: KType","xyz.xenondevs.commons.reflection.keyType"]},{"name":"val <V> Map<*, V>.valueType: KType","description":"xyz.xenondevs.commons.reflection.valueType","location":"commons-reflection/xyz.xenondevs.commons.reflection/value-type.html","searchKeys":["valueType","val <V> Map<*, V>.valueType: KType","xyz.xenondevs.commons.reflection.valueType"]},{"name":"val KType.classifierClass: KClass<*>?","description":"xyz.xenondevs.commons.reflection.classifierClass","location":"commons-reflection/xyz.xenondevs.commons.reflection/classifier-class.html","searchKeys":["classifierClass","val KType.classifierClass: KClass<*>?","xyz.xenondevs.commons.reflection.classifierClass"]},{"name":"val KType.nonNullTypeArguments: List<KType>","description":"xyz.xenondevs.commons.reflection.nonNullTypeArguments","location":"commons-reflection/xyz.xenondevs.commons.reflection/non-null-type-arguments.html","searchKeys":["nonNullTypeArguments","val KType.nonNullTypeArguments: List<KType>","xyz.xenondevs.commons.reflection.nonNullTypeArguments"]},{"name":"val Type.rawType: Class<*>","description":"xyz.xenondevs.commons.reflection.rawType","location":"commons-reflection/xyz.xenondevs.commons.reflection/raw-type.html","searchKeys":["rawType","val Type.rawType: Class<*>","xyz.xenondevs.commons.reflection.rawType"]},{"name":"class Version : Comparable<Version> ","description":"xyz.xenondevs.commons.version.Version","location":"commons-version/xyz.xenondevs.commons.version/-version/index.html","searchKeys":["Version","class Version : Comparable<Version> ","xyz.xenondevs.commons.version.Version"]},{"name":"constructor(start: Version, endExclusive: Version)","description":"xyz.xenondevs.commons.version.OpenEndVersionRange.OpenEndVersionRange","location":"commons-version/xyz.xenondevs.commons.version/-open-end-version-range/-open-end-version-range.html","searchKeys":["OpenEndVersionRange","constructor(start: Version, endExclusive: Version)","xyz.xenondevs.commons.version.OpenEndVersionRange.OpenEndVersionRange"]},{"name":"constructor(start: Version, endInclusive: Version)","description":"xyz.xenondevs.commons.version.ClosedVersionRange.ClosedVersionRange","location":"commons-version/xyz.xenondevs.commons.version/-closed-version-range/-closed-version-range.html","searchKeys":["ClosedVersionRange","constructor(start: Version, endInclusive: Version)","xyz.xenondevs.commons.version.ClosedVersionRange.ClosedVersionRange"]},{"name":"constructor(vararg version: Int)","description":"xyz.xenondevs.commons.version.Version.Version","location":"commons-version/xyz.xenondevs.commons.version/-version/-version.html","searchKeys":["Version","constructor(vararg version: Int)","xyz.xenondevs.commons.version.Version.Version"]},{"name":"constructor(version: String)","description":"xyz.xenondevs.commons.version.Version.Version","location":"commons-version/xyz.xenondevs.commons.version/-version/-version.html","searchKeys":["Version","constructor(version: String)","xyz.xenondevs.commons.version.Version.Version"]},{"name":"data class ClosedVersionRange(val start: Version, val endInclusive: Version) : ClosedRange<Version> ","description":"xyz.xenondevs.commons.version.ClosedVersionRange","location":"commons-version/xyz.xenondevs.commons.version/-closed-version-range/index.html","searchKeys":["ClosedVersionRange","data class ClosedVersionRange(val start: Version, val endInclusive: Version) : ClosedRange<Version> ","xyz.xenondevs.commons.version.ClosedVersionRange"]},{"name":"data class OpenEndVersionRange(val start: Version, val endExclusive: Version) : OpenEndRange<Version> ","description":"xyz.xenondevs.commons.version.OpenEndVersionRange","location":"commons-version/xyz.xenondevs.commons.version/-open-end-version-range/index.html","searchKeys":["OpenEndVersionRange","data class OpenEndVersionRange(val start: Version, val endExclusive: Version) : OpenEndRange<Version> ","xyz.xenondevs.commons.version.OpenEndVersionRange"]},{"name":"fun compareTo(other: Version, ignoreIdx: Int): Int","description":"xyz.xenondevs.commons.version.Version.compareTo","location":"commons-version/xyz.xenondevs.commons.version/-version/compare-to.html","searchKeys":["compareTo","fun compareTo(other: Version, ignoreIdx: Int): Int","xyz.xenondevs.commons.version.Version.compareTo"]},{"name":"fun equals(other: Version, ignoreIdx: Int): Boolean","description":"xyz.xenondevs.commons.version.Version.equals","location":"commons-version/xyz.xenondevs.commons.version/-version/equals.html","searchKeys":["equals","fun equals(other: Version, ignoreIdx: Int): Boolean","xyz.xenondevs.commons.version.Version.equals"]},{"name":"fun toString(separator: String = \".\", omitZeros: Boolean = false, omitIdx: Int = -1, omitMetadata: Boolean = false): String","description":"xyz.xenondevs.commons.version.Version.toString","location":"commons-version/xyz.xenondevs.commons.version/-version/to-string.html","searchKeys":["toString","fun toString(separator: String = \".\", omitZeros: Boolean = false, omitIdx: Int = -1, omitMetadata: Boolean = false): String","xyz.xenondevs.commons.version.Version.toString"]},{"name":"open operator override fun compareTo(other: Version): Int","description":"xyz.xenondevs.commons.version.Version.compareTo","location":"commons-version/xyz.xenondevs.commons.version/-version/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Version): Int","xyz.xenondevs.commons.version.Version.compareTo"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"xyz.xenondevs.commons.version.Version.equals","location":"commons-version/xyz.xenondevs.commons.version/-version/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","xyz.xenondevs.commons.version.Version.equals"]},{"name":"open override fun hashCode(): Int","description":"xyz.xenondevs.commons.version.Version.hashCode","location":"commons-version/xyz.xenondevs.commons.version/-version/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","xyz.xenondevs.commons.version.Version.hashCode"]},{"name":"open override fun toString(): String","description":"xyz.xenondevs.commons.version.ClosedVersionRange.toString","location":"commons-version/xyz.xenondevs.commons.version/-closed-version-range/to-string.html","searchKeys":["toString","open override fun toString(): String","xyz.xenondevs.commons.version.ClosedVersionRange.toString"]},{"name":"open override fun toString(): String","description":"xyz.xenondevs.commons.version.OpenEndVersionRange.toString","location":"commons-version/xyz.xenondevs.commons.version/-open-end-version-range/to-string.html","searchKeys":["toString","open override fun toString(): String","xyz.xenondevs.commons.version.OpenEndVersionRange.toString"]},{"name":"open override fun toString(): String","description":"xyz.xenondevs.commons.version.Version.toString","location":"commons-version/xyz.xenondevs.commons.version/-version/to-string.html","searchKeys":["toString","open override fun toString(): String","xyz.xenondevs.commons.version.Version.toString"]},{"name":"open override val endExclusive: Version","description":"xyz.xenondevs.commons.version.OpenEndVersionRange.endExclusive","location":"commons-version/xyz.xenondevs.commons.version/-open-end-version-range/end-exclusive.html","searchKeys":["endExclusive","open override val endExclusive: Version","xyz.xenondevs.commons.version.OpenEndVersionRange.endExclusive"]},{"name":"open override val endInclusive: Version","description":"xyz.xenondevs.commons.version.ClosedVersionRange.endInclusive","location":"commons-version/xyz.xenondevs.commons.version/-closed-version-range/end-inclusive.html","searchKeys":["endInclusive","open override val endInclusive: Version","xyz.xenondevs.commons.version.ClosedVersionRange.endInclusive"]},{"name":"open override val start: Version","description":"xyz.xenondevs.commons.version.ClosedVersionRange.start","location":"commons-version/xyz.xenondevs.commons.version/-closed-version-range/start.html","searchKeys":["start","open override val start: Version","xyz.xenondevs.commons.version.ClosedVersionRange.start"]},{"name":"open override val start: Version","description":"xyz.xenondevs.commons.version.OpenEndVersionRange.start","location":"commons-version/xyz.xenondevs.commons.version/-open-end-version-range/start.html","searchKeys":["start","open override val start: Version","xyz.xenondevs.commons.version.OpenEndVersionRange.start"]},{"name":"operator fun rangeTo(other: Version): ClosedVersionRange","description":"xyz.xenondevs.commons.version.Version.rangeTo","location":"commons-version/xyz.xenondevs.commons.version/-version/range-to.html","searchKeys":["rangeTo","operator fun rangeTo(other: Version): ClosedVersionRange","xyz.xenondevs.commons.version.Version.rangeTo"]},{"name":"operator fun rangeUntil(other: Version): OpenEndVersionRange","description":"xyz.xenondevs.commons.version.Version.rangeUntil","location":"commons-version/xyz.xenondevs.commons.version/-version/range-until.html","searchKeys":["rangeUntil","operator fun rangeUntil(other: Version): OpenEndVersionRange","xyz.xenondevs.commons.version.Version.rangeUntil"]},{"name":"val isFullRelease: Boolean","description":"xyz.xenondevs.commons.version.Version.isFullRelease","location":"commons-version/xyz.xenondevs.commons.version/-version/is-full-release.html","searchKeys":["isFullRelease","val isFullRelease: Boolean","xyz.xenondevs.commons.version.Version.isFullRelease"]},{"name":"val metadata: String?","description":"xyz.xenondevs.commons.version.Version.metadata","location":"commons-version/xyz.xenondevs.commons.version/-version/metadata.html","searchKeys":["metadata","val metadata: String?","xyz.xenondevs.commons.version.Version.metadata"]},{"name":"fun <R, C, V> Map<R, Map<C, V>>.toTable(table: Table<R, C, V> = HashBasedTable.create()): Table<R, C, V>","description":"xyz.xenondevs.commons.guava.toTable","location":"commons-guava/xyz.xenondevs.commons.guava/to-table.html","searchKeys":["toTable","fun <R, C, V> Map<R, Map<C, V>>.toTable(table: Table<R, C, V> = HashBasedTable.create()): Table<R, C, V>","xyz.xenondevs.commons.guava.toTable"]},{"name":"inline fun <R, C, V> Table<R, C, V>.forEach(action: (R, C, V) -> Unit)","description":"xyz.xenondevs.commons.guava.forEach","location":"commons-guava/xyz.xenondevs.commons.guava/for-each.html","searchKeys":["forEach","inline fun <R, C, V> Table<R, C, V>.forEach(action: (R, C, V) -> Unit)","xyz.xenondevs.commons.guava.forEach"]},{"name":"inline fun <R, C, V> Table<R, C, V>.replaceAll(replacer: (R, C, V) -> V)","description":"xyz.xenondevs.commons.guava.replaceAll","location":"commons-guava/xyz.xenondevs.commons.guava/replace-all.html","searchKeys":["replaceAll","inline fun <R, C, V> Table<R, C, V>.replaceAll(replacer: (R, C, V) -> V)","xyz.xenondevs.commons.guava.replaceAll"]},{"name":"operator fun <R, C, V> Table.Cell<R, C, V>.component1(): R","description":"xyz.xenondevs.commons.guava.component1","location":"commons-guava/xyz.xenondevs.commons.guava/component1.html","searchKeys":["component1","operator fun <R, C, V> Table.Cell<R, C, V>.component1(): R","xyz.xenondevs.commons.guava.component1"]},{"name":"operator fun <R, C, V> Table.Cell<R, C, V>.component2(): C","description":"xyz.xenondevs.commons.guava.component2","location":"commons-guava/xyz.xenondevs.commons.guava/component2.html","searchKeys":["component2","operator fun <R, C, V> Table.Cell<R, C, V>.component2(): C","xyz.xenondevs.commons.guava.component2"]},{"name":"operator fun <R, C, V> Table.Cell<R, C, V>.component3(): V","description":"xyz.xenondevs.commons.guava.component3","location":"commons-guava/xyz.xenondevs.commons.guava/component3.html","searchKeys":["component3","operator fun <R, C, V> Table.Cell<R, C, V>.component3(): V","xyz.xenondevs.commons.guava.component3"]},{"name":"operator fun <R, C, V> Table<R, C, V>.iterator(): Iterator<Table.Cell<R, C, V>>","description":"xyz.xenondevs.commons.guava.iterator","location":"commons-guava/xyz.xenondevs.commons.guava/iterator.html","searchKeys":["iterator","operator fun <R, C, V> Table<R, C, V>.iterator(): Iterator<Table.Cell<R, C, V>>","xyz.xenondevs.commons.guava.iterator"]},{"name":"operator fun <R, C, V> Table<R, C, V>.set(row: R, column: C, value: V): V?","description":"xyz.xenondevs.commons.guava.set","location":"commons-guava/xyz.xenondevs.commons.guava/set.html","searchKeys":["set","operator fun <R, C, V> Table<R, C, V>.set(row: R, column: C, value: V): V?","xyz.xenondevs.commons.guava.set"]},{"name":"constructor(a: A, b: B)","description":"xyz.xenondevs.commons.tuple.Tuple2.Tuple2","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple2/-tuple2.html","searchKeys":["Tuple2","constructor(a: A, b: B)","xyz.xenondevs.commons.tuple.Tuple2.Tuple2"]},{"name":"constructor(a: A, b: B, c: C)","description":"xyz.xenondevs.commons.tuple.Tuple3.Tuple3","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple3/-tuple3.html","searchKeys":["Tuple3","constructor(a: A, b: B, c: C)","xyz.xenondevs.commons.tuple.Tuple3.Tuple3"]},{"name":"constructor(a: A, b: B, c: C, d: D)","description":"xyz.xenondevs.commons.tuple.Tuple4.Tuple4","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple4/-tuple4.html","searchKeys":["Tuple4","constructor(a: A, b: B, c: C, d: D)","xyz.xenondevs.commons.tuple.Tuple4.Tuple4"]},{"name":"constructor(a: A, b: B, c: C, d: D, e: E)","description":"xyz.xenondevs.commons.tuple.Tuple5.Tuple5","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple5/-tuple5.html","searchKeys":["Tuple5","constructor(a: A, b: B, c: C, d: D, e: E)","xyz.xenondevs.commons.tuple.Tuple5.Tuple5"]},{"name":"constructor(a: A, b: B, c: C, d: D, e: E, f: F)","description":"xyz.xenondevs.commons.tuple.Tuple6.Tuple6","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple6/-tuple6.html","searchKeys":["Tuple6","constructor(a: A, b: B, c: C, d: D, e: E, f: F)","xyz.xenondevs.commons.tuple.Tuple6.Tuple6"]},{"name":"constructor(a: A, b: B, c: C, d: D, e: E, f: F, g: G)","description":"xyz.xenondevs.commons.tuple.Tuple7.Tuple7","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple7/-tuple7.html","searchKeys":["Tuple7","constructor(a: A, b: B, c: C, d: D, e: E, f: F, g: G)","xyz.xenondevs.commons.tuple.Tuple7.Tuple7"]},{"name":"constructor(a: A, b: B, c: C, d: D, e: E, f: F, g: G, h: H)","description":"xyz.xenondevs.commons.tuple.Tuple8.Tuple8","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple8/-tuple8.html","searchKeys":["Tuple8","constructor(a: A, b: B, c: C, d: D, e: E, f: F, g: G, h: H)","xyz.xenondevs.commons.tuple.Tuple8.Tuple8"]},{"name":"constructor(a: A, b: B, c: C, d: D, e: E, f: F, g: G, h: H, i: I)","description":"xyz.xenondevs.commons.tuple.Tuple9.Tuple9","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple9/-tuple9.html","searchKeys":["Tuple9","constructor(a: A, b: B, c: C, d: D, e: E, f: F, g: G, h: H, i: I)","xyz.xenondevs.commons.tuple.Tuple9.Tuple9"]},{"name":"constructor(a: A, b: B, c: C, d: D, e: E, f: F, g: G, h: H, i: I, j: J)","description":"xyz.xenondevs.commons.tuple.Tuple10.Tuple10","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple10/-tuple10.html","searchKeys":["Tuple10","constructor(a: A, b: B, c: C, d: D, e: E, f: F, g: G, h: H, i: I, j: J)","xyz.xenondevs.commons.tuple.Tuple10.Tuple10"]},{"name":"data class Tuple10<A, B, C, D, E, F, G, H, I, J>(val a: A, val b: B, val c: C, val d: D, val e: E, val f: F, val g: G, val h: H, val i: I, val j: J)","description":"xyz.xenondevs.commons.tuple.Tuple10","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple10/index.html","searchKeys":["Tuple10","data class Tuple10<A, B, C, D, E, F, G, H, I, J>(val a: A, val b: B, val c: C, val d: D, val e: E, val f: F, val g: G, val h: H, val i: I, val j: J)","xyz.xenondevs.commons.tuple.Tuple10"]},{"name":"data class Tuple2<A, B>(val a: A, val b: B)","description":"xyz.xenondevs.commons.tuple.Tuple2","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple2/index.html","searchKeys":["Tuple2","data class Tuple2<A, B>(val a: A, val b: B)","xyz.xenondevs.commons.tuple.Tuple2"]},{"name":"data class Tuple3<A, B, C>(val a: A, val b: B, val c: C)","description":"xyz.xenondevs.commons.tuple.Tuple3","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple3/index.html","searchKeys":["Tuple3","data class Tuple3<A, B, C>(val a: A, val b: B, val c: C)","xyz.xenondevs.commons.tuple.Tuple3"]},{"name":"data class Tuple4<A, B, C, D>(val a: A, val b: B, val c: C, val d: D)","description":"xyz.xenondevs.commons.tuple.Tuple4","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple4/index.html","searchKeys":["Tuple4","data class Tuple4<A, B, C, D>(val a: A, val b: B, val c: C, val d: D)","xyz.xenondevs.commons.tuple.Tuple4"]},{"name":"data class Tuple5<A, B, C, D, E>(val a: A, val b: B, val c: C, val d: D, val e: E)","description":"xyz.xenondevs.commons.tuple.Tuple5","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple5/index.html","searchKeys":["Tuple5","data class Tuple5<A, B, C, D, E>(val a: A, val b: B, val c: C, val d: D, val e: E)","xyz.xenondevs.commons.tuple.Tuple5"]},{"name":"data class Tuple6<A, B, C, D, E, F>(val a: A, val b: B, val c: C, val d: D, val e: E, val f: F)","description":"xyz.xenondevs.commons.tuple.Tuple6","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple6/index.html","searchKeys":["Tuple6","data class Tuple6<A, B, C, D, E, F>(val a: A, val b: B, val c: C, val d: D, val e: E, val f: F)","xyz.xenondevs.commons.tuple.Tuple6"]},{"name":"data class Tuple7<A, B, C, D, E, F, G>(val a: A, val b: B, val c: C, val d: D, val e: E, val f: F, val g: G)","description":"xyz.xenondevs.commons.tuple.Tuple7","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple7/index.html","searchKeys":["Tuple7","data class Tuple7<A, B, C, D, E, F, G>(val a: A, val b: B, val c: C, val d: D, val e: E, val f: F, val g: G)","xyz.xenondevs.commons.tuple.Tuple7"]},{"name":"data class Tuple8<A, B, C, D, E, F, G, H>(val a: A, val b: B, val c: C, val d: D, val e: E, val f: F, val g: G, val h: H)","description":"xyz.xenondevs.commons.tuple.Tuple8","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple8/index.html","searchKeys":["Tuple8","data class Tuple8<A, B, C, D, E, F, G, H>(val a: A, val b: B, val c: C, val d: D, val e: E, val f: F, val g: G, val h: H)","xyz.xenondevs.commons.tuple.Tuple8"]},{"name":"data class Tuple9<A, B, C, D, E, F, G, H, I>(val a: A, val b: B, val c: C, val d: D, val e: E, val f: F, val g: G, val h: H, val i: I)","description":"xyz.xenondevs.commons.tuple.Tuple9","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple9/index.html","searchKeys":["Tuple9","data class Tuple9<A, B, C, D, E, F, G, H, I>(val a: A, val b: B, val c: C, val d: D, val e: E, val f: F, val g: G, val h: H, val i: I)","xyz.xenondevs.commons.tuple.Tuple9"]},{"name":"fun toPair(): Pair<A, B>","description":"xyz.xenondevs.commons.tuple.Tuple2.toPair","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple2/to-pair.html","searchKeys":["toPair","fun toPair(): Pair<A, B>","xyz.xenondevs.commons.tuple.Tuple2.toPair"]},{"name":"fun toTriple(): Triple<A, B, C>","description":"xyz.xenondevs.commons.tuple.Tuple3.toTriple","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple3/to-triple.html","searchKeys":["toTriple","fun toTriple(): Triple<A, B, C>","xyz.xenondevs.commons.tuple.Tuple3.toTriple"]},{"name":"val a: A","description":"xyz.xenondevs.commons.tuple.Tuple10.a","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple10/a.html","searchKeys":["a","val a: A","xyz.xenondevs.commons.tuple.Tuple10.a"]},{"name":"val a: A","description":"xyz.xenondevs.commons.tuple.Tuple2.a","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple2/a.html","searchKeys":["a","val a: A","xyz.xenondevs.commons.tuple.Tuple2.a"]},{"name":"val a: A","description":"xyz.xenondevs.commons.tuple.Tuple3.a","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple3/a.html","searchKeys":["a","val a: A","xyz.xenondevs.commons.tuple.Tuple3.a"]},{"name":"val a: A","description":"xyz.xenondevs.commons.tuple.Tuple4.a","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple4/a.html","searchKeys":["a","val a: A","xyz.xenondevs.commons.tuple.Tuple4.a"]},{"name":"val a: A","description":"xyz.xenondevs.commons.tuple.Tuple5.a","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple5/a.html","searchKeys":["a","val a: A","xyz.xenondevs.commons.tuple.Tuple5.a"]},{"name":"val a: A","description":"xyz.xenondevs.commons.tuple.Tuple6.a","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple6/a.html","searchKeys":["a","val a: A","xyz.xenondevs.commons.tuple.Tuple6.a"]},{"name":"val a: A","description":"xyz.xenondevs.commons.tuple.Tuple7.a","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple7/a.html","searchKeys":["a","val a: A","xyz.xenondevs.commons.tuple.Tuple7.a"]},{"name":"val a: A","description":"xyz.xenondevs.commons.tuple.Tuple8.a","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple8/a.html","searchKeys":["a","val a: A","xyz.xenondevs.commons.tuple.Tuple8.a"]},{"name":"val a: A","description":"xyz.xenondevs.commons.tuple.Tuple9.a","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple9/a.html","searchKeys":["a","val a: A","xyz.xenondevs.commons.tuple.Tuple9.a"]},{"name":"val b: B","description":"xyz.xenondevs.commons.tuple.Tuple10.b","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple10/b.html","searchKeys":["b","val b: B","xyz.xenondevs.commons.tuple.Tuple10.b"]},{"name":"val b: B","description":"xyz.xenondevs.commons.tuple.Tuple2.b","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple2/b.html","searchKeys":["b","val b: B","xyz.xenondevs.commons.tuple.Tuple2.b"]},{"name":"val b: B","description":"xyz.xenondevs.commons.tuple.Tuple3.b","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple3/b.html","searchKeys":["b","val b: B","xyz.xenondevs.commons.tuple.Tuple3.b"]},{"name":"val b: B","description":"xyz.xenondevs.commons.tuple.Tuple4.b","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple4/b.html","searchKeys":["b","val b: B","xyz.xenondevs.commons.tuple.Tuple4.b"]},{"name":"val b: B","description":"xyz.xenondevs.commons.tuple.Tuple5.b","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple5/b.html","searchKeys":["b","val b: B","xyz.xenondevs.commons.tuple.Tuple5.b"]},{"name":"val b: B","description":"xyz.xenondevs.commons.tuple.Tuple6.b","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple6/b.html","searchKeys":["b","val b: B","xyz.xenondevs.commons.tuple.Tuple6.b"]},{"name":"val b: B","description":"xyz.xenondevs.commons.tuple.Tuple7.b","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple7/b.html","searchKeys":["b","val b: B","xyz.xenondevs.commons.tuple.Tuple7.b"]},{"name":"val b: B","description":"xyz.xenondevs.commons.tuple.Tuple8.b","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple8/b.html","searchKeys":["b","val b: B","xyz.xenondevs.commons.tuple.Tuple8.b"]},{"name":"val b: B","description":"xyz.xenondevs.commons.tuple.Tuple9.b","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple9/b.html","searchKeys":["b","val b: B","xyz.xenondevs.commons.tuple.Tuple9.b"]},{"name":"val c: C","description":"xyz.xenondevs.commons.tuple.Tuple10.c","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple10/c.html","searchKeys":["c","val c: C","xyz.xenondevs.commons.tuple.Tuple10.c"]},{"name":"val c: C","description":"xyz.xenondevs.commons.tuple.Tuple3.c","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple3/c.html","searchKeys":["c","val c: C","xyz.xenondevs.commons.tuple.Tuple3.c"]},{"name":"val c: C","description":"xyz.xenondevs.commons.tuple.Tuple4.c","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple4/c.html","searchKeys":["c","val c: C","xyz.xenondevs.commons.tuple.Tuple4.c"]},{"name":"val c: C","description":"xyz.xenondevs.commons.tuple.Tuple5.c","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple5/c.html","searchKeys":["c","val c: C","xyz.xenondevs.commons.tuple.Tuple5.c"]},{"name":"val c: C","description":"xyz.xenondevs.commons.tuple.Tuple6.c","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple6/c.html","searchKeys":["c","val c: C","xyz.xenondevs.commons.tuple.Tuple6.c"]},{"name":"val c: C","description":"xyz.xenondevs.commons.tuple.Tuple7.c","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple7/c.html","searchKeys":["c","val c: C","xyz.xenondevs.commons.tuple.Tuple7.c"]},{"name":"val c: C","description":"xyz.xenondevs.commons.tuple.Tuple8.c","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple8/c.html","searchKeys":["c","val c: C","xyz.xenondevs.commons.tuple.Tuple8.c"]},{"name":"val c: C","description":"xyz.xenondevs.commons.tuple.Tuple9.c","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple9/c.html","searchKeys":["c","val c: C","xyz.xenondevs.commons.tuple.Tuple9.c"]},{"name":"val d: D","description":"xyz.xenondevs.commons.tuple.Tuple10.d","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple10/d.html","searchKeys":["d","val d: D","xyz.xenondevs.commons.tuple.Tuple10.d"]},{"name":"val d: D","description":"xyz.xenondevs.commons.tuple.Tuple4.d","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple4/d.html","searchKeys":["d","val d: D","xyz.xenondevs.commons.tuple.Tuple4.d"]},{"name":"val d: D","description":"xyz.xenondevs.commons.tuple.Tuple5.d","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple5/d.html","searchKeys":["d","val d: D","xyz.xenondevs.commons.tuple.Tuple5.d"]},{"name":"val d: D","description":"xyz.xenondevs.commons.tuple.Tuple6.d","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple6/d.html","searchKeys":["d","val d: D","xyz.xenondevs.commons.tuple.Tuple6.d"]},{"name":"val d: D","description":"xyz.xenondevs.commons.tuple.Tuple7.d","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple7/d.html","searchKeys":["d","val d: D","xyz.xenondevs.commons.tuple.Tuple7.d"]},{"name":"val d: D","description":"xyz.xenondevs.commons.tuple.Tuple8.d","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple8/d.html","searchKeys":["d","val d: D","xyz.xenondevs.commons.tuple.Tuple8.d"]},{"name":"val d: D","description":"xyz.xenondevs.commons.tuple.Tuple9.d","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple9/d.html","searchKeys":["d","val d: D","xyz.xenondevs.commons.tuple.Tuple9.d"]},{"name":"val e: E","description":"xyz.xenondevs.commons.tuple.Tuple10.e","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple10/e.html","searchKeys":["e","val e: E","xyz.xenondevs.commons.tuple.Tuple10.e"]},{"name":"val e: E","description":"xyz.xenondevs.commons.tuple.Tuple5.e","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple5/e.html","searchKeys":["e","val e: E","xyz.xenondevs.commons.tuple.Tuple5.e"]},{"name":"val e: E","description":"xyz.xenondevs.commons.tuple.Tuple6.e","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple6/e.html","searchKeys":["e","val e: E","xyz.xenondevs.commons.tuple.Tuple6.e"]},{"name":"val e: E","description":"xyz.xenondevs.commons.tuple.Tuple7.e","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple7/e.html","searchKeys":["e","val e: E","xyz.xenondevs.commons.tuple.Tuple7.e"]},{"name":"val e: E","description":"xyz.xenondevs.commons.tuple.Tuple8.e","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple8/e.html","searchKeys":["e","val e: E","xyz.xenondevs.commons.tuple.Tuple8.e"]},{"name":"val e: E","description":"xyz.xenondevs.commons.tuple.Tuple9.e","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple9/e.html","searchKeys":["e","val e: E","xyz.xenondevs.commons.tuple.Tuple9.e"]},{"name":"val f: F","description":"xyz.xenondevs.commons.tuple.Tuple10.f","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple10/f.html","searchKeys":["f","val f: F","xyz.xenondevs.commons.tuple.Tuple10.f"]},{"name":"val f: F","description":"xyz.xenondevs.commons.tuple.Tuple6.f","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple6/f.html","searchKeys":["f","val f: F","xyz.xenondevs.commons.tuple.Tuple6.f"]},{"name":"val f: F","description":"xyz.xenondevs.commons.tuple.Tuple7.f","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple7/f.html","searchKeys":["f","val f: F","xyz.xenondevs.commons.tuple.Tuple7.f"]},{"name":"val f: F","description":"xyz.xenondevs.commons.tuple.Tuple8.f","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple8/f.html","searchKeys":["f","val f: F","xyz.xenondevs.commons.tuple.Tuple8.f"]},{"name":"val f: F","description":"xyz.xenondevs.commons.tuple.Tuple9.f","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple9/f.html","searchKeys":["f","val f: F","xyz.xenondevs.commons.tuple.Tuple9.f"]},{"name":"val g: G","description":"xyz.xenondevs.commons.tuple.Tuple10.g","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple10/g.html","searchKeys":["g","val g: G","xyz.xenondevs.commons.tuple.Tuple10.g"]},{"name":"val g: G","description":"xyz.xenondevs.commons.tuple.Tuple7.g","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple7/g.html","searchKeys":["g","val g: G","xyz.xenondevs.commons.tuple.Tuple7.g"]},{"name":"val g: G","description":"xyz.xenondevs.commons.tuple.Tuple8.g","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple8/g.html","searchKeys":["g","val g: G","xyz.xenondevs.commons.tuple.Tuple8.g"]},{"name":"val g: G","description":"xyz.xenondevs.commons.tuple.Tuple9.g","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple9/g.html","searchKeys":["g","val g: G","xyz.xenondevs.commons.tuple.Tuple9.g"]},{"name":"val h: H","description":"xyz.xenondevs.commons.tuple.Tuple10.h","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple10/h.html","searchKeys":["h","val h: H","xyz.xenondevs.commons.tuple.Tuple10.h"]},{"name":"val h: H","description":"xyz.xenondevs.commons.tuple.Tuple8.h","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple8/h.html","searchKeys":["h","val h: H","xyz.xenondevs.commons.tuple.Tuple8.h"]},{"name":"val h: H","description":"xyz.xenondevs.commons.tuple.Tuple9.h","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple9/h.html","searchKeys":["h","val h: H","xyz.xenondevs.commons.tuple.Tuple9.h"]},{"name":"val i: I","description":"xyz.xenondevs.commons.tuple.Tuple10.i","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple10/i.html","searchKeys":["i","val i: I","xyz.xenondevs.commons.tuple.Tuple10.i"]},{"name":"val i: I","description":"xyz.xenondevs.commons.tuple.Tuple9.i","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple9/i.html","searchKeys":["i","val i: I","xyz.xenondevs.commons.tuple.Tuple9.i"]},{"name":"val j: J","description":"xyz.xenondevs.commons.tuple.Tuple10.j","location":"commons-tuple/xyz.xenondevs.commons.tuple/-tuple10/j.html","searchKeys":["j","val j: J","xyz.xenondevs.commons.tuple.Tuple10.j"]},{"name":"class ObservableCollection<E>(val collection: MutableCollection<E>, handleUpdate: () -> Unit) : MutableCollection<E> ","description":"xyz.xenondevs.commons.collections.observed.ObservableCollection","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-collection/index.html","searchKeys":["ObservableCollection","class ObservableCollection<E>(val collection: MutableCollection<E>, handleUpdate: () -> Unit) : MutableCollection<E> ","xyz.xenondevs.commons.collections.observed.ObservableCollection"]},{"name":"class ObservableIterator<T>(val iterator: MutableIterator<T>, handleUpdate: () -> Unit) : MutableIterator<T> ","description":"xyz.xenondevs.commons.collections.observed.ObservableIterator","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-iterator/index.html","searchKeys":["ObservableIterator","class ObservableIterator<T>(val iterator: MutableIterator<T>, handleUpdate: () -> Unit) : MutableIterator<T> ","xyz.xenondevs.commons.collections.observed.ObservableIterator"]},{"name":"class ObservableList<E>(val list: MutableList<E>, handleUpdate: () -> Unit) : MutableList<E> ","description":"xyz.xenondevs.commons.collections.observed.ObservableList","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list/index.html","searchKeys":["ObservableList","class ObservableList<E>(val list: MutableList<E>, handleUpdate: () -> Unit) : MutableList<E> ","xyz.xenondevs.commons.collections.observed.ObservableList"]},{"name":"class ObservableListIterator<T>(val iterator: MutableListIterator<T>, handleUpdate: () -> Unit) : MutableListIterator<T> ","description":"xyz.xenondevs.commons.collections.observed.ObservableListIterator","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list-iterator/index.html","searchKeys":["ObservableListIterator","class ObservableListIterator<T>(val iterator: MutableListIterator<T>, handleUpdate: () -> Unit) : MutableListIterator<T> ","xyz.xenondevs.commons.collections.observed.ObservableListIterator"]},{"name":"class ObservableMap<K, V>(val map: MutableMap<K, V>, handleUpdate: () -> Unit) : MutableMap<K, V> ","description":"xyz.xenondevs.commons.collections.observed.ObservableMap","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-map/index.html","searchKeys":["ObservableMap","class ObservableMap<K, V>(val map: MutableMap<K, V>, handleUpdate: () -> Unit) : MutableMap<K, V> ","xyz.xenondevs.commons.collections.observed.ObservableMap"]},{"name":"class ObservableSet<E>(val set: MutableSet<E>, handleUpdate: () -> Unit) : MutableSet<E> ","description":"xyz.xenondevs.commons.collections.observed.ObservableSet","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-set/index.html","searchKeys":["ObservableSet","class ObservableSet<E>(val set: MutableSet<E>, handleUpdate: () -> Unit) : MutableSet<E> ","xyz.xenondevs.commons.collections.observed.ObservableSet"]},{"name":"constructor(collection: MutableCollection<E>, handleUpdate: () -> Unit)","description":"xyz.xenondevs.commons.collections.observed.ObservableCollection.ObservableCollection","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-collection/-observable-collection.html","searchKeys":["ObservableCollection","constructor(collection: MutableCollection<E>, handleUpdate: () -> Unit)","xyz.xenondevs.commons.collections.observed.ObservableCollection.ObservableCollection"]},{"name":"constructor(iterator: MutableIterator<T>, handleUpdate: () -> Unit)","description":"xyz.xenondevs.commons.collections.observed.ObservableIterator.ObservableIterator","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-iterator/-observable-iterator.html","searchKeys":["ObservableIterator","constructor(iterator: MutableIterator<T>, handleUpdate: () -> Unit)","xyz.xenondevs.commons.collections.observed.ObservableIterator.ObservableIterator"]},{"name":"constructor(iterator: MutableListIterator<T>, handleUpdate: () -> Unit)","description":"xyz.xenondevs.commons.collections.observed.ObservableListIterator.ObservableListIterator","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list-iterator/-observable-list-iterator.html","searchKeys":["ObservableListIterator","constructor(iterator: MutableListIterator<T>, handleUpdate: () -> Unit)","xyz.xenondevs.commons.collections.observed.ObservableListIterator.ObservableListIterator"]},{"name":"constructor(list: MutableList<E>, handleUpdate: () -> Unit)","description":"xyz.xenondevs.commons.collections.observed.ObservableList.ObservableList","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list/-observable-list.html","searchKeys":["ObservableList","constructor(list: MutableList<E>, handleUpdate: () -> Unit)","xyz.xenondevs.commons.collections.observed.ObservableList.ObservableList"]},{"name":"constructor(map: MutableMap<K, V>, handleUpdate: () -> Unit)","description":"xyz.xenondevs.commons.collections.observed.ObservableMap.ObservableMap","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-map/-observable-map.html","searchKeys":["ObservableMap","constructor(map: MutableMap<K, V>, handleUpdate: () -> Unit)","xyz.xenondevs.commons.collections.observed.ObservableMap.ObservableMap"]},{"name":"constructor(set: MutableSet<E>, handleUpdate: () -> Unit)","description":"xyz.xenondevs.commons.collections.observed.ObservableSet.ObservableSet","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-set/-observable-set.html","searchKeys":["ObservableSet","constructor(set: MutableSet<E>, handleUpdate: () -> Unit)","xyz.xenondevs.commons.collections.observed.ObservableSet.ObservableSet"]},{"name":"fun <E, C : Collection<E>> C.takeUnlessEmpty(): C?","description":"xyz.xenondevs.commons.collections.takeUnlessEmpty","location":"commons-collections/xyz.xenondevs.commons.collections/take-unless-empty.html","searchKeys":["takeUnlessEmpty","fun <E, C : Collection<E>> C.takeUnlessEmpty(): C?","xyz.xenondevs.commons.collections.takeUnlessEmpty"]},{"name":"fun <E> Collection<E>.intersects(other: Collection<E>): Boolean","description":"xyz.xenondevs.commons.collections.intersects","location":"commons-collections/xyz.xenondevs.commons.collections/intersects.html","searchKeys":["intersects","fun <E> Collection<E>.intersects(other: Collection<E>): Boolean","xyz.xenondevs.commons.collections.intersects"]},{"name":"fun <E> List<E>.contentEquals(other: List<E>): Boolean","description":"xyz.xenondevs.commons.collections.contentEquals","location":"commons-collections/xyz.xenondevs.commons.collections/content-equals.html","searchKeys":["contentEquals","fun <E> List<E>.contentEquals(other: List<E>): Boolean","xyz.xenondevs.commons.collections.contentEquals"]},{"name":"fun <E> MutableIterable<E>.poll(): E?","description":"xyz.xenondevs.commons.collections.poll","location":"commons-collections/xyz.xenondevs.commons.collections/poll.html","searchKeys":["poll","fun <E> MutableIterable<E>.poll(): E?","xyz.xenondevs.commons.collections.poll"]},{"name":"fun <E> Set<E>.contentEquals(other: Set<E>): Boolean","description":"xyz.xenondevs.commons.collections.contentEquals","location":"commons-collections/xyz.xenondevs.commons.collections/content-equals.html","searchKeys":["contentEquals","fun <E> Set<E>.contentEquals(other: Set<E>): Boolean","xyz.xenondevs.commons.collections.contentEquals"]},{"name":"fun <K, V : Any, C : MutableMap<K, V>> Map<K, V?>.filterValuesNotNullTo(destination: C): C","description":"xyz.xenondevs.commons.collections.filterValuesNotNullTo","location":"commons-collections/xyz.xenondevs.commons.collections/filter-values-not-null-to.html","searchKeys":["filterValuesNotNullTo","fun <K, V : Any, C : MutableMap<K, V>> Map<K, V?>.filterValuesNotNullTo(destination: C): C","xyz.xenondevs.commons.collections.filterValuesNotNullTo"]},{"name":"fun <K, V : Any> Map<K, V?>.filterValuesNotNull(): Map<K, V>","description":"xyz.xenondevs.commons.collections.filterValuesNotNull","location":"commons-collections/xyz.xenondevs.commons.collections/filter-values-not-null.html","searchKeys":["filterValuesNotNull","fun <K, V : Any> Map<K, V?>.filterValuesNotNull(): Map<K, V>","xyz.xenondevs.commons.collections.filterValuesNotNull"]},{"name":"fun <K, V, C : MutableCollection<in V>> Map<K, V>.selectValuesTo(destination: C, keys: Iterable<K>): C","description":"xyz.xenondevs.commons.collections.selectValuesTo","location":"commons-collections/xyz.xenondevs.commons.collections/select-values-to.html","searchKeys":["selectValuesTo","fun <K, V, C : MutableCollection<in V>> Map<K, V>.selectValuesTo(destination: C, keys: Iterable<K>): C","xyz.xenondevs.commons.collections.selectValuesTo"]},{"name":"fun <K, V, M : Map<K, V>> M.takeUnlessEmpty(): M?","description":"xyz.xenondevs.commons.collections.takeUnlessEmpty","location":"commons-collections/xyz.xenondevs.commons.collections/take-unless-empty.html","searchKeys":["takeUnlessEmpty","fun <K, V, M : Map<K, V>> M.takeUnlessEmpty(): M?","xyz.xenondevs.commons.collections.takeUnlessEmpty"]},{"name":"fun <K, V> Map<K, V>.selectValues(keys: Iterable<K>): List<V>","description":"xyz.xenondevs.commons.collections.selectValues","location":"commons-collections/xyz.xenondevs.commons.collections/select-values.html","searchKeys":["selectValues","fun <K, V> Map<K, V>.selectValues(keys: Iterable<K>): List<V>","xyz.xenondevs.commons.collections.selectValues"]},{"name":"fun <K, V> MutableMap<K, V>.poll(): Map.Entry<K, V>?","description":"xyz.xenondevs.commons.collections.poll","location":"commons-collections/xyz.xenondevs.commons.collections/poll.html","searchKeys":["poll","fun <K, V> MutableMap<K, V>.poll(): Map.Entry<K, V>?","xyz.xenondevs.commons.collections.poll"]},{"name":"fun <K, V> MutableMap<K, V>.putOrRemove(key: K, value: V?): V?","description":"xyz.xenondevs.commons.collections.putOrRemove","location":"commons-collections/xyz.xenondevs.commons.collections/put-or-remove.html","searchKeys":["putOrRemove","fun <K, V> MutableMap<K, V>.putOrRemove(key: K, value: V?): V?","xyz.xenondevs.commons.collections.putOrRemove"]},{"name":"fun <K, V> treeMapOf(vararg pairs: Pair<K, V>): TreeMap<K, V>","description":"xyz.xenondevs.commons.collections.treeMapOf","location":"commons-collections/xyz.xenondevs.commons.collections/tree-map-of.html","searchKeys":["treeMapOf","fun <K, V> treeMapOf(vararg pairs: Pair<K, V>): TreeMap<K, V>","xyz.xenondevs.commons.collections.treeMapOf"]},{"name":"fun <K> concurrentHashSet(): MutableSet<K>","description":"xyz.xenondevs.commons.collections.concurrentHashSet","location":"commons-collections/xyz.xenondevs.commons.collections/concurrent-hash-set.html","searchKeys":["concurrentHashSet","fun <K> concurrentHashSet(): MutableSet<K>","xyz.xenondevs.commons.collections.concurrentHashSet"]},{"name":"fun <K> concurrentHashSetOf(vararg elements: K): MutableSet<K>","description":"xyz.xenondevs.commons.collections.concurrentHashSetOf","location":"commons-collections/xyz.xenondevs.commons.collections/concurrent-hash-set-of.html","searchKeys":["concurrentHashSetOf","fun <K> concurrentHashSetOf(vararg elements: K): MutableSet<K>","xyz.xenondevs.commons.collections.concurrentHashSetOf"]},{"name":"fun <K> identityHashSet(): MutableSet<K>","description":"xyz.xenondevs.commons.collections.identityHashSet","location":"commons-collections/xyz.xenondevs.commons.collections/identity-hash-set.html","searchKeys":["identityHashSet","fun <K> identityHashSet(): MutableSet<K>","xyz.xenondevs.commons.collections.identityHashSet"]},{"name":"fun <K> identityHashSetOf(vararg elements: K): MutableSet<K>","description":"xyz.xenondevs.commons.collections.identityHashSetOf","location":"commons-collections/xyz.xenondevs.commons.collections/identity-hash-set-of.html","searchKeys":["identityHashSetOf","fun <K> identityHashSetOf(vararg elements: K): MutableSet<K>","xyz.xenondevs.commons.collections.identityHashSetOf"]},{"name":"fun <K> weakHashSet(): MutableSet<K>","description":"xyz.xenondevs.commons.collections.weakHashSet","location":"commons-collections/xyz.xenondevs.commons.collections/weak-hash-set.html","searchKeys":["weakHashSet","fun <K> weakHashSet(): MutableSet<K>","xyz.xenondevs.commons.collections.weakHashSet"]},{"name":"fun <K> weakHashSet(initialCapacity: Int): MutableSet<K>","description":"xyz.xenondevs.commons.collections.weakHashSet","location":"commons-collections/xyz.xenondevs.commons.collections/weak-hash-set.html","searchKeys":["weakHashSet","fun <K> weakHashSet(initialCapacity: Int): MutableSet<K>","xyz.xenondevs.commons.collections.weakHashSet"]},{"name":"fun <K> weakHashSetOf(vararg elements: K): MutableSet<K>","description":"xyz.xenondevs.commons.collections.weakHashSetOf","location":"commons-collections/xyz.xenondevs.commons.collections/weak-hash-set-of.html","searchKeys":["weakHashSetOf","fun <K> weakHashSetOf(vararg elements: K): MutableSet<K>","xyz.xenondevs.commons.collections.weakHashSetOf"]},{"name":"fun <T, B> sortDependenciesMapped(collection: Collection<T>, dependenciesMapper: (T) -> Set<B>, mapper: (T) -> B): List<T>","description":"xyz.xenondevs.commons.collections.CollectionUtils.sortDependenciesMapped","location":"commons-collections/xyz.xenondevs.commons.collections/-collection-utils/sort-dependencies-mapped.html","searchKeys":["sortDependenciesMapped","fun <T, B> sortDependenciesMapped(collection: Collection<T>, dependenciesMapper: (T) -> Set<B>, mapper: (T) -> B): List<T>","xyz.xenondevs.commons.collections.CollectionUtils.sortDependenciesMapped"]},{"name":"fun <T, R> Sequence<T>.flatMap(transform: (T) -> Array<R>): Sequence<R>","description":"xyz.xenondevs.commons.collections.flatMap","location":"commons-collections/xyz.xenondevs.commons.collections/flat-map.html","searchKeys":["flatMap","fun <T, R> Sequence<T>.flatMap(transform: (T) -> Array<R>): Sequence<R>","xyz.xenondevs.commons.collections.flatMap"]},{"name":"fun <T> Array<T>.getCoerced(index: Int): T","description":"xyz.xenondevs.commons.collections.getCoerced","location":"commons-collections/xyz.xenondevs.commons.collections/get-coerced.html","searchKeys":["getCoerced","fun <T> Array<T>.getCoerced(index: Int): T","xyz.xenondevs.commons.collections.getCoerced"]},{"name":"fun <T> Array<T>.getMod(index: Int): T","description":"xyz.xenondevs.commons.collections.getMod","location":"commons-collections/xyz.xenondevs.commons.collections/get-mod.html","searchKeys":["getMod","fun <T> Array<T>.getMod(index: Int): T","xyz.xenondevs.commons.collections.getMod"]},{"name":"fun <T> List<T>.after(element: T, step: Int = 1): T","description":"xyz.xenondevs.commons.collections.after","location":"commons-collections/xyz.xenondevs.commons.collections/after.html","searchKeys":["after","fun <T> List<T>.after(element: T, step: Int = 1): T","xyz.xenondevs.commons.collections.after"]},{"name":"fun <T> List<T>.before(element: T, step: Int = 1): T","description":"xyz.xenondevs.commons.collections.before","location":"commons-collections/xyz.xenondevs.commons.collections/before.html","searchKeys":["before","fun <T> List<T>.before(element: T, step: Int = 1): T","xyz.xenondevs.commons.collections.before"]},{"name":"fun <T> List<T>.eachRepeated(times: Int): List<T>","description":"xyz.xenondevs.commons.collections.eachRepeated","location":"commons-collections/xyz.xenondevs.commons.collections/each-repeated.html","searchKeys":["eachRepeated","fun <T> List<T>.eachRepeated(times: Int): List<T>","xyz.xenondevs.commons.collections.eachRepeated"]},{"name":"fun <T> List<T>.getCoerced(index: Int): T","description":"xyz.xenondevs.commons.collections.getCoerced","location":"commons-collections/xyz.xenondevs.commons.collections/get-coerced.html","searchKeys":["getCoerced","fun <T> List<T>.getCoerced(index: Int): T","xyz.xenondevs.commons.collections.getCoerced"]},{"name":"fun <T> List<T>.getMod(index: Int): T","description":"xyz.xenondevs.commons.collections.getMod","location":"commons-collections/xyz.xenondevs.commons.collections/get-mod.html","searchKeys":["getMod","fun <T> List<T>.getMod(index: Int): T","xyz.xenondevs.commons.collections.getMod"]},{"name":"fun <T> List<T>.repeated(times: Int): List<T>","description":"xyz.xenondevs.commons.collections.repeated","location":"commons-collections/xyz.xenondevs.commons.collections/repeated.html","searchKeys":["repeated","fun <T> List<T>.repeated(times: Int): List<T>","xyz.xenondevs.commons.collections.repeated"]},{"name":"fun <T> MutableList<T>.rotateLeft()","description":"xyz.xenondevs.commons.collections.rotateLeft","location":"commons-collections/xyz.xenondevs.commons.collections/rotate-left.html","searchKeys":["rotateLeft","fun <T> MutableList<T>.rotateLeft()","xyz.xenondevs.commons.collections.rotateLeft"]},{"name":"fun <T> MutableList<T>.rotateRight()","description":"xyz.xenondevs.commons.collections.rotateRight","location":"commons-collections/xyz.xenondevs.commons.collections/rotate-right.html","searchKeys":["rotateRight","fun <T> MutableList<T>.rotateRight()","xyz.xenondevs.commons.collections.rotateRight"]},{"name":"fun <T> Sequence<T>.sumOf(selector: (T) -> Float): Float","description":"xyz.xenondevs.commons.collections.sumOf","location":"commons-collections/xyz.xenondevs.commons.collections/sum-of.html","searchKeys":["sumOf","fun <T> Sequence<T>.sumOf(selector: (T) -> Float): Float","xyz.xenondevs.commons.collections.sumOf"]},{"name":"fun <T> poolDependencies(collection: Collection<T>, dependenciesMapper: (T) -> Set<T>): Set<Set<T>>","description":"xyz.xenondevs.commons.collections.CollectionUtils.poolDependencies","location":"commons-collections/xyz.xenondevs.commons.collections/-collection-utils/pool-dependencies.html","searchKeys":["poolDependencies","fun <T> poolDependencies(collection: Collection<T>, dependenciesMapper: (T) -> Set<T>): Set<Set<T>>","xyz.xenondevs.commons.collections.CollectionUtils.poolDependencies"]},{"name":"fun <T> sortDependencies(collection: Collection<T>, beforeThisMapper: (T) -> Set<T>, afterThisMapper: (T) -> Set<T>): List<T>","description":"xyz.xenondevs.commons.collections.CollectionUtils.sortDependencies","location":"commons-collections/xyz.xenondevs.commons.collections/-collection-utils/sort-dependencies.html","searchKeys":["sortDependencies","fun <T> sortDependencies(collection: Collection<T>, beforeThisMapper: (T) -> Set<T>, afterThisMapper: (T) -> Set<T>): List<T>","xyz.xenondevs.commons.collections.CollectionUtils.sortDependencies"]},{"name":"fun <T> sortDependencies(collection: Collection<T>, dependenciesMapper: (T) -> Set<T>): List<T>","description":"xyz.xenondevs.commons.collections.CollectionUtils.sortDependencies","location":"commons-collections/xyz.xenondevs.commons.collections/-collection-utils/sort-dependencies.html","searchKeys":["sortDependencies","fun <T> sortDependencies(collection: Collection<T>, dependenciesMapper: (T) -> Set<T>): List<T>","xyz.xenondevs.commons.collections.CollectionUtils.sortDependencies"]},{"name":"fun Collection<*>?.isNotNullOrEmpty(): Boolean","description":"xyz.xenondevs.commons.collections.isNotNullOrEmpty","location":"commons-collections/xyz.xenondevs.commons.collections/is-not-null-or-empty.html","searchKeys":["isNotNullOrEmpty","fun Collection<*>?.isNotNullOrEmpty(): Boolean","xyz.xenondevs.commons.collections.isNotNullOrEmpty"]},{"name":"fun Collection<*>?.isNullOrEmpty(): Boolean","description":"xyz.xenondevs.commons.collections.isNullOrEmpty","location":"commons-collections/xyz.xenondevs.commons.collections/is-null-or-empty.html","searchKeys":["isNullOrEmpty","fun Collection<*>?.isNullOrEmpty(): Boolean","xyz.xenondevs.commons.collections.isNullOrEmpty"]},{"name":"fun Map<*, *>?.isNotNullOrEmpty(): Boolean","description":"xyz.xenondevs.commons.collections.isNotNullOrEmpty","location":"commons-collections/xyz.xenondevs.commons.collections/is-not-null-or-empty.html","searchKeys":["isNotNullOrEmpty","fun Map<*, *>?.isNotNullOrEmpty(): Boolean","xyz.xenondevs.commons.collections.isNotNullOrEmpty"]},{"name":"fun Map<*, *>?.isNullOrEmpty(): Boolean","description":"xyz.xenondevs.commons.collections.isNullOrEmpty","location":"commons-collections/xyz.xenondevs.commons.collections/is-null-or-empty.html","searchKeys":["isNullOrEmpty","fun Map<*, *>?.isNullOrEmpty(): Boolean","xyz.xenondevs.commons.collections.isNullOrEmpty"]},{"name":"inline fun <E : Enum<E>> Array<E>.toEnumSet(): EnumSet<E>","description":"xyz.xenondevs.commons.collections.toEnumSet","location":"commons-collections/xyz.xenondevs.commons.collections/to-enum-set.html","searchKeys":["toEnumSet","inline fun <E : Enum<E>> Array<E>.toEnumSet(): EnumSet<E>","xyz.xenondevs.commons.collections.toEnumSet"]},{"name":"inline fun <E : Enum<E>> Collection<E>.toEnumSet(): EnumSet<E>","description":"xyz.xenondevs.commons.collections.toEnumSet","location":"commons-collections/xyz.xenondevs.commons.collections/to-enum-set.html","searchKeys":["toEnumSet","inline fun <E : Enum<E>> Collection<E>.toEnumSet(): EnumSet<E>","xyz.xenondevs.commons.collections.toEnumSet"]},{"name":"inline fun <E : Enum<E>> E.next(stepSize: Int = 1): E","description":"xyz.xenondevs.commons.collections.next","location":"commons-collections/xyz.xenondevs.commons.collections/next.html","searchKeys":["next","inline fun <E : Enum<E>> E.next(stepSize: Int = 1): E","xyz.xenondevs.commons.collections.next"]},{"name":"inline fun <E : Enum<E>> E.nextOrNull(stepSize: Int = 1): E?","description":"xyz.xenondevs.commons.collections.nextOrNull","location":"commons-collections/xyz.xenondevs.commons.collections/next-or-null.html","searchKeys":["nextOrNull","inline fun <E : Enum<E>> E.nextOrNull(stepSize: Int = 1): E?","xyz.xenondevs.commons.collections.nextOrNull"]},{"name":"inline fun <E : Enum<E>> E.previous(stepSize: Int = 1): E","description":"xyz.xenondevs.commons.collections.previous","location":"commons-collections/xyz.xenondevs.commons.collections/previous.html","searchKeys":["previous","inline fun <E : Enum<E>> E.previous(stepSize: Int = 1): E","xyz.xenondevs.commons.collections.previous"]},{"name":"inline fun <E : Enum<E>> E.previousOrNull(stepSize: Int = 1): E?","description":"xyz.xenondevs.commons.collections.previousOrNull","location":"commons-collections/xyz.xenondevs.commons.collections/previous-or-null.html","searchKeys":["previousOrNull","inline fun <E : Enum<E>> E.previousOrNull(stepSize: Int = 1): E?","xyz.xenondevs.commons.collections.previousOrNull"]},{"name":"inline fun <E : Enum<E>> Iterable<E>.toEnumSet(): EnumSet<E>","description":"xyz.xenondevs.commons.collections.toEnumSet","location":"commons-collections/xyz.xenondevs.commons.collections/to-enum-set.html","searchKeys":["toEnumSet","inline fun <E : Enum<E>> Iterable<E>.toEnumSet(): EnumSet<E>","xyz.xenondevs.commons.collections.toEnumSet"]},{"name":"inline fun <E : Enum<E>> Sequence<E>.toEnumSet(): EnumSet<E>","description":"xyz.xenondevs.commons.collections.toEnumSet","location":"commons-collections/xyz.xenondevs.commons.collections/to-enum-set.html","searchKeys":["toEnumSet","inline fun <E : Enum<E>> Sequence<E>.toEnumSet(): EnumSet<E>","xyz.xenondevs.commons.collections.toEnumSet"]},{"name":"inline fun <E : Enum<E>> enumSet(): EnumSet<E>","description":"xyz.xenondevs.commons.collections.enumSet","location":"commons-collections/xyz.xenondevs.commons.collections/enum-set.html","searchKeys":["enumSet","inline fun <E : Enum<E>> enumSet(): EnumSet<E>","xyz.xenondevs.commons.collections.enumSet"]},{"name":"inline fun <E : Enum<E>> enumSetOf(vararg elements: E): EnumSet<E>","description":"xyz.xenondevs.commons.collections.enumSetOf","location":"commons-collections/xyz.xenondevs.commons.collections/enum-set-of.html","searchKeys":["enumSetOf","inline fun <E : Enum<E>> enumSetOf(vararg elements: E): EnumSet<E>","xyz.xenondevs.commons.collections.enumSetOf"]},{"name":"inline fun <E> MutableIterable<E>.pollFirstWhere(test: (E) -> Boolean): E?","description":"xyz.xenondevs.commons.collections.pollFirstWhere","location":"commons-collections/xyz.xenondevs.commons.collections/poll-first-where.html","searchKeys":["pollFirstWhere","inline fun <E> MutableIterable<E>.pollFirstWhere(test: (E) -> Boolean): E?","xyz.xenondevs.commons.collections.pollFirstWhere"]},{"name":"inline fun <E> MutableIterable<E>.removeFirstWhere(test: (E) -> Boolean): Boolean","description":"xyz.xenondevs.commons.collections.removeFirstWhere","location":"commons-collections/xyz.xenondevs.commons.collections/remove-first-where.html","searchKeys":["removeFirstWhere","inline fun <E> MutableIterable<E>.removeFirstWhere(test: (E) -> Boolean): Boolean","xyz.xenondevs.commons.collections.removeFirstWhere"]},{"name":"inline fun <K : Enum<K>, V> Map<K, V>.toEnumMap(): EnumMap<K, V>","description":"xyz.xenondevs.commons.collections.toEnumMap","location":"commons-collections/xyz.xenondevs.commons.collections/to-enum-map.html","searchKeys":["toEnumMap","inline fun <K : Enum<K>, V> Map<K, V>.toEnumMap(): EnumMap<K, V>","xyz.xenondevs.commons.collections.toEnumMap"]},{"name":"inline fun <K : Enum<K>, V> enumMap(): EnumMap<K, V>","description":"xyz.xenondevs.commons.collections.enumMap","location":"commons-collections/xyz.xenondevs.commons.collections/enum-map.html","searchKeys":["enumMap","inline fun <K : Enum<K>, V> enumMap(): EnumMap<K, V>","xyz.xenondevs.commons.collections.enumMap"]},{"name":"inline fun <K : Enum<K>, V> enumMap(initializer: (K) -> V): EnumMap<K, V>","description":"xyz.xenondevs.commons.collections.enumMap","location":"commons-collections/xyz.xenondevs.commons.collections/enum-map.html","searchKeys":["enumMap","inline fun <K : Enum<K>, V> enumMap(initializer: (K) -> V): EnumMap<K, V>","xyz.xenondevs.commons.collections.enumMap"]},{"name":"inline fun <K : Enum<K>, V> enumMap(map: Map<K, V>): EnumMap<K, V>","description":"xyz.xenondevs.commons.collections.enumMap","location":"commons-collections/xyz.xenondevs.commons.collections/enum-map.html","searchKeys":["enumMap","inline fun <K : Enum<K>, V> enumMap(map: Map<K, V>): EnumMap<K, V>","xyz.xenondevs.commons.collections.enumMap"]},{"name":"inline fun <K : Enum<K>, V> enumMapOf(vararg pairs: Pair<K, V>): EnumMap<K, V>","description":"xyz.xenondevs.commons.collections.enumMapOf","location":"commons-collections/xyz.xenondevs.commons.collections/enum-map-of.html","searchKeys":["enumMapOf","inline fun <K : Enum<K>, V> enumMapOf(vararg pairs: Pair<K, V>): EnumMap<K, V>","xyz.xenondevs.commons.collections.enumMapOf"]},{"name":"inline fun <K, V, M : MutableMap<K, V>> Iterable<K>.associateWithNotNullTo(destination: M, valueSelector: (K) -> V?): M","description":"xyz.xenondevs.commons.collections.associateWithNotNullTo","location":"commons-collections/xyz.xenondevs.commons.collections/associate-with-not-null-to.html","searchKeys":["associateWithNotNullTo","inline fun <K, V, M : MutableMap<K, V>> Iterable<K>.associateWithNotNullTo(destination: M, valueSelector: (K) -> V?): M","xyz.xenondevs.commons.collections.associateWithNotNullTo"]},{"name":"inline fun <K, V, M : MutableMap<K, V>> Iterable<V>.associateByNotNullTo(destination: M, keySelector: (V) -> K?): M","description":"xyz.xenondevs.commons.collections.associateByNotNullTo","location":"commons-collections/xyz.xenondevs.commons.collections/associate-by-not-null-to.html","searchKeys":["associateByNotNullTo","inline fun <K, V, M : MutableMap<K, V>> Iterable<V>.associateByNotNullTo(destination: M, keySelector: (V) -> K?): M","xyz.xenondevs.commons.collections.associateByNotNullTo"]},{"name":"inline fun <K, V, R, C : MutableCollection<in R>> Map<K, V>.flatMapTo(destination: C, transform: (Map.Entry<K, V>) -> Array<R>): C","description":"xyz.xenondevs.commons.collections.flatMapTo","location":"commons-collections/xyz.xenondevs.commons.collections/flat-map-to.html","searchKeys":["flatMapTo","inline fun <K, V, R, C : MutableCollection<in R>> Map<K, V>.flatMapTo(destination: C, transform: (Map.Entry<K, V>) -> Array<R>): C","xyz.xenondevs.commons.collections.flatMapTo"]},{"name":"inline fun <K, V, R, M : MutableMap<K, R>> Map<K, V>.mapValuesNotNullTo(destination: M, valueSelector: (Map.Entry<K, V>) -> R?): M","description":"xyz.xenondevs.commons.collections.mapValuesNotNullTo","location":"commons-collections/xyz.xenondevs.commons.collections/map-values-not-null-to.html","searchKeys":["mapValuesNotNullTo","inline fun <K, V, R, M : MutableMap<K, R>> Map<K, V>.mapValuesNotNullTo(destination: M, valueSelector: (Map.Entry<K, V>) -> R?): M","xyz.xenondevs.commons.collections.mapValuesNotNullTo"]},{"name":"inline fun <K, V, R, M : MutableMap<R, V>> Map<K, V>.mapKeysNotNullTo(destination: M, keySelector: (Map.Entry<K, V>) -> R?): M","description":"xyz.xenondevs.commons.collections.mapKeysNotNullTo","location":"commons-collections/xyz.xenondevs.commons.collections/map-keys-not-null-to.html","searchKeys":["mapKeysNotNullTo","inline fun <K, V, R, M : MutableMap<R, V>> Map<K, V>.mapKeysNotNullTo(destination: M, keySelector: (Map.Entry<K, V>) -> R?): M","xyz.xenondevs.commons.collections.mapKeysNotNullTo"]},{"name":"inline fun <K, V, R> Map<K, V>.flatMap(transform: (Map.Entry<K, V>) -> Array<R>): List<R>","description":"xyz.xenondevs.commons.collections.flatMap","location":"commons-collections/xyz.xenondevs.commons.collections/flat-map.html","searchKeys":["flatMap","inline fun <K, V, R> Map<K, V>.flatMap(transform: (Map.Entry<K, V>) -> Array<R>): List<R>","xyz.xenondevs.commons.collections.flatMap"]},{"name":"inline fun <K, V, R> Map<K, V>.mapKeysNotNull(keySelector: (Map.Entry<K, V>) -> R?): Map<R, V>","description":"xyz.xenondevs.commons.collections.mapKeysNotNull","location":"commons-collections/xyz.xenondevs.commons.collections/map-keys-not-null.html","searchKeys":["mapKeysNotNull","inline fun <K, V, R> Map<K, V>.mapKeysNotNull(keySelector: (Map.Entry<K, V>) -> R?): Map<R, V>","xyz.xenondevs.commons.collections.mapKeysNotNull"]},{"name":"inline fun <K, V, R> Map<K, V>.mapValuesNotNull(valueSelector: (Map.Entry<K, V>) -> R?): Map<K, R>","description":"xyz.xenondevs.commons.collections.mapValuesNotNull","location":"commons-collections/xyz.xenondevs.commons.collections/map-values-not-null.html","searchKeys":["mapValuesNotNull","inline fun <K, V, R> Map<K, V>.mapValuesNotNull(valueSelector: (Map.Entry<K, V>) -> R?): Map<K, R>","xyz.xenondevs.commons.collections.mapValuesNotNull"]},{"name":"inline fun <K, V> Iterable<K>.associateWithNotNull(valueSelector: (K) -> V?): Map<K, V>","description":"xyz.xenondevs.commons.collections.associateWithNotNull","location":"commons-collections/xyz.xenondevs.commons.collections/associate-with-not-null.html","searchKeys":["associateWithNotNull","inline fun <K, V> Iterable<K>.associateWithNotNull(valueSelector: (K) -> V?): Map<K, V>","xyz.xenondevs.commons.collections.associateWithNotNull"]},{"name":"inline fun <K, V> Iterable<V>.associateByNotNull(keySelector: (V) -> K?): Map<K, V>","description":"xyz.xenondevs.commons.collections.associateByNotNull","location":"commons-collections/xyz.xenondevs.commons.collections/associate-by-not-null.html","searchKeys":["associateByNotNull","inline fun <K, V> Iterable<V>.associateByNotNull(keySelector: (V) -> K?): Map<K, V>","xyz.xenondevs.commons.collections.associateByNotNull"]},{"name":"inline fun <K, V> MutableMap<K, V>.removeIf(predicate: (Map.Entry<K, V>) -> Boolean): MutableMap<K, V>","description":"xyz.xenondevs.commons.collections.removeIf","location":"commons-collections/xyz.xenondevs.commons.collections/remove-if.html","searchKeys":["removeIf","inline fun <K, V> MutableMap<K, V>.removeIf(predicate: (Map.Entry<K, V>) -> Boolean): MutableMap<K, V>","xyz.xenondevs.commons.collections.removeIf"]},{"name":"inline fun <R, K, V, C : MutableMap<K, R>> Map<K, V>.filterIsInstanceValuesTo(destination: C): C","description":"xyz.xenondevs.commons.collections.filterIsInstanceValuesTo","location":"commons-collections/xyz.xenondevs.commons.collections/filter-is-instance-values-to.html","searchKeys":["filterIsInstanceValuesTo","inline fun <R, K, V, C : MutableMap<K, R>> Map<K, V>.filterIsInstanceValuesTo(destination: C): C","xyz.xenondevs.commons.collections.filterIsInstanceValuesTo"]},{"name":"inline fun <R, K, V, C : MutableMap<R, V>> Map<K, V>.filterIsInstanceKeysTo(destination: C): C","description":"xyz.xenondevs.commons.collections.filterIsInstanceKeysTo","location":"commons-collections/xyz.xenondevs.commons.collections/filter-is-instance-keys-to.html","searchKeys":["filterIsInstanceKeysTo","inline fun <R, K, V, C : MutableMap<R, V>> Map<K, V>.filterIsInstanceKeysTo(destination: C): C","xyz.xenondevs.commons.collections.filterIsInstanceKeysTo"]},{"name":"inline fun <R, K, V> Map<K, V>.filterIsInstanceKeys(): Map<R, V>","description":"xyz.xenondevs.commons.collections.filterIsInstanceKeys","location":"commons-collections/xyz.xenondevs.commons.collections/filter-is-instance-keys.html","searchKeys":["filterIsInstanceKeys","inline fun <R, K, V> Map<K, V>.filterIsInstanceKeys(): Map<R, V>","xyz.xenondevs.commons.collections.filterIsInstanceKeys"]},{"name":"inline fun <R, K, V> Map<K, V>.filterIsInstanceValues(): Map<K, R>","description":"xyz.xenondevs.commons.collections.filterIsInstanceValues","location":"commons-collections/xyz.xenondevs.commons.collections/filter-is-instance-values.html","searchKeys":["filterIsInstanceValues","inline fun <R, K, V> Map<K, V>.filterIsInstanceValues(): Map<K, R>","xyz.xenondevs.commons.collections.filterIsInstanceValues"]},{"name":"inline fun <R> Iterable<*>.findNthOfType(n: Int): R","description":"xyz.xenondevs.commons.collections.findNthOfType","location":"commons-collections/xyz.xenondevs.commons.collections/find-nth-of-type.html","searchKeys":["findNthOfType","inline fun <R> Iterable<*>.findNthOfType(n: Int): R","xyz.xenondevs.commons.collections.findNthOfType"]},{"name":"inline fun <R> Iterable<*>.findNthOfTypeOrNull(n: Int): R?","description":"xyz.xenondevs.commons.collections.findNthOfTypeOrNull","location":"commons-collections/xyz.xenondevs.commons.collections/find-nth-of-type-or-null.html","searchKeys":["findNthOfTypeOrNull","inline fun <R> Iterable<*>.findNthOfTypeOrNull(n: Int): R?","xyz.xenondevs.commons.collections.findNthOfTypeOrNull"]},{"name":"inline fun <R> Iterable<*>.firstInstanceOf(): R","description":"xyz.xenondevs.commons.collections.firstInstanceOf","location":"commons-collections/xyz.xenondevs.commons.collections/first-instance-of.html","searchKeys":["firstInstanceOf","inline fun <R> Iterable<*>.firstInstanceOf(): R","xyz.xenondevs.commons.collections.firstInstanceOf"]},{"name":"inline fun <R> Iterable<*>.firstInstanceOfOrNull(): R?","description":"xyz.xenondevs.commons.collections.firstInstanceOfOrNull","location":"commons-collections/xyz.xenondevs.commons.collections/first-instance-of-or-null.html","searchKeys":["firstInstanceOfOrNull","inline fun <R> Iterable<*>.firstInstanceOfOrNull(): R?","xyz.xenondevs.commons.collections.firstInstanceOfOrNull"]},{"name":"inline fun <T, K, V> Iterable<T>.associateNotNull(transform: (T) -> Pair<K, V>?): Map<K, V>","description":"xyz.xenondevs.commons.collections.associateNotNull","location":"commons-collections/xyz.xenondevs.commons.collections/associate-not-null.html","searchKeys":["associateNotNull","inline fun <T, K, V> Iterable<T>.associateNotNull(transform: (T) -> Pair<K, V>?): Map<K, V>","xyz.xenondevs.commons.collections.associateNotNull"]},{"name":"inline fun <T, K, V> Iterable<T>.associateNotNullTo(destination: MutableMap<K, V>, transform: (T) -> Pair<K, V>?): Map<K, V>","description":"xyz.xenondevs.commons.collections.associateNotNullTo","location":"commons-collections/xyz.xenondevs.commons.collections/associate-not-null-to.html","searchKeys":["associateNotNullTo","inline fun <T, K, V> Iterable<T>.associateNotNullTo(destination: MutableMap<K, V>, transform: (T) -> Pair<K, V>?): Map<K, V>","xyz.xenondevs.commons.collections.associateNotNullTo"]},{"name":"inline fun <T, R, C : MutableCollection<in R>> Iterable<T>.flatMapTo(destination: C, transform: (T) -> Array<R>): C","description":"xyz.xenondevs.commons.collections.flatMapTo","location":"commons-collections/xyz.xenondevs.commons.collections/flat-map-to.html","searchKeys":["flatMapTo","inline fun <T, R, C : MutableCollection<in R>> Iterable<T>.flatMapTo(destination: C, transform: (T) -> Array<R>): C","xyz.xenondevs.commons.collections.flatMapTo"]},{"name":"inline fun <T, R> Array<T>.mapToArray(transform: (T) -> R): Array<R>","description":"xyz.xenondevs.commons.collections.mapToArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-array.html","searchKeys":["mapToArray","inline fun <T, R> Array<T>.mapToArray(transform: (T) -> R): Array<R>","xyz.xenondevs.commons.collections.mapToArray"]},{"name":"inline fun <T, R> Collection<T>.mapToArray(transform: (T) -> R): Array<R>","description":"xyz.xenondevs.commons.collections.mapToArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-array.html","searchKeys":["mapToArray","inline fun <T, R> Collection<T>.mapToArray(transform: (T) -> R): Array<R>","xyz.xenondevs.commons.collections.mapToArray"]},{"name":"inline fun <T, R> Iterable<T>.flatMap(transform: (T) -> Array<R>): List<R>","description":"xyz.xenondevs.commons.collections.flatMap","location":"commons-collections/xyz.xenondevs.commons.collections/flat-map.html","searchKeys":["flatMap","inline fun <T, R> Iterable<T>.flatMap(transform: (T) -> Array<R>): List<R>","xyz.xenondevs.commons.collections.flatMap"]},{"name":"inline fun <T> Array<T>.mapToBooleanArray(transform: (T) -> Boolean): BooleanArray","description":"xyz.xenondevs.commons.collections.mapToBooleanArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-boolean-array.html","searchKeys":["mapToBooleanArray","inline fun <T> Array<T>.mapToBooleanArray(transform: (T) -> Boolean): BooleanArray","xyz.xenondevs.commons.collections.mapToBooleanArray"]},{"name":"inline fun <T> Array<T>.mapToByteArray(transform: (T) -> Byte): ByteArray","description":"xyz.xenondevs.commons.collections.mapToByteArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-byte-array.html","searchKeys":["mapToByteArray","inline fun <T> Array<T>.mapToByteArray(transform: (T) -> Byte): ByteArray","xyz.xenondevs.commons.collections.mapToByteArray"]},{"name":"inline fun <T> Array<T>.mapToCharArray(transform: (T) -> Char): CharArray","description":"xyz.xenondevs.commons.collections.mapToCharArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-char-array.html","searchKeys":["mapToCharArray","inline fun <T> Array<T>.mapToCharArray(transform: (T) -> Char): CharArray","xyz.xenondevs.commons.collections.mapToCharArray"]},{"name":"inline fun <T> Array<T>.mapToDoubleArray(transform: (T) -> Double): DoubleArray","description":"xyz.xenondevs.commons.collections.mapToDoubleArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-double-array.html","searchKeys":["mapToDoubleArray","inline fun <T> Array<T>.mapToDoubleArray(transform: (T) -> Double): DoubleArray","xyz.xenondevs.commons.collections.mapToDoubleArray"]},{"name":"inline fun <T> Array<T>.mapToFloatArray(transform: (T) -> Float): FloatArray","description":"xyz.xenondevs.commons.collections.mapToFloatArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-float-array.html","searchKeys":["mapToFloatArray","inline fun <T> Array<T>.mapToFloatArray(transform: (T) -> Float): FloatArray","xyz.xenondevs.commons.collections.mapToFloatArray"]},{"name":"inline fun <T> Array<T>.mapToIntArray(transform: (T) -> Int): IntArray","description":"xyz.xenondevs.commons.collections.mapToIntArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-int-array.html","searchKeys":["mapToIntArray","inline fun <T> Array<T>.mapToIntArray(transform: (T) -> Int): IntArray","xyz.xenondevs.commons.collections.mapToIntArray"]},{"name":"inline fun <T> Array<T>.mapToLongArray(transform: (T) -> Long): LongArray","description":"xyz.xenondevs.commons.collections.mapToLongArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-long-array.html","searchKeys":["mapToLongArray","inline fun <T> Array<T>.mapToLongArray(transform: (T) -> Long): LongArray","xyz.xenondevs.commons.collections.mapToLongArray"]},{"name":"inline fun <T> Array<T>.mapToShortArray(transform: (T) -> Short): ShortArray","description":"xyz.xenondevs.commons.collections.mapToShortArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-short-array.html","searchKeys":["mapToShortArray","inline fun <T> Array<T>.mapToShortArray(transform: (T) -> Short): ShortArray","xyz.xenondevs.commons.collections.mapToShortArray"]},{"name":"inline fun <T> Array<T?>.getOrSet(index: Int, lazyValue: () -> T): T","description":"xyz.xenondevs.commons.collections.getOrSet","location":"commons-collections/xyz.xenondevs.commons.collections/get-or-set.html","searchKeys":["getOrSet","inline fun <T> Array<T?>.getOrSet(index: Int, lazyValue: () -> T): T","xyz.xenondevs.commons.collections.getOrSet"]},{"name":"inline fun <T> Collection<T>.mapToBitSet(transform: (T) -> Boolean): BitSet","description":"xyz.xenondevs.commons.collections.mapToBitSet","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-bit-set.html","searchKeys":["mapToBitSet","inline fun <T> Collection<T>.mapToBitSet(transform: (T) -> Boolean): BitSet","xyz.xenondevs.commons.collections.mapToBitSet"]},{"name":"inline fun <T> Collection<T>.mapToBits(transform: (T) -> Boolean): ByteArray","description":"xyz.xenondevs.commons.collections.mapToBits","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-bits.html","searchKeys":["mapToBits","inline fun <T> Collection<T>.mapToBits(transform: (T) -> Boolean): ByteArray","xyz.xenondevs.commons.collections.mapToBits"]},{"name":"inline fun <T> Collection<T>.mapToBooleanArray(transform: (T) -> Boolean): BooleanArray","description":"xyz.xenondevs.commons.collections.mapToBooleanArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-boolean-array.html","searchKeys":["mapToBooleanArray","inline fun <T> Collection<T>.mapToBooleanArray(transform: (T) -> Boolean): BooleanArray","xyz.xenondevs.commons.collections.mapToBooleanArray"]},{"name":"inline fun <T> Collection<T>.mapToByteArray(transform: (T) -> Byte): ByteArray","description":"xyz.xenondevs.commons.collections.mapToByteArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-byte-array.html","searchKeys":["mapToByteArray","inline fun <T> Collection<T>.mapToByteArray(transform: (T) -> Byte): ByteArray","xyz.xenondevs.commons.collections.mapToByteArray"]},{"name":"inline fun <T> Collection<T>.mapToCharArray(transform: (T) -> Char): CharArray","description":"xyz.xenondevs.commons.collections.mapToCharArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-char-array.html","searchKeys":["mapToCharArray","inline fun <T> Collection<T>.mapToCharArray(transform: (T) -> Char): CharArray","xyz.xenondevs.commons.collections.mapToCharArray"]},{"name":"inline fun <T> Collection<T>.mapToDoubleArray(transform: (T) -> Double): DoubleArray","description":"xyz.xenondevs.commons.collections.mapToDoubleArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-double-array.html","searchKeys":["mapToDoubleArray","inline fun <T> Collection<T>.mapToDoubleArray(transform: (T) -> Double): DoubleArray","xyz.xenondevs.commons.collections.mapToDoubleArray"]},{"name":"inline fun <T> Collection<T>.mapToFloatArray(transform: (T) -> Float): FloatArray","description":"xyz.xenondevs.commons.collections.mapToFloatArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-float-array.html","searchKeys":["mapToFloatArray","inline fun <T> Collection<T>.mapToFloatArray(transform: (T) -> Float): FloatArray","xyz.xenondevs.commons.collections.mapToFloatArray"]},{"name":"inline fun <T> Collection<T>.mapToIntArray(transform: (T) -> Int): IntArray","description":"xyz.xenondevs.commons.collections.mapToIntArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-int-array.html","searchKeys":["mapToIntArray","inline fun <T> Collection<T>.mapToIntArray(transform: (T) -> Int): IntArray","xyz.xenondevs.commons.collections.mapToIntArray"]},{"name":"inline fun <T> Collection<T>.mapToLongArray(transform: (T) -> Long): LongArray","description":"xyz.xenondevs.commons.collections.mapToLongArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-long-array.html","searchKeys":["mapToLongArray","inline fun <T> Collection<T>.mapToLongArray(transform: (T) -> Long): LongArray","xyz.xenondevs.commons.collections.mapToLongArray"]},{"name":"inline fun <T> Collection<T>.mapToShortArray(transform: (T) -> Short): ShortArray","description":"xyz.xenondevs.commons.collections.mapToShortArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-short-array.html","searchKeys":["mapToShortArray","inline fun <T> Collection<T>.mapToShortArray(transform: (T) -> Short): ShortArray","xyz.xenondevs.commons.collections.mapToShortArray"]},{"name":"inline fun <T> Iterable<T>.findNth(n: Int, predicate: (T) -> Boolean): T","description":"xyz.xenondevs.commons.collections.findNth","location":"commons-collections/xyz.xenondevs.commons.collections/find-nth.html","searchKeys":["findNth","inline fun <T> Iterable<T>.findNth(n: Int, predicate: (T) -> Boolean): T","xyz.xenondevs.commons.collections.findNth"]},{"name":"inline fun <T> Iterable<T>.findNthOrNull(n: Int, predicate: (T) -> Boolean): T?","description":"xyz.xenondevs.commons.collections.findNthOrNull","location":"commons-collections/xyz.xenondevs.commons.collections/find-nth-or-null.html","searchKeys":["findNthOrNull","inline fun <T> Iterable<T>.findNthOrNull(n: Int, predicate: (T) -> Boolean): T?","xyz.xenondevs.commons.collections.findNthOrNull"]},{"name":"inline fun <T> Iterable<T>.sumOf(transform: (T) -> Float): Float","description":"xyz.xenondevs.commons.collections.sumOf","location":"commons-collections/xyz.xenondevs.commons.collections/sum-of.html","searchKeys":["sumOf","inline fun <T> Iterable<T>.sumOf(transform: (T) -> Float): Float","xyz.xenondevs.commons.collections.sumOf"]},{"name":"inline fun BooleanArray.mapToArray(transform: (Boolean) -> Any): Array<Any>","description":"xyz.xenondevs.commons.collections.mapToArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-array.html","searchKeys":["mapToArray","inline fun BooleanArray.mapToArray(transform: (Boolean) -> Any): Array<Any>","xyz.xenondevs.commons.collections.mapToArray"]},{"name":"inline fun BooleanArray.mapToBooleanArray(transform: (Boolean) -> Boolean): BooleanArray","description":"xyz.xenondevs.commons.collections.mapToBooleanArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-boolean-array.html","searchKeys":["mapToBooleanArray","inline fun BooleanArray.mapToBooleanArray(transform: (Boolean) -> Boolean): BooleanArray","xyz.xenondevs.commons.collections.mapToBooleanArray"]},{"name":"inline fun BooleanArray.mapToByteArray(transform: (Boolean) -> Byte): ByteArray","description":"xyz.xenondevs.commons.collections.mapToByteArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-byte-array.html","searchKeys":["mapToByteArray","inline fun BooleanArray.mapToByteArray(transform: (Boolean) -> Byte): ByteArray","xyz.xenondevs.commons.collections.mapToByteArray"]},{"name":"inline fun BooleanArray.mapToCharArray(transform: (Boolean) -> Char): CharArray","description":"xyz.xenondevs.commons.collections.mapToCharArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-char-array.html","searchKeys":["mapToCharArray","inline fun BooleanArray.mapToCharArray(transform: (Boolean) -> Char): CharArray","xyz.xenondevs.commons.collections.mapToCharArray"]},{"name":"inline fun BooleanArray.mapToDoubleArray(transform: (Boolean) -> Double): DoubleArray","description":"xyz.xenondevs.commons.collections.mapToDoubleArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-double-array.html","searchKeys":["mapToDoubleArray","inline fun BooleanArray.mapToDoubleArray(transform: (Boolean) -> Double): DoubleArray","xyz.xenondevs.commons.collections.mapToDoubleArray"]},{"name":"inline fun BooleanArray.mapToFloatArray(transform: (Boolean) -> Float): FloatArray","description":"xyz.xenondevs.commons.collections.mapToFloatArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-float-array.html","searchKeys":["mapToFloatArray","inline fun BooleanArray.mapToFloatArray(transform: (Boolean) -> Float): FloatArray","xyz.xenondevs.commons.collections.mapToFloatArray"]},{"name":"inline fun BooleanArray.mapToIntArray(transform: (Boolean) -> Int): IntArray","description":"xyz.xenondevs.commons.collections.mapToIntArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-int-array.html","searchKeys":["mapToIntArray","inline fun BooleanArray.mapToIntArray(transform: (Boolean) -> Int): IntArray","xyz.xenondevs.commons.collections.mapToIntArray"]},{"name":"inline fun BooleanArray.mapToLongArray(transform: (Boolean) -> Long): LongArray","description":"xyz.xenondevs.commons.collections.mapToLongArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-long-array.html","searchKeys":["mapToLongArray","inline fun BooleanArray.mapToLongArray(transform: (Boolean) -> Long): LongArray","xyz.xenondevs.commons.collections.mapToLongArray"]},{"name":"inline fun BooleanArray.mapToShortArray(transform: (Boolean) -> Short): ShortArray","description":"xyz.xenondevs.commons.collections.mapToShortArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-short-array.html","searchKeys":["mapToShortArray","inline fun BooleanArray.mapToShortArray(transform: (Boolean) -> Short): ShortArray","xyz.xenondevs.commons.collections.mapToShortArray"]},{"name":"inline fun ByteArray.mapToArray(transform: (Byte) -> Any): Array<Any>","description":"xyz.xenondevs.commons.collections.mapToArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-array.html","searchKeys":["mapToArray","inline fun ByteArray.mapToArray(transform: (Byte) -> Any): Array<Any>","xyz.xenondevs.commons.collections.mapToArray"]},{"name":"inline fun ByteArray.mapToBooleanArray(transform: (Byte) -> Boolean): BooleanArray","description":"xyz.xenondevs.commons.collections.mapToBooleanArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-boolean-array.html","searchKeys":["mapToBooleanArray","inline fun ByteArray.mapToBooleanArray(transform: (Byte) -> Boolean): BooleanArray","xyz.xenondevs.commons.collections.mapToBooleanArray"]},{"name":"inline fun ByteArray.mapToByteArray(transform: (Byte) -> Byte): ByteArray","description":"xyz.xenondevs.commons.collections.mapToByteArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-byte-array.html","searchKeys":["mapToByteArray","inline fun ByteArray.mapToByteArray(transform: (Byte) -> Byte): ByteArray","xyz.xenondevs.commons.collections.mapToByteArray"]},{"name":"inline fun ByteArray.mapToCharArray(transform: (Byte) -> Char): CharArray","description":"xyz.xenondevs.commons.collections.mapToCharArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-char-array.html","searchKeys":["mapToCharArray","inline fun ByteArray.mapToCharArray(transform: (Byte) -> Char): CharArray","xyz.xenondevs.commons.collections.mapToCharArray"]},{"name":"inline fun ByteArray.mapToDoubleArray(transform: (Byte) -> Double): DoubleArray","description":"xyz.xenondevs.commons.collections.mapToDoubleArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-double-array.html","searchKeys":["mapToDoubleArray","inline fun ByteArray.mapToDoubleArray(transform: (Byte) -> Double): DoubleArray","xyz.xenondevs.commons.collections.mapToDoubleArray"]},{"name":"inline fun ByteArray.mapToFloatArray(transform: (Byte) -> Float): FloatArray","description":"xyz.xenondevs.commons.collections.mapToFloatArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-float-array.html","searchKeys":["mapToFloatArray","inline fun ByteArray.mapToFloatArray(transform: (Byte) -> Float): FloatArray","xyz.xenondevs.commons.collections.mapToFloatArray"]},{"name":"inline fun ByteArray.mapToIntArray(transform: (Byte) -> Int): IntArray","description":"xyz.xenondevs.commons.collections.mapToIntArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-int-array.html","searchKeys":["mapToIntArray","inline fun ByteArray.mapToIntArray(transform: (Byte) -> Int): IntArray","xyz.xenondevs.commons.collections.mapToIntArray"]},{"name":"inline fun ByteArray.mapToLongArray(transform: (Byte) -> Long): LongArray","description":"xyz.xenondevs.commons.collections.mapToLongArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-long-array.html","searchKeys":["mapToLongArray","inline fun ByteArray.mapToLongArray(transform: (Byte) -> Long): LongArray","xyz.xenondevs.commons.collections.mapToLongArray"]},{"name":"inline fun ByteArray.mapToShortArray(transform: (Byte) -> Short): ShortArray","description":"xyz.xenondevs.commons.collections.mapToShortArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-short-array.html","searchKeys":["mapToShortArray","inline fun ByteArray.mapToShortArray(transform: (Byte) -> Short): ShortArray","xyz.xenondevs.commons.collections.mapToShortArray"]},{"name":"inline fun CharArray.mapToArray(transform: (Char) -> Any): Array<Any>","description":"xyz.xenondevs.commons.collections.mapToArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-array.html","searchKeys":["mapToArray","inline fun CharArray.mapToArray(transform: (Char) -> Any): Array<Any>","xyz.xenondevs.commons.collections.mapToArray"]},{"name":"inline fun CharArray.mapToBooleanArray(transform: (Char) -> Boolean): BooleanArray","description":"xyz.xenondevs.commons.collections.mapToBooleanArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-boolean-array.html","searchKeys":["mapToBooleanArray","inline fun CharArray.mapToBooleanArray(transform: (Char) -> Boolean): BooleanArray","xyz.xenondevs.commons.collections.mapToBooleanArray"]},{"name":"inline fun CharArray.mapToByteArray(transform: (Char) -> Byte): ByteArray","description":"xyz.xenondevs.commons.collections.mapToByteArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-byte-array.html","searchKeys":["mapToByteArray","inline fun CharArray.mapToByteArray(transform: (Char) -> Byte): ByteArray","xyz.xenondevs.commons.collections.mapToByteArray"]},{"name":"inline fun CharArray.mapToCharArray(transform: (Char) -> Char): CharArray","description":"xyz.xenondevs.commons.collections.mapToCharArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-char-array.html","searchKeys":["mapToCharArray","inline fun CharArray.mapToCharArray(transform: (Char) -> Char): CharArray","xyz.xenondevs.commons.collections.mapToCharArray"]},{"name":"inline fun CharArray.mapToDoubleArray(transform: (Char) -> Double): DoubleArray","description":"xyz.xenondevs.commons.collections.mapToDoubleArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-double-array.html","searchKeys":["mapToDoubleArray","inline fun CharArray.mapToDoubleArray(transform: (Char) -> Double): DoubleArray","xyz.xenondevs.commons.collections.mapToDoubleArray"]},{"name":"inline fun CharArray.mapToFloatArray(transform: (Char) -> Float): FloatArray","description":"xyz.xenondevs.commons.collections.mapToFloatArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-float-array.html","searchKeys":["mapToFloatArray","inline fun CharArray.mapToFloatArray(transform: (Char) -> Float): FloatArray","xyz.xenondevs.commons.collections.mapToFloatArray"]},{"name":"inline fun CharArray.mapToIntArray(transform: (Char) -> Int): IntArray","description":"xyz.xenondevs.commons.collections.mapToIntArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-int-array.html","searchKeys":["mapToIntArray","inline fun CharArray.mapToIntArray(transform: (Char) -> Int): IntArray","xyz.xenondevs.commons.collections.mapToIntArray"]},{"name":"inline fun CharArray.mapToLongArray(transform: (Char) -> Long): LongArray","description":"xyz.xenondevs.commons.collections.mapToLongArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-long-array.html","searchKeys":["mapToLongArray","inline fun CharArray.mapToLongArray(transform: (Char) -> Long): LongArray","xyz.xenondevs.commons.collections.mapToLongArray"]},{"name":"inline fun CharArray.mapToShortArray(transform: (Char) -> Short): ShortArray","description":"xyz.xenondevs.commons.collections.mapToShortArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-short-array.html","searchKeys":["mapToShortArray","inline fun CharArray.mapToShortArray(transform: (Char) -> Short): ShortArray","xyz.xenondevs.commons.collections.mapToShortArray"]},{"name":"inline fun DoubleArray.mapToArray(transform: (Double) -> Any): Array<Any>","description":"xyz.xenondevs.commons.collections.mapToArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-array.html","searchKeys":["mapToArray","inline fun DoubleArray.mapToArray(transform: (Double) -> Any): Array<Any>","xyz.xenondevs.commons.collections.mapToArray"]},{"name":"inline fun DoubleArray.mapToBooleanArray(transform: (Double) -> Boolean): BooleanArray","description":"xyz.xenondevs.commons.collections.mapToBooleanArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-boolean-array.html","searchKeys":["mapToBooleanArray","inline fun DoubleArray.mapToBooleanArray(transform: (Double) -> Boolean): BooleanArray","xyz.xenondevs.commons.collections.mapToBooleanArray"]},{"name":"inline fun DoubleArray.mapToByteArray(transform: (Double) -> Byte): ByteArray","description":"xyz.xenondevs.commons.collections.mapToByteArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-byte-array.html","searchKeys":["mapToByteArray","inline fun DoubleArray.mapToByteArray(transform: (Double) -> Byte): ByteArray","xyz.xenondevs.commons.collections.mapToByteArray"]},{"name":"inline fun DoubleArray.mapToCharArray(transform: (Double) -> Char): CharArray","description":"xyz.xenondevs.commons.collections.mapToCharArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-char-array.html","searchKeys":["mapToCharArray","inline fun DoubleArray.mapToCharArray(transform: (Double) -> Char): CharArray","xyz.xenondevs.commons.collections.mapToCharArray"]},{"name":"inline fun DoubleArray.mapToDoubleArray(transform: (Double) -> Double): DoubleArray","description":"xyz.xenondevs.commons.collections.mapToDoubleArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-double-array.html","searchKeys":["mapToDoubleArray","inline fun DoubleArray.mapToDoubleArray(transform: (Double) -> Double): DoubleArray","xyz.xenondevs.commons.collections.mapToDoubleArray"]},{"name":"inline fun DoubleArray.mapToFloatArray(transform: (Double) -> Float): FloatArray","description":"xyz.xenondevs.commons.collections.mapToFloatArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-float-array.html","searchKeys":["mapToFloatArray","inline fun DoubleArray.mapToFloatArray(transform: (Double) -> Float): FloatArray","xyz.xenondevs.commons.collections.mapToFloatArray"]},{"name":"inline fun DoubleArray.mapToIntArray(transform: (Double) -> Int): IntArray","description":"xyz.xenondevs.commons.collections.mapToIntArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-int-array.html","searchKeys":["mapToIntArray","inline fun DoubleArray.mapToIntArray(transform: (Double) -> Int): IntArray","xyz.xenondevs.commons.collections.mapToIntArray"]},{"name":"inline fun DoubleArray.mapToLongArray(transform: (Double) -> Long): LongArray","description":"xyz.xenondevs.commons.collections.mapToLongArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-long-array.html","searchKeys":["mapToLongArray","inline fun DoubleArray.mapToLongArray(transform: (Double) -> Long): LongArray","xyz.xenondevs.commons.collections.mapToLongArray"]},{"name":"inline fun DoubleArray.mapToShortArray(transform: (Double) -> Short): ShortArray","description":"xyz.xenondevs.commons.collections.mapToShortArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-short-array.html","searchKeys":["mapToShortArray","inline fun DoubleArray.mapToShortArray(transform: (Double) -> Short): ShortArray","xyz.xenondevs.commons.collections.mapToShortArray"]},{"name":"inline fun FloatArray.mapToArray(transform: (Float) -> Any): Array<Any>","description":"xyz.xenondevs.commons.collections.mapToArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-array.html","searchKeys":["mapToArray","inline fun FloatArray.mapToArray(transform: (Float) -> Any): Array<Any>","xyz.xenondevs.commons.collections.mapToArray"]},{"name":"inline fun FloatArray.mapToBooleanArray(transform: (Float) -> Boolean): BooleanArray","description":"xyz.xenondevs.commons.collections.mapToBooleanArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-boolean-array.html","searchKeys":["mapToBooleanArray","inline fun FloatArray.mapToBooleanArray(transform: (Float) -> Boolean): BooleanArray","xyz.xenondevs.commons.collections.mapToBooleanArray"]},{"name":"inline fun FloatArray.mapToByteArray(transform: (Float) -> Byte): ByteArray","description":"xyz.xenondevs.commons.collections.mapToByteArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-byte-array.html","searchKeys":["mapToByteArray","inline fun FloatArray.mapToByteArray(transform: (Float) -> Byte): ByteArray","xyz.xenondevs.commons.collections.mapToByteArray"]},{"name":"inline fun FloatArray.mapToCharArray(transform: (Float) -> Char): CharArray","description":"xyz.xenondevs.commons.collections.mapToCharArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-char-array.html","searchKeys":["mapToCharArray","inline fun FloatArray.mapToCharArray(transform: (Float) -> Char): CharArray","xyz.xenondevs.commons.collections.mapToCharArray"]},{"name":"inline fun FloatArray.mapToDoubleArray(transform: (Float) -> Double): DoubleArray","description":"xyz.xenondevs.commons.collections.mapToDoubleArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-double-array.html","searchKeys":["mapToDoubleArray","inline fun FloatArray.mapToDoubleArray(transform: (Float) -> Double): DoubleArray","xyz.xenondevs.commons.collections.mapToDoubleArray"]},{"name":"inline fun FloatArray.mapToFloatArray(transform: (Float) -> Float): FloatArray","description":"xyz.xenondevs.commons.collections.mapToFloatArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-float-array.html","searchKeys":["mapToFloatArray","inline fun FloatArray.mapToFloatArray(transform: (Float) -> Float): FloatArray","xyz.xenondevs.commons.collections.mapToFloatArray"]},{"name":"inline fun FloatArray.mapToIntArray(transform: (Float) -> Int): IntArray","description":"xyz.xenondevs.commons.collections.mapToIntArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-int-array.html","searchKeys":["mapToIntArray","inline fun FloatArray.mapToIntArray(transform: (Float) -> Int): IntArray","xyz.xenondevs.commons.collections.mapToIntArray"]},{"name":"inline fun FloatArray.mapToLongArray(transform: (Float) -> Long): LongArray","description":"xyz.xenondevs.commons.collections.mapToLongArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-long-array.html","searchKeys":["mapToLongArray","inline fun FloatArray.mapToLongArray(transform: (Float) -> Long): LongArray","xyz.xenondevs.commons.collections.mapToLongArray"]},{"name":"inline fun FloatArray.mapToShortArray(transform: (Float) -> Short): ShortArray","description":"xyz.xenondevs.commons.collections.mapToShortArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-short-array.html","searchKeys":["mapToShortArray","inline fun FloatArray.mapToShortArray(transform: (Float) -> Short): ShortArray","xyz.xenondevs.commons.collections.mapToShortArray"]},{"name":"inline fun IntArray.mapToArray(transform: (Int) -> Any): Array<Any>","description":"xyz.xenondevs.commons.collections.mapToArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-array.html","searchKeys":["mapToArray","inline fun IntArray.mapToArray(transform: (Int) -> Any): Array<Any>","xyz.xenondevs.commons.collections.mapToArray"]},{"name":"inline fun IntArray.mapToBooleanArray(transform: (Int) -> Boolean): BooleanArray","description":"xyz.xenondevs.commons.collections.mapToBooleanArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-boolean-array.html","searchKeys":["mapToBooleanArray","inline fun IntArray.mapToBooleanArray(transform: (Int) -> Boolean): BooleanArray","xyz.xenondevs.commons.collections.mapToBooleanArray"]},{"name":"inline fun IntArray.mapToByteArray(transform: (Int) -> Byte): ByteArray","description":"xyz.xenondevs.commons.collections.mapToByteArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-byte-array.html","searchKeys":["mapToByteArray","inline fun IntArray.mapToByteArray(transform: (Int) -> Byte): ByteArray","xyz.xenondevs.commons.collections.mapToByteArray"]},{"name":"inline fun IntArray.mapToCharArray(transform: (Int) -> Char): CharArray","description":"xyz.xenondevs.commons.collections.mapToCharArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-char-array.html","searchKeys":["mapToCharArray","inline fun IntArray.mapToCharArray(transform: (Int) -> Char): CharArray","xyz.xenondevs.commons.collections.mapToCharArray"]},{"name":"inline fun IntArray.mapToDoubleArray(transform: (Int) -> Double): DoubleArray","description":"xyz.xenondevs.commons.collections.mapToDoubleArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-double-array.html","searchKeys":["mapToDoubleArray","inline fun IntArray.mapToDoubleArray(transform: (Int) -> Double): DoubleArray","xyz.xenondevs.commons.collections.mapToDoubleArray"]},{"name":"inline fun IntArray.mapToFloatArray(transform: (Int) -> Float): FloatArray","description":"xyz.xenondevs.commons.collections.mapToFloatArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-float-array.html","searchKeys":["mapToFloatArray","inline fun IntArray.mapToFloatArray(transform: (Int) -> Float): FloatArray","xyz.xenondevs.commons.collections.mapToFloatArray"]},{"name":"inline fun IntArray.mapToIntArray(transform: (Int) -> Int): IntArray","description":"xyz.xenondevs.commons.collections.mapToIntArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-int-array.html","searchKeys":["mapToIntArray","inline fun IntArray.mapToIntArray(transform: (Int) -> Int): IntArray","xyz.xenondevs.commons.collections.mapToIntArray"]},{"name":"inline fun IntArray.mapToLongArray(transform: (Int) -> Long): LongArray","description":"xyz.xenondevs.commons.collections.mapToLongArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-long-array.html","searchKeys":["mapToLongArray","inline fun IntArray.mapToLongArray(transform: (Int) -> Long): LongArray","xyz.xenondevs.commons.collections.mapToLongArray"]},{"name":"inline fun IntArray.mapToShortArray(transform: (Int) -> Short): ShortArray","description":"xyz.xenondevs.commons.collections.mapToShortArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-short-array.html","searchKeys":["mapToShortArray","inline fun IntArray.mapToShortArray(transform: (Int) -> Short): ShortArray","xyz.xenondevs.commons.collections.mapToShortArray"]},{"name":"inline fun LongArray.mapToArray(transform: (Long) -> Any): Array<Any>","description":"xyz.xenondevs.commons.collections.mapToArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-array.html","searchKeys":["mapToArray","inline fun LongArray.mapToArray(transform: (Long) -> Any): Array<Any>","xyz.xenondevs.commons.collections.mapToArray"]},{"name":"inline fun LongArray.mapToBooleanArray(transform: (Long) -> Boolean): BooleanArray","description":"xyz.xenondevs.commons.collections.mapToBooleanArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-boolean-array.html","searchKeys":["mapToBooleanArray","inline fun LongArray.mapToBooleanArray(transform: (Long) -> Boolean): BooleanArray","xyz.xenondevs.commons.collections.mapToBooleanArray"]},{"name":"inline fun LongArray.mapToByteArray(transform: (Long) -> Byte): ByteArray","description":"xyz.xenondevs.commons.collections.mapToByteArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-byte-array.html","searchKeys":["mapToByteArray","inline fun LongArray.mapToByteArray(transform: (Long) -> Byte): ByteArray","xyz.xenondevs.commons.collections.mapToByteArray"]},{"name":"inline fun LongArray.mapToCharArray(transform: (Long) -> Char): CharArray","description":"xyz.xenondevs.commons.collections.mapToCharArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-char-array.html","searchKeys":["mapToCharArray","inline fun LongArray.mapToCharArray(transform: (Long) -> Char): CharArray","xyz.xenondevs.commons.collections.mapToCharArray"]},{"name":"inline fun LongArray.mapToDoubleArray(transform: (Long) -> Double): DoubleArray","description":"xyz.xenondevs.commons.collections.mapToDoubleArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-double-array.html","searchKeys":["mapToDoubleArray","inline fun LongArray.mapToDoubleArray(transform: (Long) -> Double): DoubleArray","xyz.xenondevs.commons.collections.mapToDoubleArray"]},{"name":"inline fun LongArray.mapToFloatArray(transform: (Long) -> Float): FloatArray","description":"xyz.xenondevs.commons.collections.mapToFloatArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-float-array.html","searchKeys":["mapToFloatArray","inline fun LongArray.mapToFloatArray(transform: (Long) -> Float): FloatArray","xyz.xenondevs.commons.collections.mapToFloatArray"]},{"name":"inline fun LongArray.mapToIntArray(transform: (Long) -> Int): IntArray","description":"xyz.xenondevs.commons.collections.mapToIntArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-int-array.html","searchKeys":["mapToIntArray","inline fun LongArray.mapToIntArray(transform: (Long) -> Int): IntArray","xyz.xenondevs.commons.collections.mapToIntArray"]},{"name":"inline fun LongArray.mapToLongArray(transform: (Long) -> Long): LongArray","description":"xyz.xenondevs.commons.collections.mapToLongArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-long-array.html","searchKeys":["mapToLongArray","inline fun LongArray.mapToLongArray(transform: (Long) -> Long): LongArray","xyz.xenondevs.commons.collections.mapToLongArray"]},{"name":"inline fun LongArray.mapToShortArray(transform: (Long) -> Short): ShortArray","description":"xyz.xenondevs.commons.collections.mapToShortArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-short-array.html","searchKeys":["mapToShortArray","inline fun LongArray.mapToShortArray(transform: (Long) -> Short): ShortArray","xyz.xenondevs.commons.collections.mapToShortArray"]},{"name":"inline fun ShortArray.mapToArray(transform: (Short) -> Any): Array<Any>","description":"xyz.xenondevs.commons.collections.mapToArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-array.html","searchKeys":["mapToArray","inline fun ShortArray.mapToArray(transform: (Short) -> Any): Array<Any>","xyz.xenondevs.commons.collections.mapToArray"]},{"name":"inline fun ShortArray.mapToBooleanArray(transform: (Short) -> Boolean): BooleanArray","description":"xyz.xenondevs.commons.collections.mapToBooleanArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-boolean-array.html","searchKeys":["mapToBooleanArray","inline fun ShortArray.mapToBooleanArray(transform: (Short) -> Boolean): BooleanArray","xyz.xenondevs.commons.collections.mapToBooleanArray"]},{"name":"inline fun ShortArray.mapToByteArray(transform: (Short) -> Byte): ByteArray","description":"xyz.xenondevs.commons.collections.mapToByteArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-byte-array.html","searchKeys":["mapToByteArray","inline fun ShortArray.mapToByteArray(transform: (Short) -> Byte): ByteArray","xyz.xenondevs.commons.collections.mapToByteArray"]},{"name":"inline fun ShortArray.mapToCharArray(transform: (Short) -> Char): CharArray","description":"xyz.xenondevs.commons.collections.mapToCharArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-char-array.html","searchKeys":["mapToCharArray","inline fun ShortArray.mapToCharArray(transform: (Short) -> Char): CharArray","xyz.xenondevs.commons.collections.mapToCharArray"]},{"name":"inline fun ShortArray.mapToDoubleArray(transform: (Short) -> Double): DoubleArray","description":"xyz.xenondevs.commons.collections.mapToDoubleArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-double-array.html","searchKeys":["mapToDoubleArray","inline fun ShortArray.mapToDoubleArray(transform: (Short) -> Double): DoubleArray","xyz.xenondevs.commons.collections.mapToDoubleArray"]},{"name":"inline fun ShortArray.mapToFloatArray(transform: (Short) -> Float): FloatArray","description":"xyz.xenondevs.commons.collections.mapToFloatArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-float-array.html","searchKeys":["mapToFloatArray","inline fun ShortArray.mapToFloatArray(transform: (Short) -> Float): FloatArray","xyz.xenondevs.commons.collections.mapToFloatArray"]},{"name":"inline fun ShortArray.mapToIntArray(transform: (Short) -> Int): IntArray","description":"xyz.xenondevs.commons.collections.mapToIntArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-int-array.html","searchKeys":["mapToIntArray","inline fun ShortArray.mapToIntArray(transform: (Short) -> Int): IntArray","xyz.xenondevs.commons.collections.mapToIntArray"]},{"name":"inline fun ShortArray.mapToLongArray(transform: (Short) -> Long): LongArray","description":"xyz.xenondevs.commons.collections.mapToLongArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-long-array.html","searchKeys":["mapToLongArray","inline fun ShortArray.mapToLongArray(transform: (Short) -> Long): LongArray","xyz.xenondevs.commons.collections.mapToLongArray"]},{"name":"inline fun ShortArray.mapToShortArray(transform: (Short) -> Short): ShortArray","description":"xyz.xenondevs.commons.collections.mapToShortArray","location":"commons-collections/xyz.xenondevs.commons.collections/map-to-short-array.html","searchKeys":["mapToShortArray","inline fun ShortArray.mapToShortArray(transform: (Short) -> Short): ShortArray","xyz.xenondevs.commons.collections.mapToShortArray"]},{"name":"object CollectionUtils","description":"xyz.xenondevs.commons.collections.CollectionUtils","location":"commons-collections/xyz.xenondevs.commons.collections/-collection-utils/index.html","searchKeys":["CollectionUtils","object CollectionUtils","xyz.xenondevs.commons.collections.CollectionUtils"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableCollection.equals","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-collection/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","xyz.xenondevs.commons.collections.observed.ObservableCollection.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableIterator.equals","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-iterator/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","xyz.xenondevs.commons.collections.observed.ObservableIterator.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableList.equals","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","xyz.xenondevs.commons.collections.observed.ObservableList.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableListIterator.equals","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list-iterator/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","xyz.xenondevs.commons.collections.observed.ObservableListIterator.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableMap.equals","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-map/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","xyz.xenondevs.commons.collections.observed.ObservableMap.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableSet.equals","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-set/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","xyz.xenondevs.commons.collections.observed.ObservableSet.equals"]},{"name":"open operator override fun iterator(): MutableIterator<E>","description":"xyz.xenondevs.commons.collections.observed.ObservableCollection.iterator","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-collection/iterator.html","searchKeys":["iterator","open operator override fun iterator(): MutableIterator<E>","xyz.xenondevs.commons.collections.observed.ObservableCollection.iterator"]},{"name":"open operator override fun iterator(): MutableIterator<E>","description":"xyz.xenondevs.commons.collections.observed.ObservableSet.iterator","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-set/iterator.html","searchKeys":["iterator","open operator override fun iterator(): MutableIterator<E>","xyz.xenondevs.commons.collections.observed.ObservableSet.iterator"]},{"name":"open operator override fun set(index: Int, element: E): E","description":"xyz.xenondevs.commons.collections.observed.ObservableList.set","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list/set.html","searchKeys":["set","open operator override fun set(index: Int, element: E): E","xyz.xenondevs.commons.collections.observed.ObservableList.set"]},{"name":"open override fun add(element: E): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableCollection.add","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-collection/add.html","searchKeys":["add","open override fun add(element: E): Boolean","xyz.xenondevs.commons.collections.observed.ObservableCollection.add"]},{"name":"open override fun add(element: E): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableList.add","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list/add.html","searchKeys":["add","open override fun add(element: E): Boolean","xyz.xenondevs.commons.collections.observed.ObservableList.add"]},{"name":"open override fun add(element: E): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableSet.add","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-set/add.html","searchKeys":["add","open override fun add(element: E): Boolean","xyz.xenondevs.commons.collections.observed.ObservableSet.add"]},{"name":"open override fun add(element: T)","description":"xyz.xenondevs.commons.collections.observed.ObservableListIterator.add","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list-iterator/add.html","searchKeys":["add","open override fun add(element: T)","xyz.xenondevs.commons.collections.observed.ObservableListIterator.add"]},{"name":"open override fun add(index: Int, element: E)","description":"xyz.xenondevs.commons.collections.observed.ObservableList.add","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list/add.html","searchKeys":["add","open override fun add(index: Int, element: E)","xyz.xenondevs.commons.collections.observed.ObservableList.add"]},{"name":"open override fun addAll(elements: Collection<E>): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableCollection.addAll","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-collection/add-all.html","searchKeys":["addAll","open override fun addAll(elements: Collection<E>): Boolean","xyz.xenondevs.commons.collections.observed.ObservableCollection.addAll"]},{"name":"open override fun addAll(elements: Collection<E>): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableList.addAll","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list/add-all.html","searchKeys":["addAll","open override fun addAll(elements: Collection<E>): Boolean","xyz.xenondevs.commons.collections.observed.ObservableList.addAll"]},{"name":"open override fun addAll(elements: Collection<E>): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableSet.addAll","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-set/add-all.html","searchKeys":["addAll","open override fun addAll(elements: Collection<E>): Boolean","xyz.xenondevs.commons.collections.observed.ObservableSet.addAll"]},{"name":"open override fun addAll(index: Int, elements: Collection<E>): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableList.addAll","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list/add-all.html","searchKeys":["addAll","open override fun addAll(index: Int, elements: Collection<E>): Boolean","xyz.xenondevs.commons.collections.observed.ObservableList.addAll"]},{"name":"open override fun clear()","description":"xyz.xenondevs.commons.collections.observed.ObservableCollection.clear","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-collection/clear.html","searchKeys":["clear","open override fun clear()","xyz.xenondevs.commons.collections.observed.ObservableCollection.clear"]},{"name":"open override fun clear()","description":"xyz.xenondevs.commons.collections.observed.ObservableList.clear","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list/clear.html","searchKeys":["clear","open override fun clear()","xyz.xenondevs.commons.collections.observed.ObservableList.clear"]},{"name":"open override fun clear()","description":"xyz.xenondevs.commons.collections.observed.ObservableMap.clear","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-map/clear.html","searchKeys":["clear","open override fun clear()","xyz.xenondevs.commons.collections.observed.ObservableMap.clear"]},{"name":"open override fun clear()","description":"xyz.xenondevs.commons.collections.observed.ObservableSet.clear","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-set/clear.html","searchKeys":["clear","open override fun clear()","xyz.xenondevs.commons.collections.observed.ObservableSet.clear"]},{"name":"open override fun compute(key: K, remappingFunction: BiFunction<in K, in V?, out V?>): V?","description":"xyz.xenondevs.commons.collections.observed.ObservableMap.compute","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-map/compute.html","searchKeys":["compute","open override fun compute(key: K, remappingFunction: BiFunction<in K, in V?, out V?>): V?","xyz.xenondevs.commons.collections.observed.ObservableMap.compute"]},{"name":"open override fun computeIfAbsent(key: K, mappingFunction: Function<in K, out V>): V","description":"xyz.xenondevs.commons.collections.observed.ObservableMap.computeIfAbsent","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-map/compute-if-absent.html","searchKeys":["computeIfAbsent","open override fun computeIfAbsent(key: K, mappingFunction: Function<in K, out V>): V","xyz.xenondevs.commons.collections.observed.ObservableMap.computeIfAbsent"]},{"name":"open override fun computeIfPresent(key: K, remappingFunction: BiFunction<in K, in V & Any, out V?>): V?","description":"xyz.xenondevs.commons.collections.observed.ObservableMap.computeIfPresent","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-map/compute-if-present.html","searchKeys":["computeIfPresent","open override fun computeIfPresent(key: K, remappingFunction: BiFunction<in K, in V & Any, out V?>): V?","xyz.xenondevs.commons.collections.observed.ObservableMap.computeIfPresent"]},{"name":"open override fun hashCode(): Int","description":"xyz.xenondevs.commons.collections.observed.ObservableCollection.hashCode","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-collection/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","xyz.xenondevs.commons.collections.observed.ObservableCollection.hashCode"]},{"name":"open override fun hashCode(): Int","description":"xyz.xenondevs.commons.collections.observed.ObservableIterator.hashCode","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-iterator/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","xyz.xenondevs.commons.collections.observed.ObservableIterator.hashCode"]},{"name":"open override fun hashCode(): Int","description":"xyz.xenondevs.commons.collections.observed.ObservableList.hashCode","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","xyz.xenondevs.commons.collections.observed.ObservableList.hashCode"]},{"name":"open override fun hashCode(): Int","description":"xyz.xenondevs.commons.collections.observed.ObservableListIterator.hashCode","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list-iterator/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","xyz.xenondevs.commons.collections.observed.ObservableListIterator.hashCode"]},{"name":"open override fun hashCode(): Int","description":"xyz.xenondevs.commons.collections.observed.ObservableMap.hashCode","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-map/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","xyz.xenondevs.commons.collections.observed.ObservableMap.hashCode"]},{"name":"open override fun hashCode(): Int","description":"xyz.xenondevs.commons.collections.observed.ObservableSet.hashCode","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-set/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","xyz.xenondevs.commons.collections.observed.ObservableSet.hashCode"]},{"name":"open override fun listIterator(): MutableListIterator<E>","description":"xyz.xenondevs.commons.collections.observed.ObservableList.listIterator","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list/list-iterator.html","searchKeys":["listIterator","open override fun listIterator(): MutableListIterator<E>","xyz.xenondevs.commons.collections.observed.ObservableList.listIterator"]},{"name":"open override fun listIterator(index: Int): MutableListIterator<E>","description":"xyz.xenondevs.commons.collections.observed.ObservableList.listIterator","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list/list-iterator.html","searchKeys":["listIterator","open override fun listIterator(index: Int): MutableListIterator<E>","xyz.xenondevs.commons.collections.observed.ObservableList.listIterator"]},{"name":"open override fun merge(key: K, value: V & Any, remappingFunction: BiFunction<in V & Any, in V & Any, out V?>): V?","description":"xyz.xenondevs.commons.collections.observed.ObservableMap.merge","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-map/merge.html","searchKeys":["merge","open override fun merge(key: K, value: V & Any, remappingFunction: BiFunction<in V & Any, in V & Any, out V?>): V?","xyz.xenondevs.commons.collections.observed.ObservableMap.merge"]},{"name":"open override fun put(key: K, value: V): V?","description":"xyz.xenondevs.commons.collections.observed.ObservableMap.put","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-map/put.html","searchKeys":["put","open override fun put(key: K, value: V): V?","xyz.xenondevs.commons.collections.observed.ObservableMap.put"]},{"name":"open override fun putAll(from: Map<out K, V>)","description":"xyz.xenondevs.commons.collections.observed.ObservableMap.putAll","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-map/put-all.html","searchKeys":["putAll","open override fun putAll(from: Map<out K, V>)","xyz.xenondevs.commons.collections.observed.ObservableMap.putAll"]},{"name":"open override fun putIfAbsent(key: K, value: V): V?","description":"xyz.xenondevs.commons.collections.observed.ObservableMap.putIfAbsent","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-map/put-if-absent.html","searchKeys":["putIfAbsent","open override fun putIfAbsent(key: K, value: V): V?","xyz.xenondevs.commons.collections.observed.ObservableMap.putIfAbsent"]},{"name":"open override fun remove()","description":"xyz.xenondevs.commons.collections.observed.ObservableIterator.remove","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-iterator/remove.html","searchKeys":["remove","open override fun remove()","xyz.xenondevs.commons.collections.observed.ObservableIterator.remove"]},{"name":"open override fun remove()","description":"xyz.xenondevs.commons.collections.observed.ObservableListIterator.remove","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list-iterator/remove.html","searchKeys":["remove","open override fun remove()","xyz.xenondevs.commons.collections.observed.ObservableListIterator.remove"]},{"name":"open override fun remove(element: E): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableCollection.remove","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-collection/remove.html","searchKeys":["remove","open override fun remove(element: E): Boolean","xyz.xenondevs.commons.collections.observed.ObservableCollection.remove"]},{"name":"open override fun remove(element: E): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableList.remove","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list/remove.html","searchKeys":["remove","open override fun remove(element: E): Boolean","xyz.xenondevs.commons.collections.observed.ObservableList.remove"]},{"name":"open override fun remove(element: E): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableSet.remove","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-set/remove.html","searchKeys":["remove","open override fun remove(element: E): Boolean","xyz.xenondevs.commons.collections.observed.ObservableSet.remove"]},{"name":"open override fun remove(key: K): V?","description":"xyz.xenondevs.commons.collections.observed.ObservableMap.remove","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-map/remove.html","searchKeys":["remove","open override fun remove(key: K): V?","xyz.xenondevs.commons.collections.observed.ObservableMap.remove"]},{"name":"open override fun remove(key: K, value: V): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableMap.remove","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-map/remove.html","searchKeys":["remove","open override fun remove(key: K, value: V): Boolean","xyz.xenondevs.commons.collections.observed.ObservableMap.remove"]},{"name":"open override fun removeAll(elements: Collection<E>): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableCollection.removeAll","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-collection/remove-all.html","searchKeys":["removeAll","open override fun removeAll(elements: Collection<E>): Boolean","xyz.xenondevs.commons.collections.observed.ObservableCollection.removeAll"]},{"name":"open override fun removeAll(elements: Collection<E>): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableList.removeAll","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list/remove-all.html","searchKeys":["removeAll","open override fun removeAll(elements: Collection<E>): Boolean","xyz.xenondevs.commons.collections.observed.ObservableList.removeAll"]},{"name":"open override fun removeAll(elements: Collection<E>): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableSet.removeAll","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-set/remove-all.html","searchKeys":["removeAll","open override fun removeAll(elements: Collection<E>): Boolean","xyz.xenondevs.commons.collections.observed.ObservableSet.removeAll"]},{"name":"open override fun removeAt(index: Int): E","description":"xyz.xenondevs.commons.collections.observed.ObservableList.removeAt","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list/remove-at.html","searchKeys":["removeAt","open override fun removeAt(index: Int): E","xyz.xenondevs.commons.collections.observed.ObservableList.removeAt"]},{"name":"open override fun removeIf(filter: Predicate<in E>): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableCollection.removeIf","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-collection/remove-if.html","searchKeys":["removeIf","open override fun removeIf(filter: Predicate<in E>): Boolean","xyz.xenondevs.commons.collections.observed.ObservableCollection.removeIf"]},{"name":"open override fun removeIf(filter: Predicate<in E>): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableList.removeIf","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list/remove-if.html","searchKeys":["removeIf","open override fun removeIf(filter: Predicate<in E>): Boolean","xyz.xenondevs.commons.collections.observed.ObservableList.removeIf"]},{"name":"open override fun replace(key: K, oldValue: V, newValue: V): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableMap.replace","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-map/replace.html","searchKeys":["replace","open override fun replace(key: K, oldValue: V, newValue: V): Boolean","xyz.xenondevs.commons.collections.observed.ObservableMap.replace"]},{"name":"open override fun replace(key: K, value: V): V?","description":"xyz.xenondevs.commons.collections.observed.ObservableMap.replace","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-map/replace.html","searchKeys":["replace","open override fun replace(key: K, value: V): V?","xyz.xenondevs.commons.collections.observed.ObservableMap.replace"]},{"name":"open override fun replaceAll(function: BiFunction<in K, in V, out V>)","description":"xyz.xenondevs.commons.collections.observed.ObservableMap.replaceAll","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-map/replace-all.html","searchKeys":["replaceAll","open override fun replaceAll(function: BiFunction<in K, in V, out V>)","xyz.xenondevs.commons.collections.observed.ObservableMap.replaceAll"]},{"name":"open override fun replaceAll(operator: UnaryOperator<E>)","description":"xyz.xenondevs.commons.collections.observed.ObservableList.replaceAll","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list/replace-all.html","searchKeys":["replaceAll","open override fun replaceAll(operator: UnaryOperator<E>)","xyz.xenondevs.commons.collections.observed.ObservableList.replaceAll"]},{"name":"open override fun retainAll(elements: Collection<E>): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableCollection.retainAll","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-collection/retain-all.html","searchKeys":["retainAll","open override fun retainAll(elements: Collection<E>): Boolean","xyz.xenondevs.commons.collections.observed.ObservableCollection.retainAll"]},{"name":"open override fun retainAll(elements: Collection<E>): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableList.retainAll","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list/retain-all.html","searchKeys":["retainAll","open override fun retainAll(elements: Collection<E>): Boolean","xyz.xenondevs.commons.collections.observed.ObservableList.retainAll"]},{"name":"open override fun retainAll(elements: Collection<E>): Boolean","description":"xyz.xenondevs.commons.collections.observed.ObservableSet.retainAll","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-set/retain-all.html","searchKeys":["retainAll","open override fun retainAll(elements: Collection<E>): Boolean","xyz.xenondevs.commons.collections.observed.ObservableSet.retainAll"]},{"name":"open override fun set(element: T)","description":"xyz.xenondevs.commons.collections.observed.ObservableListIterator.set","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list-iterator/set.html","searchKeys":["set","open override fun set(element: T)","xyz.xenondevs.commons.collections.observed.ObservableListIterator.set"]},{"name":"open override fun sort(c: Comparator<in E>)","description":"xyz.xenondevs.commons.collections.observed.ObservableList.sort","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list/sort.html","searchKeys":["sort","open override fun sort(c: Comparator<in E>)","xyz.xenondevs.commons.collections.observed.ObservableList.sort"]},{"name":"open override fun subList(fromIndex: Int, toIndex: Int): MutableList<E>","description":"xyz.xenondevs.commons.collections.observed.ObservableList.subList","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list/sub-list.html","searchKeys":["subList","open override fun subList(fromIndex: Int, toIndex: Int): MutableList<E>","xyz.xenondevs.commons.collections.observed.ObservableList.subList"]},{"name":"open override fun toString(): String","description":"xyz.xenondevs.commons.collections.observed.ObservableCollection.toString","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-collection/to-string.html","searchKeys":["toString","open override fun toString(): String","xyz.xenondevs.commons.collections.observed.ObservableCollection.toString"]},{"name":"open override fun toString(): String","description":"xyz.xenondevs.commons.collections.observed.ObservableIterator.toString","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-iterator/to-string.html","searchKeys":["toString","open override fun toString(): String","xyz.xenondevs.commons.collections.observed.ObservableIterator.toString"]},{"name":"open override fun toString(): String","description":"xyz.xenondevs.commons.collections.observed.ObservableList.toString","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list/to-string.html","searchKeys":["toString","open override fun toString(): String","xyz.xenondevs.commons.collections.observed.ObservableList.toString"]},{"name":"open override fun toString(): String","description":"xyz.xenondevs.commons.collections.observed.ObservableListIterator.toString","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list-iterator/to-string.html","searchKeys":["toString","open override fun toString(): String","xyz.xenondevs.commons.collections.observed.ObservableListIterator.toString"]},{"name":"open override fun toString(): String","description":"xyz.xenondevs.commons.collections.observed.ObservableMap.toString","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-map/to-string.html","searchKeys":["toString","open override fun toString(): String","xyz.xenondevs.commons.collections.observed.ObservableMap.toString"]},{"name":"open override fun toString(): String","description":"xyz.xenondevs.commons.collections.observed.ObservableSet.toString","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-set/to-string.html","searchKeys":["toString","open override fun toString(): String","xyz.xenondevs.commons.collections.observed.ObservableSet.toString"]},{"name":"open override val entries: MutableSet<MutableMap.MutableEntry<K, V>>","description":"xyz.xenondevs.commons.collections.observed.ObservableMap.entries","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-map/entries.html","searchKeys":["entries","open override val entries: MutableSet<MutableMap.MutableEntry<K, V>>","xyz.xenondevs.commons.collections.observed.ObservableMap.entries"]},{"name":"open override val keys: MutableSet<K>","description":"xyz.xenondevs.commons.collections.observed.ObservableMap.keys","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-map/keys.html","searchKeys":["keys","open override val keys: MutableSet<K>","xyz.xenondevs.commons.collections.observed.ObservableMap.keys"]},{"name":"open override val values: MutableCollection<V>","description":"xyz.xenondevs.commons.collections.observed.ObservableMap.values","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-map/values.html","searchKeys":["values","open override val values: MutableCollection<V>","xyz.xenondevs.commons.collections.observed.ObservableMap.values"]},{"name":"val collection: MutableCollection<E>","description":"xyz.xenondevs.commons.collections.observed.ObservableCollection.collection","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-collection/collection.html","searchKeys":["collection","val collection: MutableCollection<E>","xyz.xenondevs.commons.collections.observed.ObservableCollection.collection"]},{"name":"val iterator: MutableIterator<T>","description":"xyz.xenondevs.commons.collections.observed.ObservableIterator.iterator","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-iterator/iterator.html","searchKeys":["iterator","val iterator: MutableIterator<T>","xyz.xenondevs.commons.collections.observed.ObservableIterator.iterator"]},{"name":"val iterator: MutableListIterator<T>","description":"xyz.xenondevs.commons.collections.observed.ObservableListIterator.iterator","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list-iterator/iterator.html","searchKeys":["iterator","val iterator: MutableListIterator<T>","xyz.xenondevs.commons.collections.observed.ObservableListIterator.iterator"]},{"name":"val list: MutableList<E>","description":"xyz.xenondevs.commons.collections.observed.ObservableList.list","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-list/list.html","searchKeys":["list","val list: MutableList<E>","xyz.xenondevs.commons.collections.observed.ObservableList.list"]},{"name":"val map: MutableMap<K, V>","description":"xyz.xenondevs.commons.collections.observed.ObservableMap.map","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-map/map.html","searchKeys":["map","val map: MutableMap<K, V>","xyz.xenondevs.commons.collections.observed.ObservableMap.map"]},{"name":"val set: MutableSet<E>","description":"xyz.xenondevs.commons.collections.observed.ObservableSet.set","location":"commons-collections/xyz.xenondevs.commons.collections.observed/-observable-set/set.html","searchKeys":["set","val set: MutableSet<E>","xyz.xenondevs.commons.collections.observed.ObservableSet.set"]},{"name":"fun <C : MutableCollection<in Boolean>> JsonArray.getAllBooleansTo(destination: C): C","description":"xyz.xenondevs.commons.gson.getAllBooleansTo","location":"commons-gson/xyz.xenondevs.commons.gson/get-all-booleans-to.html","searchKeys":["getAllBooleansTo","fun <C : MutableCollection<in Boolean>> JsonArray.getAllBooleansTo(destination: C): C","xyz.xenondevs.commons.gson.getAllBooleansTo"]},{"name":"fun <C : MutableCollection<in Char>> JsonArray.getAllCharsTo(destination: C): C","description":"xyz.xenondevs.commons.gson.getAllCharsTo","location":"commons-gson/xyz.xenondevs.commons.gson/get-all-chars-to.html","searchKeys":["getAllCharsTo","fun <C : MutableCollection<in Char>> JsonArray.getAllCharsTo(destination: C): C","xyz.xenondevs.commons.gson.getAllCharsTo"]},{"name":"fun <C : MutableCollection<in Double>> JsonArray.getAllDoublesTo(destination: C): C","description":"xyz.xenondevs.commons.gson.getAllDoublesTo","location":"commons-gson/xyz.xenondevs.commons.gson/get-all-doubles-to.html","searchKeys":["getAllDoublesTo","fun <C : MutableCollection<in Double>> JsonArray.getAllDoublesTo(destination: C): C","xyz.xenondevs.commons.gson.getAllDoublesTo"]},{"name":"fun <C : MutableCollection<in Float>> JsonArray.getAllFloatsTo(destination: C): C","description":"xyz.xenondevs.commons.gson.getAllFloatsTo","location":"commons-gson/xyz.xenondevs.commons.gson/get-all-floats-to.html","searchKeys":["getAllFloatsTo","fun <C : MutableCollection<in Float>> JsonArray.getAllFloatsTo(destination: C): C","xyz.xenondevs.commons.gson.getAllFloatsTo"]},{"name":"fun <C : MutableCollection<in Int>> JsonArray.getAllIntsTo(destination: C): C","description":"xyz.xenondevs.commons.gson.getAllIntsTo","location":"commons-gson/xyz.xenondevs.commons.gson/get-all-ints-to.html","searchKeys":["getAllIntsTo","fun <C : MutableCollection<in Int>> JsonArray.getAllIntsTo(destination: C): C","xyz.xenondevs.commons.gson.getAllIntsTo"]},{"name":"fun <C : MutableCollection<in JsonArray>> JsonArray.getAllJsonArraysTo(destination: C): C","description":"xyz.xenondevs.commons.gson.getAllJsonArraysTo","location":"commons-gson/xyz.xenondevs.commons.gson/get-all-json-arrays-to.html","searchKeys":["getAllJsonArraysTo","fun <C : MutableCollection<in JsonArray>> JsonArray.getAllJsonArraysTo(destination: C): C","xyz.xenondevs.commons.gson.getAllJsonArraysTo"]},{"name":"fun <C : MutableCollection<in JsonObject>> JsonArray.getAllJsonObjectsTo(destination: C): C","description":"xyz.xenondevs.commons.gson.getAllJsonObjectsTo","location":"commons-gson/xyz.xenondevs.commons.gson/get-all-json-objects-to.html","searchKeys":["getAllJsonObjectsTo","fun <C : MutableCollection<in JsonObject>> JsonArray.getAllJsonObjectsTo(destination: C): C","xyz.xenondevs.commons.gson.getAllJsonObjectsTo"]},{"name":"fun <C : MutableCollection<in Long>> JsonArray.getAllLongsTo(destination: C): C","description":"xyz.xenondevs.commons.gson.getAllLongsTo","location":"commons-gson/xyz.xenondevs.commons.gson/get-all-longs-to.html","searchKeys":["getAllLongsTo","fun <C : MutableCollection<in Long>> JsonArray.getAllLongsTo(destination: C): C","xyz.xenondevs.commons.gson.getAllLongsTo"]},{"name":"fun <C : MutableCollection<in String>> JsonArray.getAllStringsTo(destination: C): C","description":"xyz.xenondevs.commons.gson.getAllStringsTo","location":"commons-gson/xyz.xenondevs.commons.gson/get-all-strings-to.html","searchKeys":["getAllStringsTo","fun <C : MutableCollection<in String>> JsonArray.getAllStringsTo(destination: C): C","xyz.xenondevs.commons.gson.getAllStringsTo"]},{"name":"fun Array<JsonElement>.toJsonArray(): JsonArray","description":"xyz.xenondevs.commons.gson.toJsonArray","location":"commons-gson/xyz.xenondevs.commons.gson/to-json-array.html","searchKeys":["toJsonArray","fun Array<JsonElement>.toJsonArray(): JsonArray","xyz.xenondevs.commons.gson.toJsonArray"]},{"name":"fun Array<String>.toJsonArray(): JsonArray","description":"xyz.xenondevs.commons.gson.toJsonArray","location":"commons-gson/xyz.xenondevs.commons.gson/to-json-array.html","searchKeys":["toJsonArray","fun Array<String>.toJsonArray(): JsonArray","xyz.xenondevs.commons.gson.toJsonArray"]},{"name":"fun BooleanArray.toJsonArray(): JsonArray","description":"xyz.xenondevs.commons.gson.toJsonArray","location":"commons-gson/xyz.xenondevs.commons.gson/to-json-array.html","searchKeys":["toJsonArray","fun BooleanArray.toJsonArray(): JsonArray","xyz.xenondevs.commons.gson.toJsonArray"]},{"name":"fun CharArray.toJsonArray(): JsonArray","description":"xyz.xenondevs.commons.gson.toJsonArray","location":"commons-gson/xyz.xenondevs.commons.gson/to-json-array.html","searchKeys":["toJsonArray","fun CharArray.toJsonArray(): JsonArray","xyz.xenondevs.commons.gson.toJsonArray"]},{"name":"fun DoubleArray.toJsonArray(): JsonArray","description":"xyz.xenondevs.commons.gson.toJsonArray","location":"commons-gson/xyz.xenondevs.commons.gson/to-json-array.html","searchKeys":["toJsonArray","fun DoubleArray.toJsonArray(): JsonArray","xyz.xenondevs.commons.gson.toJsonArray"]},{"name":"fun File.parseJson(): JsonElement","description":"xyz.xenondevs.commons.gson.parseJson","location":"commons-gson/xyz.xenondevs.commons.gson/parse-json.html","searchKeys":["parseJson","fun File.parseJson(): JsonElement","xyz.xenondevs.commons.gson.parseJson"]},{"name":"fun FloatArray.toJsonArray(): JsonArray","description":"xyz.xenondevs.commons.gson.toJsonArray","location":"commons-gson/xyz.xenondevs.commons.gson/to-json-array.html","searchKeys":["toJsonArray","fun FloatArray.toJsonArray(): JsonArray","xyz.xenondevs.commons.gson.toJsonArray"]},{"name":"fun InputStream.parseJson(): JsonElement","description":"xyz.xenondevs.commons.gson.parseJson","location":"commons-gson/xyz.xenondevs.commons.gson/parse-json.html","searchKeys":["parseJson","fun InputStream.parseJson(): JsonElement","xyz.xenondevs.commons.gson.parseJson"]},{"name":"fun IntArray.toJsonArray(): JsonArray","description":"xyz.xenondevs.commons.gson.toJsonArray","location":"commons-gson/xyz.xenondevs.commons.gson/to-json-array.html","searchKeys":["toJsonArray","fun IntArray.toJsonArray(): JsonArray","xyz.xenondevs.commons.gson.toJsonArray"]},{"name":"fun Iterable<Boolean>.toJsonArray(): JsonArray","description":"xyz.xenondevs.commons.gson.toJsonArray","location":"commons-gson/xyz.xenondevs.commons.gson/to-json-array.html","searchKeys":["toJsonArray","fun Iterable<Boolean>.toJsonArray(): JsonArray","xyz.xenondevs.commons.gson.toJsonArray"]},{"name":"fun Iterable<Char>.toJsonArray(): JsonArray","description":"xyz.xenondevs.commons.gson.toJsonArray","location":"commons-gson/xyz.xenondevs.commons.gson/to-json-array.html","searchKeys":["toJsonArray","fun Iterable<Char>.toJsonArray(): JsonArray","xyz.xenondevs.commons.gson.toJsonArray"]},{"name":"fun Iterable<JsonElement>.toJsonArray(): JsonArray","description":"xyz.xenondevs.commons.gson.toJsonArray","location":"commons-gson/xyz.xenondevs.commons.gson/to-json-array.html","searchKeys":["toJsonArray","fun Iterable<JsonElement>.toJsonArray(): JsonArray","xyz.xenondevs.commons.gson.toJsonArray"]},{"name":"fun Iterable<Number>.toJsonArray(): JsonArray","description":"xyz.xenondevs.commons.gson.toJsonArray","location":"commons-gson/xyz.xenondevs.commons.gson/to-json-array.html","searchKeys":["toJsonArray","fun Iterable<Number>.toJsonArray(): JsonArray","xyz.xenondevs.commons.gson.toJsonArray"]},{"name":"fun Iterable<String>.toJsonArray(): JsonArray","description":"xyz.xenondevs.commons.gson.toJsonArray","location":"commons-gson/xyz.xenondevs.commons.gson/to-json-array.html","searchKeys":["toJsonArray","fun Iterable<String>.toJsonArray(): JsonArray","xyz.xenondevs.commons.gson.toJsonArray"]},{"name":"fun JsonArray.addAll(booleans: Iterable<Boolean>)","description":"xyz.xenondevs.commons.gson.addAll","location":"commons-gson/xyz.xenondevs.commons.gson/add-all.html","searchKeys":["addAll","fun JsonArray.addAll(booleans: Iterable<Boolean>)","xyz.xenondevs.commons.gson.addAll"]},{"name":"fun JsonArray.addAll(chars: Iterable<Char>)","description":"xyz.xenondevs.commons.gson.addAll","location":"commons-gson/xyz.xenondevs.commons.gson/add-all.html","searchKeys":["addAll","fun JsonArray.addAll(chars: Iterable<Char>)","xyz.xenondevs.commons.gson.addAll"]},{"name":"fun JsonArray.addAll(doubleArray: DoubleArray)","description":"xyz.xenondevs.commons.gson.addAll","location":"commons-gson/xyz.xenondevs.commons.gson/add-all.html","searchKeys":["addAll","fun JsonArray.addAll(doubleArray: DoubleArray)","xyz.xenondevs.commons.gson.addAll"]},{"name":"fun JsonArray.addAll(elements: Iterable<JsonElement>)","description":"xyz.xenondevs.commons.gson.addAll","location":"commons-gson/xyz.xenondevs.commons.gson/add-all.html","searchKeys":["addAll","fun JsonArray.addAll(elements: Iterable<JsonElement>)","xyz.xenondevs.commons.gson.addAll"]},{"name":"fun JsonArray.addAll(floatArray: FloatArray)","description":"xyz.xenondevs.commons.gson.addAll","location":"commons-gson/xyz.xenondevs.commons.gson/add-all.html","searchKeys":["addAll","fun JsonArray.addAll(floatArray: FloatArray)","xyz.xenondevs.commons.gson.addAll"]},{"name":"fun JsonArray.addAll(intArray: IntArray)","description":"xyz.xenondevs.commons.gson.addAll","location":"commons-gson/xyz.xenondevs.commons.gson/add-all.html","searchKeys":["addAll","fun JsonArray.addAll(intArray: IntArray)","xyz.xenondevs.commons.gson.addAll"]},{"name":"fun JsonArray.addAll(longArray: LongArray)","description":"xyz.xenondevs.commons.gson.addAll","location":"commons-gson/xyz.xenondevs.commons.gson/add-all.html","searchKeys":["addAll","fun JsonArray.addAll(longArray: LongArray)","xyz.xenondevs.commons.gson.addAll"]},{"name":"fun JsonArray.addAll(numbers: Iterable<Number>)","description":"xyz.xenondevs.commons.gson.addAll","location":"commons-gson/xyz.xenondevs.commons.gson/add-all.html","searchKeys":["addAll","fun JsonArray.addAll(numbers: Iterable<Number>)","xyz.xenondevs.commons.gson.addAll"]},{"name":"fun JsonArray.addAll(strings: Iterable<String>)","description":"xyz.xenondevs.commons.gson.addAll","location":"commons-gson/xyz.xenondevs.commons.gson/add-all.html","searchKeys":["addAll","fun JsonArray.addAll(strings: Iterable<String>)","xyz.xenondevs.commons.gson.addAll"]},{"name":"fun JsonArray.addAll(vararg booleans: Boolean)","description":"xyz.xenondevs.commons.gson.addAll","location":"commons-gson/xyz.xenondevs.commons.gson/add-all.html","searchKeys":["addAll","fun JsonArray.addAll(vararg booleans: Boolean)","xyz.xenondevs.commons.gson.addAll"]},{"name":"fun JsonArray.addAll(vararg chars: Char)","description":"xyz.xenondevs.commons.gson.addAll","location":"commons-gson/xyz.xenondevs.commons.gson/add-all.html","searchKeys":["addAll","fun JsonArray.addAll(vararg chars: Char)","xyz.xenondevs.commons.gson.addAll"]},{"name":"fun JsonArray.addAll(vararg elements: JsonElement)","description":"xyz.xenondevs.commons.gson.addAll","location":"commons-gson/xyz.xenondevs.commons.gson/add-all.html","searchKeys":["addAll","fun JsonArray.addAll(vararg elements: JsonElement)","xyz.xenondevs.commons.gson.addAll"]},{"name":"fun JsonArray.addAll(vararg numbers: Number)","description":"xyz.xenondevs.commons.gson.addAll","location":"commons-gson/xyz.xenondevs.commons.gson/add-all.html","searchKeys":["addAll","fun JsonArray.addAll(vararg numbers: Number)","xyz.xenondevs.commons.gson.addAll"]},{"name":"fun JsonArray.addAll(vararg strings: String)","description":"xyz.xenondevs.commons.gson.addAll","location":"commons-gson/xyz.xenondevs.commons.gson/add-all.html","searchKeys":["addAll","fun JsonArray.addAll(vararg strings: String)","xyz.xenondevs.commons.gson.addAll"]},{"name":"fun JsonArray.getAllBooleans(): List<Boolean>","description":"xyz.xenondevs.commons.gson.getAllBooleans","location":"commons-gson/xyz.xenondevs.commons.gson/get-all-booleans.html","searchKeys":["getAllBooleans","fun JsonArray.getAllBooleans(): List<Boolean>","xyz.xenondevs.commons.gson.getAllBooleans"]},{"name":"fun JsonArray.getAllChars(): List<Char>","description":"xyz.xenondevs.commons.gson.getAllChars","location":"commons-gson/xyz.xenondevs.commons.gson/get-all-chars.html","searchKeys":["getAllChars","fun JsonArray.getAllChars(): List<Char>","xyz.xenondevs.commons.gson.getAllChars"]},{"name":"fun JsonArray.getAllDoubles(): List<Double>","description":"xyz.xenondevs.commons.gson.getAllDoubles","location":"commons-gson/xyz.xenondevs.commons.gson/get-all-doubles.html","searchKeys":["getAllDoubles","fun JsonArray.getAllDoubles(): List<Double>","xyz.xenondevs.commons.gson.getAllDoubles"]},{"name":"fun JsonArray.getAllFloats(): List<Float>","description":"xyz.xenondevs.commons.gson.getAllFloats","location":"commons-gson/xyz.xenondevs.commons.gson/get-all-floats.html","searchKeys":["getAllFloats","fun JsonArray.getAllFloats(): List<Float>","xyz.xenondevs.commons.gson.getAllFloats"]},{"name":"fun JsonArray.getAllInts(): List<Int>","description":"xyz.xenondevs.commons.gson.getAllInts","location":"commons-gson/xyz.xenondevs.commons.gson/get-all-ints.html","searchKeys":["getAllInts","fun JsonArray.getAllInts(): List<Int>","xyz.xenondevs.commons.gson.getAllInts"]},{"name":"fun JsonArray.getAllJsonArrays(): List<JsonArray>","description":"xyz.xenondevs.commons.gson.getAllJsonArrays","location":"commons-gson/xyz.xenondevs.commons.gson/get-all-json-arrays.html","searchKeys":["getAllJsonArrays","fun JsonArray.getAllJsonArrays(): List<JsonArray>","xyz.xenondevs.commons.gson.getAllJsonArrays"]},{"name":"fun JsonArray.getAllJsonObjects(): List<JsonObject>","description":"xyz.xenondevs.commons.gson.getAllJsonObjects","location":"commons-gson/xyz.xenondevs.commons.gson/get-all-json-objects.html","searchKeys":["getAllJsonObjects","fun JsonArray.getAllJsonObjects(): List<JsonObject>","xyz.xenondevs.commons.gson.getAllJsonObjects"]},{"name":"fun JsonArray.getAllLongs(): List<Long>","description":"xyz.xenondevs.commons.gson.getAllLongs","location":"commons-gson/xyz.xenondevs.commons.gson/get-all-longs.html","searchKeys":["getAllLongs","fun JsonArray.getAllLongs(): List<Long>","xyz.xenondevs.commons.gson.getAllLongs"]},{"name":"fun JsonArray.getAllStrings(): List<String>","description":"xyz.xenondevs.commons.gson.getAllStrings","location":"commons-gson/xyz.xenondevs.commons.gson/get-all-strings.html","searchKeys":["getAllStrings","fun JsonArray.getAllStrings(): List<String>","xyz.xenondevs.commons.gson.getAllStrings"]},{"name":"fun JsonElement.isBoolean(): Boolean","description":"xyz.xenondevs.commons.gson.isBoolean","location":"commons-gson/xyz.xenondevs.commons.gson/is-boolean.html","searchKeys":["isBoolean","fun JsonElement.isBoolean(): Boolean","xyz.xenondevs.commons.gson.isBoolean"]},{"name":"fun JsonElement.isNumber(): Boolean","description":"xyz.xenondevs.commons.gson.isNumber","location":"commons-gson/xyz.xenondevs.commons.gson/is-number.html","searchKeys":["isNumber","fun JsonElement.isNumber(): Boolean","xyz.xenondevs.commons.gson.isNumber"]},{"name":"fun JsonElement.isString(): Boolean","description":"xyz.xenondevs.commons.gson.isString","location":"commons-gson/xyz.xenondevs.commons.gson/is-string.html","searchKeys":["isString","fun JsonElement.isString(): Boolean","xyz.xenondevs.commons.gson.isString"]},{"name":"fun JsonElement.writeToFile(file: File)","description":"xyz.xenondevs.commons.gson.writeToFile","location":"commons-gson/xyz.xenondevs.commons.gson/write-to-file.html","searchKeys":["writeToFile","fun JsonElement.writeToFile(file: File)","xyz.xenondevs.commons.gson.writeToFile"]},{"name":"fun JsonElement.writeToFile(path: Path)","description":"xyz.xenondevs.commons.gson.writeToFile","location":"commons-gson/xyz.xenondevs.commons.gson/write-to-file.html","searchKeys":["writeToFile","fun JsonElement.writeToFile(path: Path)","xyz.xenondevs.commons.gson.writeToFile"]},{"name":"fun JsonObject.addAll(other: JsonObject)","description":"xyz.xenondevs.commons.gson.addAll","location":"commons-gson/xyz.xenondevs.commons.gson/add-all.html","searchKeys":["addAll","fun JsonObject.addAll(other: JsonObject)","xyz.xenondevs.commons.gson.addAll"]},{"name":"fun JsonObject.getArray(key: String): JsonArray","description":"xyz.xenondevs.commons.gson.getArray","location":"commons-gson/xyz.xenondevs.commons.gson/get-array.html","searchKeys":["getArray","fun JsonObject.getArray(key: String): JsonArray","xyz.xenondevs.commons.gson.getArray"]},{"name":"fun JsonObject.getArrayOrNull(key: String): JsonArray?","description":"xyz.xenondevs.commons.gson.getArrayOrNull","location":"commons-gson/xyz.xenondevs.commons.gson/get-array-or-null.html","searchKeys":["getArrayOrNull","fun JsonObject.getArrayOrNull(key: String): JsonArray?","xyz.xenondevs.commons.gson.getArrayOrNull"]},{"name":"fun JsonObject.getBoolean(key: String): Boolean","description":"xyz.xenondevs.commons.gson.getBoolean","location":"commons-gson/xyz.xenondevs.commons.gson/get-boolean.html","searchKeys":["getBoolean","fun JsonObject.getBoolean(key: String): Boolean","xyz.xenondevs.commons.gson.getBoolean"]},{"name":"fun JsonObject.getBooleanOrNull(key: String): Boolean?","description":"xyz.xenondevs.commons.gson.getBooleanOrNull","location":"commons-gson/xyz.xenondevs.commons.gson/get-boolean-or-null.html","searchKeys":["getBooleanOrNull","fun JsonObject.getBooleanOrNull(key: String): Boolean?","xyz.xenondevs.commons.gson.getBooleanOrNull"]},{"name":"fun JsonObject.getByte(key: String): Byte","description":"xyz.xenondevs.commons.gson.getByte","location":"commons-gson/xyz.xenondevs.commons.gson/get-byte.html","searchKeys":["getByte","fun JsonObject.getByte(key: String): Byte","xyz.xenondevs.commons.gson.getByte"]},{"name":"fun JsonObject.getByteOrNull(key: String): Byte?","description":"xyz.xenondevs.commons.gson.getByteOrNull","location":"commons-gson/xyz.xenondevs.commons.gson/get-byte-or-null.html","searchKeys":["getByteOrNull","fun JsonObject.getByteOrNull(key: String): Byte?","xyz.xenondevs.commons.gson.getByteOrNull"]},{"name":"fun JsonObject.getDouble(key: String): Double","description":"xyz.xenondevs.commons.gson.getDouble","location":"commons-gson/xyz.xenondevs.commons.gson/get-double.html","searchKeys":["getDouble","fun JsonObject.getDouble(key: String): Double","xyz.xenondevs.commons.gson.getDouble"]},{"name":"fun JsonObject.getDoubleOrNull(key: String): Double?","description":"xyz.xenondevs.commons.gson.getDoubleOrNull","location":"commons-gson/xyz.xenondevs.commons.gson/get-double-or-null.html","searchKeys":["getDoubleOrNull","fun JsonObject.getDoubleOrNull(key: String): Double?","xyz.xenondevs.commons.gson.getDoubleOrNull"]},{"name":"fun JsonObject.getFloat(key: String): Float","description":"xyz.xenondevs.commons.gson.getFloat","location":"commons-gson/xyz.xenondevs.commons.gson/get-float.html","searchKeys":["getFloat","fun JsonObject.getFloat(key: String): Float","xyz.xenondevs.commons.gson.getFloat"]},{"name":"fun JsonObject.getFloatOrNull(key: String): Float?","description":"xyz.xenondevs.commons.gson.getFloatOrNull","location":"commons-gson/xyz.xenondevs.commons.gson/get-float-or-null.html","searchKeys":["getFloatOrNull","fun JsonObject.getFloatOrNull(key: String): Float?","xyz.xenondevs.commons.gson.getFloatOrNull"]},{"name":"fun JsonObject.getInt(key: String): Int","description":"xyz.xenondevs.commons.gson.getInt","location":"commons-gson/xyz.xenondevs.commons.gson/get-int.html","searchKeys":["getInt","fun JsonObject.getInt(key: String): Int","xyz.xenondevs.commons.gson.getInt"]},{"name":"fun JsonObject.getIntOrNull(key: String): Int?","description":"xyz.xenondevs.commons.gson.getIntOrNull","location":"commons-gson/xyz.xenondevs.commons.gson/get-int-or-null.html","searchKeys":["getIntOrNull","fun JsonObject.getIntOrNull(key: String): Int?","xyz.xenondevs.commons.gson.getIntOrNull"]},{"name":"fun JsonObject.getLong(key: String): Long","description":"xyz.xenondevs.commons.gson.getLong","location":"commons-gson/xyz.xenondevs.commons.gson/get-long.html","searchKeys":["getLong","fun JsonObject.getLong(key: String): Long","xyz.xenondevs.commons.gson.getLong"]},{"name":"fun JsonObject.getLongOrNull(key: String): Long?","description":"xyz.xenondevs.commons.gson.getLongOrNull","location":"commons-gson/xyz.xenondevs.commons.gson/get-long-or-null.html","searchKeys":["getLongOrNull","fun JsonObject.getLongOrNull(key: String): Long?","xyz.xenondevs.commons.gson.getLongOrNull"]},{"name":"fun JsonObject.getNumber(key: String): Number","description":"xyz.xenondevs.commons.gson.getNumber","location":"commons-gson/xyz.xenondevs.commons.gson/get-number.html","searchKeys":["getNumber","fun JsonObject.getNumber(key: String): Number","xyz.xenondevs.commons.gson.getNumber"]},{"name":"fun JsonObject.getNumberOrNull(key: String): Number?","description":"xyz.xenondevs.commons.gson.getNumberOrNull","location":"commons-gson/xyz.xenondevs.commons.gson/get-number-or-null.html","searchKeys":["getNumberOrNull","fun JsonObject.getNumberOrNull(key: String): Number?","xyz.xenondevs.commons.gson.getNumberOrNull"]},{"name":"fun JsonObject.getObject(key: String): JsonObject","description":"xyz.xenondevs.commons.gson.getObject","location":"commons-gson/xyz.xenondevs.commons.gson/get-object.html","searchKeys":["getObject","fun JsonObject.getObject(key: String): JsonObject","xyz.xenondevs.commons.gson.getObject"]},{"name":"fun JsonObject.getObjectOrNull(key: String): JsonObject?","description":"xyz.xenondevs.commons.gson.getObjectOrNull","location":"commons-gson/xyz.xenondevs.commons.gson/get-object-or-null.html","searchKeys":["getObjectOrNull","fun JsonObject.getObjectOrNull(key: String): JsonObject?","xyz.xenondevs.commons.gson.getObjectOrNull"]},{"name":"fun JsonObject.getOrNull(key: String): JsonElement?","description":"xyz.xenondevs.commons.gson.getOrNull","location":"commons-gson/xyz.xenondevs.commons.gson/get-or-null.html","searchKeys":["getOrNull","fun JsonObject.getOrNull(key: String): JsonElement?","xyz.xenondevs.commons.gson.getOrNull"]},{"name":"fun JsonObject.getShort(key: String): Short","description":"xyz.xenondevs.commons.gson.getShort","location":"commons-gson/xyz.xenondevs.commons.gson/get-short.html","searchKeys":["getShort","fun JsonObject.getShort(key: String): Short","xyz.xenondevs.commons.gson.getShort"]},{"name":"fun JsonObject.getShortOrNull(key: String): Short?","description":"xyz.xenondevs.commons.gson.getShortOrNull","location":"commons-gson/xyz.xenondevs.commons.gson/get-short-or-null.html","searchKeys":["getShortOrNull","fun JsonObject.getShortOrNull(key: String): Short?","xyz.xenondevs.commons.gson.getShortOrNull"]},{"name":"fun JsonObject.getString(key: String): String","description":"xyz.xenondevs.commons.gson.getString","location":"commons-gson/xyz.xenondevs.commons.gson/get-string.html","searchKeys":["getString","fun JsonObject.getString(key: String): String","xyz.xenondevs.commons.gson.getString"]},{"name":"fun JsonObject.getStringOrNull(key: String): String?","description":"xyz.xenondevs.commons.gson.getStringOrNull","location":"commons-gson/xyz.xenondevs.commons.gson/get-string-or-null.html","searchKeys":["getStringOrNull","fun JsonObject.getStringOrNull(key: String): String?","xyz.xenondevs.commons.gson.getStringOrNull"]},{"name":"fun JsonObject.hasArray(key: String): Boolean","description":"xyz.xenondevs.commons.gson.hasArray","location":"commons-gson/xyz.xenondevs.commons.gson/has-array.html","searchKeys":["hasArray","fun JsonObject.hasArray(key: String): Boolean","xyz.xenondevs.commons.gson.hasArray"]},{"name":"fun JsonObject.hasBoolean(key: String): Boolean","description":"xyz.xenondevs.commons.gson.hasBoolean","location":"commons-gson/xyz.xenondevs.commons.gson/has-boolean.html","searchKeys":["hasBoolean","fun JsonObject.hasBoolean(key: String): Boolean","xyz.xenondevs.commons.gson.hasBoolean"]},{"name":"fun JsonObject.hasNumber(key: String): Boolean","description":"xyz.xenondevs.commons.gson.hasNumber","location":"commons-gson/xyz.xenondevs.commons.gson/has-number.html","searchKeys":["hasNumber","fun JsonObject.hasNumber(key: String): Boolean","xyz.xenondevs.commons.gson.hasNumber"]},{"name":"fun JsonObject.hasObject(key: String): Boolean","description":"xyz.xenondevs.commons.gson.hasObject","location":"commons-gson/xyz.xenondevs.commons.gson/has-object.html","searchKeys":["hasObject","fun JsonObject.hasObject(key: String): Boolean","xyz.xenondevs.commons.gson.hasObject"]},{"name":"fun JsonObject.hasString(key: String): Boolean","description":"xyz.xenondevs.commons.gson.hasString","location":"commons-gson/xyz.xenondevs.commons.gson/has-string.html","searchKeys":["hasString","fun JsonObject.hasString(key: String): Boolean","xyz.xenondevs.commons.gson.hasString"]},{"name":"fun LongArray.toJsonArray(): JsonArray","description":"xyz.xenondevs.commons.gson.toJsonArray","location":"commons-gson/xyz.xenondevs.commons.gson/to-json-array.html","searchKeys":["toJsonArray","fun LongArray.toJsonArray(): JsonArray","xyz.xenondevs.commons.gson.toJsonArray"]},{"name":"fun Path.parseJson(): JsonElement","description":"xyz.xenondevs.commons.gson.parseJson","location":"commons-gson/xyz.xenondevs.commons.gson/parse-json.html","searchKeys":["parseJson","fun Path.parseJson(): JsonElement","xyz.xenondevs.commons.gson.parseJson"]},{"name":"inline fun <T : JsonElement> JsonObject.getOrPut(key: String, defaultValue: () -> T): T","description":"xyz.xenondevs.commons.gson.getOrPut","location":"commons-gson/xyz.xenondevs.commons.gson/get-or-put.html","searchKeys":["getOrPut","inline fun <T : JsonElement> JsonObject.getOrPut(key: String, defaultValue: () -> T): T","xyz.xenondevs.commons.gson.getOrPut"]},{"name":"inline fun <T, A : JsonSerializer<T>, JsonDeserializer<T>> GsonBuilder.registerTypeAdapter(typeAdapter: A): GsonBuilder","description":"xyz.xenondevs.commons.gson.registerTypeAdapter","location":"commons-gson/xyz.xenondevs.commons.gson/register-type-adapter.html","searchKeys":["registerTypeAdapter","inline fun <T, A : JsonSerializer<T>, JsonDeserializer<T>> GsonBuilder.registerTypeAdapter(typeAdapter: A): GsonBuilder","xyz.xenondevs.commons.gson.registerTypeAdapter"]},{"name":"inline fun <T, A : JsonSerializer<T>, JsonDeserializer<T>> GsonBuilder.registerTypeHierarchyAdapter(typeAdapter: A): GsonBuilder","description":"xyz.xenondevs.commons.gson.registerTypeHierarchyAdapter","location":"commons-gson/xyz.xenondevs.commons.gson/register-type-hierarchy-adapter.html","searchKeys":["registerTypeHierarchyAdapter","inline fun <T, A : JsonSerializer<T>, JsonDeserializer<T>> GsonBuilder.registerTypeHierarchyAdapter(typeAdapter: A): GsonBuilder","xyz.xenondevs.commons.gson.registerTypeHierarchyAdapter"]},{"name":"inline fun <T> Gson.fromJson(file: File): T?","description":"xyz.xenondevs.commons.gson.fromJson","location":"commons-gson/xyz.xenondevs.commons.gson/from-json.html","searchKeys":["fromJson","inline fun <T> Gson.fromJson(file: File): T?","xyz.xenondevs.commons.gson.fromJson"]},{"name":"inline fun <T> Gson.fromJson(file: Path): T?","description":"xyz.xenondevs.commons.gson.fromJson","location":"commons-gson/xyz.xenondevs.commons.gson/from-json.html","searchKeys":["fromJson","inline fun <T> Gson.fromJson(file: Path): T?","xyz.xenondevs.commons.gson.fromJson"]},{"name":"inline fun <T> Gson.fromJson(json: String?): T?","description":"xyz.xenondevs.commons.gson.fromJson","location":"commons-gson/xyz.xenondevs.commons.gson/from-json.html","searchKeys":["fromJson","inline fun <T> Gson.fromJson(json: String?): T?","xyz.xenondevs.commons.gson.fromJson"]},{"name":"inline fun <T> Gson.fromJson(jsonElement: JsonElement?): T?","description":"xyz.xenondevs.commons.gson.fromJson","location":"commons-gson/xyz.xenondevs.commons.gson/from-json.html","searchKeys":["fromJson","inline fun <T> Gson.fromJson(jsonElement: JsonElement?): T?","xyz.xenondevs.commons.gson.fromJson"]},{"name":"inline fun <T> Gson.fromJson(reader: Reader): T?","description":"xyz.xenondevs.commons.gson.fromJson","location":"commons-gson/xyz.xenondevs.commons.gson/from-json.html","searchKeys":["fromJson","inline fun <T> Gson.fromJson(reader: Reader): T?","xyz.xenondevs.commons.gson.fromJson"]},{"name":"inline fun <T> Gson.toJsonTreeTyped(src: T): JsonElement","description":"xyz.xenondevs.commons.gson.toJsonTreeTyped","location":"commons-gson/xyz.xenondevs.commons.gson/to-json-tree-typed.html","searchKeys":["toJsonTreeTyped","inline fun <T> Gson.toJsonTreeTyped(src: T): JsonElement","xyz.xenondevs.commons.gson.toJsonTreeTyped"]},{"name":"inline fun <T> GsonBuilder.registerTypeAdapter(typeAdapter: InstanceCreator<T>): GsonBuilder","description":"xyz.xenondevs.commons.gson.registerTypeAdapter","location":"commons-gson/xyz.xenondevs.commons.gson/register-type-adapter.html","searchKeys":["registerTypeAdapter","inline fun <T> GsonBuilder.registerTypeAdapter(typeAdapter: InstanceCreator<T>): GsonBuilder","xyz.xenondevs.commons.gson.registerTypeAdapter"]},{"name":"inline fun <T> GsonBuilder.registerTypeAdapter(typeAdapter: JsonDeserializer<T>): GsonBuilder","description":"xyz.xenondevs.commons.gson.registerTypeAdapter","location":"commons-gson/xyz.xenondevs.commons.gson/register-type-adapter.html","searchKeys":["registerTypeAdapter","inline fun <T> GsonBuilder.registerTypeAdapter(typeAdapter: JsonDeserializer<T>): GsonBuilder","xyz.xenondevs.commons.gson.registerTypeAdapter"]},{"name":"inline fun <T> GsonBuilder.registerTypeAdapter(typeAdapter: JsonSerializer<T>): GsonBuilder","description":"xyz.xenondevs.commons.gson.registerTypeAdapter","location":"commons-gson/xyz.xenondevs.commons.gson/register-type-adapter.html","searchKeys":["registerTypeAdapter","inline fun <T> GsonBuilder.registerTypeAdapter(typeAdapter: JsonSerializer<T>): GsonBuilder","xyz.xenondevs.commons.gson.registerTypeAdapter"]},{"name":"inline fun <T> GsonBuilder.registerTypeAdapter(typeAdapter: TypeAdapter<T>): GsonBuilder","description":"xyz.xenondevs.commons.gson.registerTypeAdapter","location":"commons-gson/xyz.xenondevs.commons.gson/register-type-adapter.html","searchKeys":["registerTypeAdapter","inline fun <T> GsonBuilder.registerTypeAdapter(typeAdapter: TypeAdapter<T>): GsonBuilder","xyz.xenondevs.commons.gson.registerTypeAdapter"]},{"name":"inline fun <T> GsonBuilder.registerTypeHierarchyAdapter(typeAdapter: JsonDeserializer<T>): GsonBuilder","description":"xyz.xenondevs.commons.gson.registerTypeHierarchyAdapter","location":"commons-gson/xyz.xenondevs.commons.gson/register-type-hierarchy-adapter.html","searchKeys":["registerTypeHierarchyAdapter","inline fun <T> GsonBuilder.registerTypeHierarchyAdapter(typeAdapter: JsonDeserializer<T>): GsonBuilder","xyz.xenondevs.commons.gson.registerTypeHierarchyAdapter"]},{"name":"inline fun <T> GsonBuilder.registerTypeHierarchyAdapter(typeAdapter: JsonSerializer<T>): GsonBuilder","description":"xyz.xenondevs.commons.gson.registerTypeHierarchyAdapter","location":"commons-gson/xyz.xenondevs.commons.gson/register-type-hierarchy-adapter.html","searchKeys":["registerTypeHierarchyAdapter","inline fun <T> GsonBuilder.registerTypeHierarchyAdapter(typeAdapter: JsonSerializer<T>): GsonBuilder","xyz.xenondevs.commons.gson.registerTypeHierarchyAdapter"]},{"name":"inline fun <T> GsonBuilder.registerTypeHierarchyAdapter(typeAdapter: TypeAdapter<T>): GsonBuilder","description":"xyz.xenondevs.commons.gson.registerTypeHierarchyAdapter","location":"commons-gson/xyz.xenondevs.commons.gson/register-type-hierarchy-adapter.html","searchKeys":["registerTypeHierarchyAdapter","inline fun <T> GsonBuilder.registerTypeHierarchyAdapter(typeAdapter: TypeAdapter<T>): GsonBuilder","xyz.xenondevs.commons.gson.registerTypeHierarchyAdapter"]},{"name":"inline fun <T> JsonDeserializationContext.deserializeTyped(json: JsonElement): T","description":"xyz.xenondevs.commons.gson.deserializeTyped","location":"commons-gson/xyz.xenondevs.commons.gson/deserialize-typed.html","searchKeys":["deserializeTyped","inline fun <T> JsonDeserializationContext.deserializeTyped(json: JsonElement): T","xyz.xenondevs.commons.gson.deserializeTyped"]},{"name":"inline fun <T> JsonSerializationContext.serializeTyped(src: T): JsonElement","description":"xyz.xenondevs.commons.gson.serializeTyped","location":"commons-gson/xyz.xenondevs.commons.gson/serialize-typed.html","searchKeys":["serializeTyped","inline fun <T> JsonSerializationContext.serializeTyped(src: T): JsonElement","xyz.xenondevs.commons.gson.serializeTyped"]},{"name":"operator fun JsonObject.set(key: String, value: JsonElement)","description":"xyz.xenondevs.commons.gson.set","location":"commons-gson/xyz.xenondevs.commons.gson/set.html","searchKeys":["set","operator fun JsonObject.set(key: String, value: JsonElement)","xyz.xenondevs.commons.gson.set"]},{"name":"abstract fun <R : Any> observeWeak(owner: R, action: (owner: R) -> Unit)","description":"xyz.xenondevs.commons.provider.Provider.observeWeak","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/observe-weak.html","searchKeys":["observeWeak","abstract fun <R : Any> observeWeak(owner: R, action: (owner: R) -> Unit)","xyz.xenondevs.commons.provider.Provider.observeWeak"]},{"name":"abstract fun <R : Any> subscribeWeak(owner: R, action: (owner: R, value: T) -> Unit)","description":"xyz.xenondevs.commons.provider.Provider.subscribeWeak","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/subscribe-weak.html","searchKeys":["subscribeWeak","abstract fun <R : Any> subscribeWeak(owner: R, action: (owner: R, value: T) -> Unit)","xyz.xenondevs.commons.provider.Provider.subscribeWeak"]},{"name":"abstract fun <R : Any> unobserveWeak(owner: R)","description":"xyz.xenondevs.commons.provider.Provider.unobserveWeak","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/unobserve-weak.html","searchKeys":["unobserveWeak","abstract fun <R : Any> unobserveWeak(owner: R)","xyz.xenondevs.commons.provider.Provider.unobserveWeak"]},{"name":"abstract fun <R : Any> unobserveWeak(owner: R, action: (R) -> Unit)","description":"xyz.xenondevs.commons.provider.Provider.unobserveWeak","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/unobserve-weak.html","searchKeys":["unobserveWeak","abstract fun <R : Any> unobserveWeak(owner: R, action: (R) -> Unit)","xyz.xenondevs.commons.provider.Provider.unobserveWeak"]},{"name":"abstract fun <R : Any> unsubscribeWeak(owner: R)","description":"xyz.xenondevs.commons.provider.Provider.unsubscribeWeak","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/unsubscribe-weak.html","searchKeys":["unsubscribeWeak","abstract fun <R : Any> unsubscribeWeak(owner: R)","xyz.xenondevs.commons.provider.Provider.unsubscribeWeak"]},{"name":"abstract fun <R : Any> unsubscribeWeak(owner: R, action: (R, T) -> Unit)","description":"xyz.xenondevs.commons.provider.Provider.unsubscribeWeak","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/unsubscribe-weak.html","searchKeys":["unsubscribeWeak","abstract fun <R : Any> unsubscribeWeak(owner: R, action: (R, T) -> Unit)","xyz.xenondevs.commons.provider.Provider.unsubscribeWeak"]},{"name":"abstract fun <R> flatMap(transform: (T) -> Provider<R>): Provider<R>","description":"xyz.xenondevs.commons.provider.Provider.flatMap","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/flat-map.html","searchKeys":["flatMap","abstract fun <R> flatMap(transform: (T) -> Provider<R>): Provider<R>","xyz.xenondevs.commons.provider.Provider.flatMap"]},{"name":"abstract fun <R> flatMapMutable(transform: (T) -> MutableProvider<R>): MutableProvider<R>","description":"xyz.xenondevs.commons.provider.Provider.flatMapMutable","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/flat-map-mutable.html","searchKeys":["flatMapMutable","abstract fun <R> flatMapMutable(transform: (T) -> MutableProvider<R>): MutableProvider<R>","xyz.xenondevs.commons.provider.Provider.flatMapMutable"]},{"name":"abstract fun <R> lazyFlatMap(transform: (T) -> Provider<R>): Provider<R>","description":"xyz.xenondevs.commons.provider.Provider.lazyFlatMap","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/lazy-flat-map.html","searchKeys":["lazyFlatMap","abstract fun <R> lazyFlatMap(transform: (T) -> Provider<R>): Provider<R>","xyz.xenondevs.commons.provider.Provider.lazyFlatMap"]},{"name":"abstract fun <R> map(transform: (T) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.Provider.map","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/map.html","searchKeys":["map","abstract fun <R> map(transform: (T) -> R): Provider<R>","xyz.xenondevs.commons.provider.Provider.map"]},{"name":"abstract fun <R> map(transform: (T) -> R, untransform: (R) -> T): MutableProvider<R>","description":"xyz.xenondevs.commons.provider.MutableProvider.map","location":"commons-provider/xyz.xenondevs.commons.provider/-mutable-provider/map.html","searchKeys":["map","abstract fun <R> map(transform: (T) -> R, untransform: (R) -> T): MutableProvider<R>","xyz.xenondevs.commons.provider.MutableProvider.map"]},{"name":"abstract fun <R> strongFlatMap(transform: (T) -> Provider<R>): Provider<R>","description":"xyz.xenondevs.commons.provider.Provider.strongFlatMap","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/strong-flat-map.html","searchKeys":["strongFlatMap","abstract fun <R> strongFlatMap(transform: (T) -> Provider<R>): Provider<R>","xyz.xenondevs.commons.provider.Provider.strongFlatMap"]},{"name":"abstract fun <R> strongFlatMapMutable(transform: (T) -> MutableProvider<R>): MutableProvider<R>","description":"xyz.xenondevs.commons.provider.Provider.strongFlatMapMutable","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/strong-flat-map-mutable.html","searchKeys":["strongFlatMapMutable","abstract fun <R> strongFlatMapMutable(transform: (T) -> MutableProvider<R>): MutableProvider<R>","xyz.xenondevs.commons.provider.Provider.strongFlatMapMutable"]},{"name":"abstract fun <R> strongMap(transform: (T) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.Provider.strongMap","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/strong-map.html","searchKeys":["strongMap","abstract fun <R> strongMap(transform: (T) -> R): Provider<R>","xyz.xenondevs.commons.provider.Provider.strongMap"]},{"name":"abstract fun <R> strongMap(transform: (T) -> R, untransform: (R) -> T): MutableProvider<R>","description":"xyz.xenondevs.commons.provider.MutableProvider.strongMap","location":"commons-provider/xyz.xenondevs.commons.provider/-mutable-provider/strong-map.html","searchKeys":["strongMap","abstract fun <R> strongMap(transform: (T) -> R, untransform: (R) -> T): MutableProvider<R>","xyz.xenondevs.commons.provider.MutableProvider.strongMap"]},{"name":"abstract fun observe(action: () -> Unit)","description":"xyz.xenondevs.commons.provider.Provider.observe","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/observe.html","searchKeys":["observe","abstract fun observe(action: () -> Unit)","xyz.xenondevs.commons.provider.Provider.observe"]},{"name":"abstract fun set(value: T)","description":"xyz.xenondevs.commons.provider.MutableProvider.set","location":"commons-provider/xyz.xenondevs.commons.provider/-mutable-provider/set.html","searchKeys":["set","abstract fun set(value: T)","xyz.xenondevs.commons.provider.MutableProvider.set"]},{"name":"abstract fun subscribe(action: (value: T) -> Unit)","description":"xyz.xenondevs.commons.provider.Provider.subscribe","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/subscribe.html","searchKeys":["subscribe","abstract fun subscribe(action: (value: T) -> Unit)","xyz.xenondevs.commons.provider.Provider.subscribe"]},{"name":"abstract fun unobserve(action: () -> Unit)","description":"xyz.xenondevs.commons.provider.Provider.unobserve","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/unobserve.html","searchKeys":["unobserve","abstract fun unobserve(action: () -> Unit)","xyz.xenondevs.commons.provider.Provider.unobserve"]},{"name":"abstract fun unsubscribe(action: (T) -> Unit)","description":"xyz.xenondevs.commons.provider.Provider.unsubscribe","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/unsubscribe.html","searchKeys":["unsubscribe","abstract fun unsubscribe(action: (T) -> Unit)","xyz.xenondevs.commons.provider.Provider.unsubscribe"]},{"name":"fun <A, B, C, D, E, F, G, H, I, J, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, j: Provider<J>, mapValue: (A, B, C, D, E, F, G, H, I, J) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E, F, G, H, I, J, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, j: Provider<J>, mapValue: (A, B, C, D, E, F, G, H, I, J) -> R): Provider<R>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, H, I, J, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, j: Provider<J>, mapValue: (A, B, C, D, E, F, G, H, I, J) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E, F, G, H, I, J, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, j: Provider<J>, mapValue: (A, B, C, D, E, F, G, H, I, J) -> R): Provider<R>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, H, I, J> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, j: Provider<J>): Provider<Tuple10<A, B, C, D, E, F, G, H, I, J>>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E, F, G, H, I, J> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, j: Provider<J>): Provider<Tuple10<A, B, C, D, E, F, G, H, I, J>>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, H, I, J> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, j: Provider<J>): Provider<Tuple10<A, B, C, D, E, F, G, H, I, J>>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E, F, G, H, I, J> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, j: Provider<J>): Provider<Tuple10<A, B, C, D, E, F, G, H, I, J>>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, H, I, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, mapValue: (A, B, C, D, E, F, G, H, I) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E, F, G, H, I, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, mapValue: (A, B, C, D, E, F, G, H, I) -> R): Provider<R>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, H, I, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, mapValue: (A, B, C, D, E, F, G, H, I) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E, F, G, H, I, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, mapValue: (A, B, C, D, E, F, G, H, I) -> R): Provider<R>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, H, I> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>): Provider<Tuple9<A, B, C, D, E, F, G, H, I>>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E, F, G, H, I> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>): Provider<Tuple9<A, B, C, D, E, F, G, H, I>>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, H, I> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>): Provider<Tuple9<A, B, C, D, E, F, G, H, I>>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E, F, G, H, I> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>): Provider<Tuple9<A, B, C, D, E, F, G, H, I>>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, H, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, mapValue: (A, B, C, D, E, F, G, H) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E, F, G, H, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, mapValue: (A, B, C, D, E, F, G, H) -> R): Provider<R>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, H, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, mapValue: (A, B, C, D, E, F, G, H) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E, F, G, H, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, mapValue: (A, B, C, D, E, F, G, H) -> R): Provider<R>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, H> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>): Provider<Tuple8<A, B, C, D, E, F, G, H>>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E, F, G, H> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>): Provider<Tuple8<A, B, C, D, E, F, G, H>>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, H> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>): Provider<Tuple8<A, B, C, D, E, F, G, H>>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E, F, G, H> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>): Provider<Tuple8<A, B, C, D, E, F, G, H>>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, mapValue: (A, B, C, D, E, F, G) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E, F, G, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, mapValue: (A, B, C, D, E, F, G) -> R): Provider<R>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, mapValue: (A, B, C, D, E, F, G) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E, F, G, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, mapValue: (A, B, C, D, E, F, G) -> R): Provider<R>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, E, F, G> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>): Provider<Tuple7<A, B, C, D, E, F, G>>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E, F, G> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>): Provider<Tuple7<A, B, C, D, E, F, G>>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E, F, G> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>): Provider<Tuple7<A, B, C, D, E, F, G>>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E, F, G> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>): Provider<Tuple7<A, B, C, D, E, F, G>>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, E, F, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, mapValue: (A, B, C, D, E, F) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E, F, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, mapValue: (A, B, C, D, E, F) -> R): Provider<R>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E, F, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, mapValue: (A, B, C, D, E, F) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E, F, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, mapValue: (A, B, C, D, E, F) -> R): Provider<R>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, E, F> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>): Provider<Tuple6<A, B, C, D, E, F>>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E, F> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>): Provider<Tuple6<A, B, C, D, E, F>>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E, F> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>): Provider<Tuple6<A, B, C, D, E, F>>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E, F> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>): Provider<Tuple6<A, B, C, D, E, F>>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, E, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, mapValue: (A, B, C, D, E) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, mapValue: (A, B, C, D, E) -> R): Provider<R>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, mapValue: (A, B, C, D, E) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, mapValue: (A, B, C, D, E) -> R): Provider<R>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, E> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>): Provider<Tuple5<A, B, C, D, E>>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>): Provider<Tuple5<A, B, C, D, E>>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>): Provider<Tuple5<A, B, C, D, E>>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>): Provider<Tuple5<A, B, C, D, E>>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, mapValue: (A, B, C, D) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, mapValue: (A, B, C, D) -> R): Provider<R>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, mapValue: (A, B, C, D) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, mapValue: (A, B, C, D) -> R): Provider<R>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>): Provider<Tuple4<A, B, C, D>>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>): Provider<Tuple4<A, B, C, D>>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>): Provider<Tuple4<A, B, C, D>>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>): Provider<Tuple4<A, B, C, D>>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, mapValue: (A, B, C) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, mapValue: (A, B, C) -> R): Provider<R>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, mapValue: (A, B, C) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, mapValue: (A, B, C) -> R): Provider<R>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>): Provider<Tuple3<A, B, C>>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>): Provider<Tuple3<A, B, C>>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>): Provider<Tuple3<A, B, C>>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>): Provider<Tuple3<A, B, C>>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, R> combinedProvider(a: Provider<A>, b: Provider<B>, mapValue: (A, B) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, R> combinedProvider(a: Provider<A>, b: Provider<B>, mapValue: (A, B) -> R): Provider<R>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, mapValue: (A, B) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, mapValue: (A, B) -> R): Provider<R>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B> combinedProvider(a: Provider<A>, b: Provider<B>): Provider<Tuple2<A, B>>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B> combinedProvider(a: Provider<A>, b: Provider<B>): Provider<Tuple2<A, B>>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B> strongCombinedProvider(a: Provider<A>, b: Provider<B>): Provider<Tuple2<A, B>>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B> strongCombinedProvider(a: Provider<A>, b: Provider<B>): Provider<Tuple2<A, B>>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <E> MutableProvider<out MutableList<E>>.observed(): Provider<MutableList<E>>","description":"xyz.xenondevs.commons.provider.observed","location":"commons-provider/xyz.xenondevs.commons.provider/observed.html","searchKeys":["observed","fun <E> MutableProvider<out MutableList<E>>.observed(): Provider<MutableList<E>>","xyz.xenondevs.commons.provider.observed"]},{"name":"fun <E> MutableProvider<out MutableList<E>>.strongObserved(): Provider<MutableList<E>>","description":"xyz.xenondevs.commons.provider.strongObserved","location":"commons-provider/xyz.xenondevs.commons.provider/strong-observed.html","searchKeys":["strongObserved","fun <E> MutableProvider<out MutableList<E>>.strongObserved(): Provider<MutableList<E>>","xyz.xenondevs.commons.provider.strongObserved"]},{"name":"fun <E> MutableProvider<out MutableSet<E>>.observed(): Provider<MutableSet<E>>","description":"xyz.xenondevs.commons.provider.observed","location":"commons-provider/xyz.xenondevs.commons.provider/observed.html","searchKeys":["observed","fun <E> MutableProvider<out MutableSet<E>>.observed(): Provider<MutableSet<E>>","xyz.xenondevs.commons.provider.observed"]},{"name":"fun <E> MutableProvider<out MutableSet<E>>.strongObserved(): Provider<MutableSet<E>>","description":"xyz.xenondevs.commons.provider.strongObserved","location":"commons-provider/xyz.xenondevs.commons.provider/strong-observed.html","searchKeys":["strongObserved","fun <E> MutableProvider<out MutableSet<E>>.strongObserved(): Provider<MutableSet<E>>","xyz.xenondevs.commons.provider.strongObserved"]},{"name":"fun <K, V, M : MutableMap<in K, in V>> Provider<List<Map<K, V>>>.mergeMapsTo(makeMap: (size: Int) -> M): Provider<M>","description":"xyz.xenondevs.commons.provider.mergeMapsTo","location":"commons-provider/xyz.xenondevs.commons.provider/merge-maps-to.html","searchKeys":["mergeMapsTo","fun <K, V, M : MutableMap<in K, in V>> Provider<List<Map<K, V>>>.mergeMapsTo(makeMap: (size: Int) -> M): Provider<M>","xyz.xenondevs.commons.provider.mergeMapsTo"]},{"name":"fun <K, V, M : MutableMap<in K, in V>> Provider<List<Map<K, V>>>.strongMergeMapsTo(makeMap: (size: Int) -> M): Provider<M>","description":"xyz.xenondevs.commons.provider.strongMergeMapsTo","location":"commons-provider/xyz.xenondevs.commons.provider/strong-merge-maps-to.html","searchKeys":["strongMergeMapsTo","fun <K, V, M : MutableMap<in K, in V>> Provider<List<Map<K, V>>>.strongMergeMapsTo(makeMap: (size: Int) -> M): Provider<M>","xyz.xenondevs.commons.provider.strongMergeMapsTo"]},{"name":"fun <K, V> MutableProvider<out MutableMap<K, V>>.observed(): Provider<MutableMap<K, V>>","description":"xyz.xenondevs.commons.provider.observed","location":"commons-provider/xyz.xenondevs.commons.provider/observed.html","searchKeys":["observed","fun <K, V> MutableProvider<out MutableMap<K, V>>.observed(): Provider<MutableMap<K, V>>","xyz.xenondevs.commons.provider.observed"]},{"name":"fun <K, V> MutableProvider<out MutableMap<K, V>>.strongObserved(): Provider<MutableMap<K, V>>","description":"xyz.xenondevs.commons.provider.strongObserved","location":"commons-provider/xyz.xenondevs.commons.provider/strong-observed.html","searchKeys":["strongObserved","fun <K, V> MutableProvider<out MutableMap<K, V>>.strongObserved(): Provider<MutableMap<K, V>>","xyz.xenondevs.commons.provider.strongObserved"]},{"name":"fun <K, V> Provider<List<Map<K, V>>>.mergeMaps(): Provider<Map<K, V>>","description":"xyz.xenondevs.commons.provider.mergeMaps","location":"commons-provider/xyz.xenondevs.commons.provider/merge-maps.html","searchKeys":["mergeMaps","fun <K, V> Provider<List<Map<K, V>>>.mergeMaps(): Provider<Map<K, V>>","xyz.xenondevs.commons.provider.mergeMaps"]},{"name":"fun <K, V> Provider<List<Map<K, V>>>.strongMergeMaps(): Provider<Map<K, V>>","description":"xyz.xenondevs.commons.provider.strongMergeMaps","location":"commons-provider/xyz.xenondevs.commons.provider/strong-merge-maps.html","searchKeys":["strongMergeMaps","fun <K, V> Provider<List<Map<K, V>>>.strongMergeMaps(): Provider<Map<K, V>>","xyz.xenondevs.commons.provider.strongMergeMaps"]},{"name":"fun <R> Provider<MutableProvider<R>>.flatten(): MutableProvider<R>","description":"xyz.xenondevs.commons.provider.flatten","location":"commons-provider/xyz.xenondevs.commons.provider/flatten.html","searchKeys":["flatten","fun <R> Provider<MutableProvider<R>>.flatten(): MutableProvider<R>","xyz.xenondevs.commons.provider.flatten"]},{"name":"fun <R> Provider<MutableProvider<R>>.strongFlatten(): MutableProvider<R>","description":"xyz.xenondevs.commons.provider.strongFlatten","location":"commons-provider/xyz.xenondevs.commons.provider/strong-flatten.html","searchKeys":["strongFlatten","fun <R> Provider<MutableProvider<R>>.strongFlatten(): MutableProvider<R>","xyz.xenondevs.commons.provider.strongFlatten"]},{"name":"fun <R> Provider<Provider<R>>.flatten(): Provider<R>","description":"xyz.xenondevs.commons.provider.flatten","location":"commons-provider/xyz.xenondevs.commons.provider/flatten.html","searchKeys":["flatten","fun <R> Provider<Provider<R>>.flatten(): Provider<R>","xyz.xenondevs.commons.provider.flatten"]},{"name":"fun <R> Provider<Provider<R>>.strongFlatten(): Provider<R>","description":"xyz.xenondevs.commons.provider.strongFlatten","location":"commons-provider/xyz.xenondevs.commons.provider/strong-flatten.html","searchKeys":["strongFlatten","fun <R> Provider<Provider<R>>.strongFlatten(): Provider<R>","xyz.xenondevs.commons.provider.strongFlatten"]},{"name":"fun <T : Any> MutableProvider<T?>.orElseLazily(lazyValue: () -> T): MutableProvider<T>","description":"xyz.xenondevs.commons.provider.orElseLazily","location":"commons-provider/xyz.xenondevs.commons.provider/or-else-lazily.html","searchKeys":["orElseLazily","fun <T : Any> MutableProvider<T?>.orElseLazily(lazyValue: () -> T): MutableProvider<T>","xyz.xenondevs.commons.provider.orElseLazily"]},{"name":"fun <T : Any> MutableProvider<T?>.strongOrElseLazily(lazyValue: () -> T): MutableProvider<T>","description":"xyz.xenondevs.commons.provider.strongOrElseLazily","location":"commons-provider/xyz.xenondevs.commons.provider/strong-or-else-lazily.html","searchKeys":["strongOrElseLazily","fun <T : Any> MutableProvider<T?>.strongOrElseLazily(lazyValue: () -> T): MutableProvider<T>","xyz.xenondevs.commons.provider.strongOrElseLazily"]},{"name":"fun <T : Any> Provider<T?>.requireNotNull(message: String = \"Required value was null.\"): Provider<T>","description":"xyz.xenondevs.commons.provider.requireNotNull","location":"commons-provider/xyz.xenondevs.commons.provider/require-not-null.html","searchKeys":["requireNotNull","fun <T : Any> Provider<T?>.requireNotNull(message: String = \"Required value was null.\"): Provider<T>","xyz.xenondevs.commons.provider.requireNotNull"]},{"name":"fun <T : Any> Provider<T?>.strongRequireNotNull(message: String = \"Required value was null.\"): Provider<T>","description":"xyz.xenondevs.commons.provider.strongRequireNotNull","location":"commons-provider/xyz.xenondevs.commons.provider/strong-require-not-null.html","searchKeys":["strongRequireNotNull","fun <T : Any> Provider<T?>.strongRequireNotNull(message: String = \"Required value was null.\"): Provider<T>","xyz.xenondevs.commons.provider.strongRequireNotNull"]},{"name":"fun <T, R> combinedProvider(providers: List<Provider<T>>, mapValue: (List<T>) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <T, R> combinedProvider(providers: List<Provider<T>>, mapValue: (List<T>) -> R): Provider<R>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <T, R> strongCombinedProvider(providers: List<Provider<T>>, mapValue: (List<T>) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <T, R> strongCombinedProvider(providers: List<Provider<T>>, mapValue: (List<T>) -> R): Provider<R>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <T> MutableProvider<T?>.orElse(value: T): MutableProvider<T>","description":"xyz.xenondevs.commons.provider.orElse","location":"commons-provider/xyz.xenondevs.commons.provider/or-else.html","searchKeys":["orElse","fun <T> MutableProvider<T?>.orElse(value: T): MutableProvider<T>","xyz.xenondevs.commons.provider.orElse"]},{"name":"fun <T> MutableProvider<T?>.orElseNew(newValue: () -> T): MutableProvider<T>","description":"xyz.xenondevs.commons.provider.orElseNew","location":"commons-provider/xyz.xenondevs.commons.provider/or-else-new.html","searchKeys":["orElseNew","fun <T> MutableProvider<T?>.orElseNew(newValue: () -> T): MutableProvider<T>","xyz.xenondevs.commons.provider.orElseNew"]},{"name":"fun <T> MutableProvider<T?>.strongOrElse(value: T): MutableProvider<T>","description":"xyz.xenondevs.commons.provider.strongOrElse","location":"commons-provider/xyz.xenondevs.commons.provider/strong-or-else.html","searchKeys":["strongOrElse","fun <T> MutableProvider<T?>.strongOrElse(value: T): MutableProvider<T>","xyz.xenondevs.commons.provider.strongOrElse"]},{"name":"fun <T> MutableProvider<T?>.strongOrElseNew(newValue: () -> T): MutableProvider<T>","description":"xyz.xenondevs.commons.provider.strongOrElseNew","location":"commons-provider/xyz.xenondevs.commons.provider/strong-or-else-new.html","searchKeys":["strongOrElseNew","fun <T> MutableProvider<T?>.strongOrElseNew(newValue: () -> T): MutableProvider<T>","xyz.xenondevs.commons.provider.strongOrElseNew"]},{"name":"fun <T> Provider<Array<T>>.getCoerced(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.getCoerced","location":"commons-provider/xyz.xenondevs.commons.provider/get-coerced.html","searchKeys":["getCoerced","fun <T> Provider<Array<T>>.getCoerced(index: Int): Provider<T>","xyz.xenondevs.commons.provider.getCoerced"]},{"name":"fun <T> Provider<Array<T>>.getCoerced(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.getCoerced","location":"commons-provider/xyz.xenondevs.commons.provider/get-coerced.html","searchKeys":["getCoerced","fun <T> Provider<Array<T>>.getCoerced(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.getCoerced"]},{"name":"fun <T> Provider<Array<T>>.getMod(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.getMod","location":"commons-provider/xyz.xenondevs.commons.provider/get-mod.html","searchKeys":["getMod","fun <T> Provider<Array<T>>.getMod(index: Int): Provider<T>","xyz.xenondevs.commons.provider.getMod"]},{"name":"fun <T> Provider<Array<T>>.getMod(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.getMod","location":"commons-provider/xyz.xenondevs.commons.provider/get-mod.html","searchKeys":["getMod","fun <T> Provider<Array<T>>.getMod(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.getMod"]},{"name":"fun <T> Provider<Array<T>>.getOrNull(index: Int): Provider<T?>","description":"xyz.xenondevs.commons.provider.getOrNull","location":"commons-provider/xyz.xenondevs.commons.provider/get-or-null.html","searchKeys":["getOrNull","fun <T> Provider<Array<T>>.getOrNull(index: Int): Provider<T?>","xyz.xenondevs.commons.provider.getOrNull"]},{"name":"fun <T> Provider<Array<T>>.getOrNull(index: Provider<Int>): Provider<T?>","description":"xyz.xenondevs.commons.provider.getOrNull","location":"commons-provider/xyz.xenondevs.commons.provider/get-or-null.html","searchKeys":["getOrNull","fun <T> Provider<Array<T>>.getOrNull(index: Provider<Int>): Provider<T?>","xyz.xenondevs.commons.provider.getOrNull"]},{"name":"fun <T> Provider<Array<T>>.strongGet(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGet","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get.html","searchKeys":["strongGet","fun <T> Provider<Array<T>>.strongGet(index: Int): Provider<T>","xyz.xenondevs.commons.provider.strongGet"]},{"name":"fun <T> Provider<Array<T>>.strongGet(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGet","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get.html","searchKeys":["strongGet","fun <T> Provider<Array<T>>.strongGet(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.strongGet"]},{"name":"fun <T> Provider<Array<T>>.strongGetCoerced(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGetCoerced","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-coerced.html","searchKeys":["strongGetCoerced","fun <T> Provider<Array<T>>.strongGetCoerced(index: Int): Provider<T>","xyz.xenondevs.commons.provider.strongGetCoerced"]},{"name":"fun <T> Provider<Array<T>>.strongGetCoerced(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGetCoerced","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-coerced.html","searchKeys":["strongGetCoerced","fun <T> Provider<Array<T>>.strongGetCoerced(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.strongGetCoerced"]},{"name":"fun <T> Provider<Array<T>>.strongGetMod(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGetMod","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-mod.html","searchKeys":["strongGetMod","fun <T> Provider<Array<T>>.strongGetMod(index: Int): Provider<T>","xyz.xenondevs.commons.provider.strongGetMod"]},{"name":"fun <T> Provider<Array<T>>.strongGetMod(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGetMod","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-mod.html","searchKeys":["strongGetMod","fun <T> Provider<Array<T>>.strongGetMod(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.strongGetMod"]},{"name":"fun <T> Provider<Array<T>>.strongGetOrNull(index: Int): Provider<T?>","description":"xyz.xenondevs.commons.provider.strongGetOrNull","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-or-null.html","searchKeys":["strongGetOrNull","fun <T> Provider<Array<T>>.strongGetOrNull(index: Int): Provider<T?>","xyz.xenondevs.commons.provider.strongGetOrNull"]},{"name":"fun <T> Provider<Array<T>>.strongGetOrNull(index: Provider<Int>): Provider<T?>","description":"xyz.xenondevs.commons.provider.strongGetOrNull","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-or-null.html","searchKeys":["strongGetOrNull","fun <T> Provider<Array<T>>.strongGetOrNull(index: Provider<Int>): Provider<T?>","xyz.xenondevs.commons.provider.strongGetOrNull"]},{"name":"fun <T> Provider<Iterable<Iterable<T>>>.flattenIterables(): Provider<List<T>>","description":"xyz.xenondevs.commons.provider.flattenIterables","location":"commons-provider/xyz.xenondevs.commons.provider/flatten-iterables.html","searchKeys":["flattenIterables","fun <T> Provider<Iterable<Iterable<T>>>.flattenIterables(): Provider<List<T>>","xyz.xenondevs.commons.provider.flattenIterables"]},{"name":"fun <T> Provider<Iterable<Iterable<T>>>.strongFlattenIterables(): Provider<List<T>>","description":"xyz.xenondevs.commons.provider.strongFlattenIterables","location":"commons-provider/xyz.xenondevs.commons.provider/strong-flatten-iterables.html","searchKeys":["strongFlattenIterables","fun <T> Provider<Iterable<Iterable<T>>>.strongFlattenIterables(): Provider<List<T>>","xyz.xenondevs.commons.provider.strongFlattenIterables"]},{"name":"fun <T> Provider<List<T>>.getCoerced(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.getCoerced","location":"commons-provider/xyz.xenondevs.commons.provider/get-coerced.html","searchKeys":["getCoerced","fun <T> Provider<List<T>>.getCoerced(index: Int): Provider<T>","xyz.xenondevs.commons.provider.getCoerced"]},{"name":"fun <T> Provider<List<T>>.getCoerced(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.getCoerced","location":"commons-provider/xyz.xenondevs.commons.provider/get-coerced.html","searchKeys":["getCoerced","fun <T> Provider<List<T>>.getCoerced(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.getCoerced"]},{"name":"fun <T> Provider<List<T>>.getMod(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.getMod","location":"commons-provider/xyz.xenondevs.commons.provider/get-mod.html","searchKeys":["getMod","fun <T> Provider<List<T>>.getMod(index: Int): Provider<T>","xyz.xenondevs.commons.provider.getMod"]},{"name":"fun <T> Provider<List<T>>.getMod(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.getMod","location":"commons-provider/xyz.xenondevs.commons.provider/get-mod.html","searchKeys":["getMod","fun <T> Provider<List<T>>.getMod(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.getMod"]},{"name":"fun <T> Provider<List<T>>.getOrNull(index: Int): Provider<T?>","description":"xyz.xenondevs.commons.provider.getOrNull","location":"commons-provider/xyz.xenondevs.commons.provider/get-or-null.html","searchKeys":["getOrNull","fun <T> Provider<List<T>>.getOrNull(index: Int): Provider<T?>","xyz.xenondevs.commons.provider.getOrNull"]},{"name":"fun <T> Provider<List<T>>.getOrNull(index: Provider<Int>): Provider<T?>","description":"xyz.xenondevs.commons.provider.getOrNull","location":"commons-provider/xyz.xenondevs.commons.provider/get-or-null.html","searchKeys":["getOrNull","fun <T> Provider<List<T>>.getOrNull(index: Provider<Int>): Provider<T?>","xyz.xenondevs.commons.provider.getOrNull"]},{"name":"fun <T> Provider<List<T>>.strongGet(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGet","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get.html","searchKeys":["strongGet","fun <T> Provider<List<T>>.strongGet(index: Int): Provider<T>","xyz.xenondevs.commons.provider.strongGet"]},{"name":"fun <T> Provider<List<T>>.strongGet(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGet","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get.html","searchKeys":["strongGet","fun <T> Provider<List<T>>.strongGet(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.strongGet"]},{"name":"fun <T> Provider<List<T>>.strongGetCoerced(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGetCoerced","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-coerced.html","searchKeys":["strongGetCoerced","fun <T> Provider<List<T>>.strongGetCoerced(index: Int): Provider<T>","xyz.xenondevs.commons.provider.strongGetCoerced"]},{"name":"fun <T> Provider<List<T>>.strongGetCoerced(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGetCoerced","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-coerced.html","searchKeys":["strongGetCoerced","fun <T> Provider<List<T>>.strongGetCoerced(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.strongGetCoerced"]},{"name":"fun <T> Provider<List<T>>.strongGetMod(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGetMod","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-mod.html","searchKeys":["strongGetMod","fun <T> Provider<List<T>>.strongGetMod(index: Int): Provider<T>","xyz.xenondevs.commons.provider.strongGetMod"]},{"name":"fun <T> Provider<List<T>>.strongGetMod(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGetMod","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-mod.html","searchKeys":["strongGetMod","fun <T> Provider<List<T>>.strongGetMod(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.strongGetMod"]},{"name":"fun <T> Provider<List<T>>.strongGetOrNull(index: Int): Provider<T?>","description":"xyz.xenondevs.commons.provider.strongGetOrNull","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-or-null.html","searchKeys":["strongGetOrNull","fun <T> Provider<List<T>>.strongGetOrNull(index: Int): Provider<T?>","xyz.xenondevs.commons.provider.strongGetOrNull"]},{"name":"fun <T> Provider<List<T>>.strongGetOrNull(index: Provider<Int>): Provider<T?>","description":"xyz.xenondevs.commons.provider.strongGetOrNull","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-or-null.html","searchKeys":["strongGetOrNull","fun <T> Provider<List<T>>.strongGetOrNull(index: Provider<Int>): Provider<T?>","xyz.xenondevs.commons.provider.strongGetOrNull"]},{"name":"fun <T> Provider<T?>.orElse(provider: Provider<T>): Provider<T>","description":"xyz.xenondevs.commons.provider.orElse","location":"commons-provider/xyz.xenondevs.commons.provider/or-else.html","searchKeys":["orElse","fun <T> Provider<T?>.orElse(provider: Provider<T>): Provider<T>","xyz.xenondevs.commons.provider.orElse"]},{"name":"fun <T> Provider<T?>.orElse(provider: Provider<T>?): Provider<T?>","description":"xyz.xenondevs.commons.provider.orElse","location":"commons-provider/xyz.xenondevs.commons.provider/or-else.html","searchKeys":["orElse","fun <T> Provider<T?>.orElse(provider: Provider<T>?): Provider<T?>","xyz.xenondevs.commons.provider.orElse"]},{"name":"fun <T> Provider<T?>.orElse(value: T): Provider<T>","description":"xyz.xenondevs.commons.provider.orElse","location":"commons-provider/xyz.xenondevs.commons.provider/or-else.html","searchKeys":["orElse","fun <T> Provider<T?>.orElse(value: T): Provider<T>","xyz.xenondevs.commons.provider.orElse"]},{"name":"fun <T> Provider<T?>.orElseLazily(lazyValue: () -> T): Provider<T>","description":"xyz.xenondevs.commons.provider.orElseLazily","location":"commons-provider/xyz.xenondevs.commons.provider/or-else-lazily.html","searchKeys":["orElseLazily","fun <T> Provider<T?>.orElseLazily(lazyValue: () -> T): Provider<T>","xyz.xenondevs.commons.provider.orElseLazily"]},{"name":"fun <T> Provider<T?>.orElseNew(newValue: () -> T): Provider<T>","description":"xyz.xenondevs.commons.provider.orElseNew","location":"commons-provider/xyz.xenondevs.commons.provider/or-else-new.html","searchKeys":["orElseNew","fun <T> Provider<T?>.orElseNew(newValue: () -> T): Provider<T>","xyz.xenondevs.commons.provider.orElseNew"]},{"name":"fun <T> Provider<T?>.strongOrElse(provider: Provider<T>): Provider<T>","description":"xyz.xenondevs.commons.provider.strongOrElse","location":"commons-provider/xyz.xenondevs.commons.provider/strong-or-else.html","searchKeys":["strongOrElse","fun <T> Provider<T?>.strongOrElse(provider: Provider<T>): Provider<T>","xyz.xenondevs.commons.provider.strongOrElse"]},{"name":"fun <T> Provider<T?>.strongOrElse(provider: Provider<T>?): Provider<T?>","description":"xyz.xenondevs.commons.provider.strongOrElse","location":"commons-provider/xyz.xenondevs.commons.provider/strong-or-else.html","searchKeys":["strongOrElse","fun <T> Provider<T?>.strongOrElse(provider: Provider<T>?): Provider<T?>","xyz.xenondevs.commons.provider.strongOrElse"]},{"name":"fun <T> Provider<T?>.strongOrElse(value: T): Provider<T>","description":"xyz.xenondevs.commons.provider.strongOrElse","location":"commons-provider/xyz.xenondevs.commons.provider/strong-or-else.html","searchKeys":["strongOrElse","fun <T> Provider<T?>.strongOrElse(value: T): Provider<T>","xyz.xenondevs.commons.provider.strongOrElse"]},{"name":"fun <T> Provider<T?>.strongOrElseLazily(lazyValue: () -> T): Provider<T>","description":"xyz.xenondevs.commons.provider.strongOrElseLazily","location":"commons-provider/xyz.xenondevs.commons.provider/strong-or-else-lazily.html","searchKeys":["strongOrElseLazily","fun <T> Provider<T?>.strongOrElseLazily(lazyValue: () -> T): Provider<T>","xyz.xenondevs.commons.provider.strongOrElseLazily"]},{"name":"fun <T> Provider<T?>.strongOrElseNew(newValue: () -> T): Provider<T>","description":"xyz.xenondevs.commons.provider.strongOrElseNew","location":"commons-provider/xyz.xenondevs.commons.provider/strong-or-else-new.html","searchKeys":["strongOrElseNew","fun <T> Provider<T?>.strongOrElseNew(newValue: () -> T): Provider<T>","xyz.xenondevs.commons.provider.strongOrElseNew"]},{"name":"fun <T> combinedProvider(providers: List<Provider<T>>): Provider<List<T>>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <T> combinedProvider(providers: List<Provider<T>>): Provider<List<T>>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <T> mutableProvider(initialValue: T): MutableProvider<T>","description":"xyz.xenondevs.commons.provider.mutableProvider","location":"commons-provider/xyz.xenondevs.commons.provider/mutable-provider.html","searchKeys":["mutableProvider","fun <T> mutableProvider(initialValue: T): MutableProvider<T>","xyz.xenondevs.commons.provider.mutableProvider"]},{"name":"fun <T> mutableProvider(lazyValue: () -> T): MutableProvider<T>","description":"xyz.xenondevs.commons.provider.mutableProvider","location":"commons-provider/xyz.xenondevs.commons.provider/mutable-provider.html","searchKeys":["mutableProvider","fun <T> mutableProvider(lazyValue: () -> T): MutableProvider<T>","xyz.xenondevs.commons.provider.mutableProvider"]},{"name":"fun <T> mutableProvider(lazyValue: () -> T, setValue: (T) -> Unit = {}): MutableProvider<T>","description":"xyz.xenondevs.commons.provider.mutableProvider","location":"commons-provider/xyz.xenondevs.commons.provider/mutable-provider.html","searchKeys":["mutableProvider","fun <T> mutableProvider(lazyValue: () -> T, setValue: (T) -> Unit = {}): MutableProvider<T>","xyz.xenondevs.commons.provider.mutableProvider"]},{"name":"fun <T> provider(lazyValue: () -> T): Provider<T>","description":"xyz.xenondevs.commons.provider.provider","location":"commons-provider/xyz.xenondevs.commons.provider/provider.html","searchKeys":["provider","fun <T> provider(lazyValue: () -> T): Provider<T>","xyz.xenondevs.commons.provider.provider"]},{"name":"fun <T> provider(value: T): Provider<T>","description":"xyz.xenondevs.commons.provider.provider","location":"commons-provider/xyz.xenondevs.commons.provider/provider.html","searchKeys":["provider","fun <T> provider(value: T): Provider<T>","xyz.xenondevs.commons.provider.provider"]},{"name":"fun <T> strongCombinedProvider(providers: List<Provider<T>>): Provider<List<T>>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <T> strongCombinedProvider(providers: List<Provider<T>>): Provider<List<T>>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"inline fun <T : Any, R : Any> MutableProvider<T?>.mapNonNull(crossinline transform: (T) -> R?, crossinline untransform: (R) -> T?): MutableProvider<R?>","description":"xyz.xenondevs.commons.provider.mapNonNull","location":"commons-provider/xyz.xenondevs.commons.provider/map-non-null.html","searchKeys":["mapNonNull","inline fun <T : Any, R : Any> MutableProvider<T?>.mapNonNull(crossinline transform: (T) -> R?, crossinline untransform: (R) -> T?): MutableProvider<R?>","xyz.xenondevs.commons.provider.mapNonNull"]},{"name":"inline fun <T : Any, R : Any> MutableProvider<T?>.strongMapNonNull(crossinline transform: (T) -> R?, crossinline untransform: (R) -> T?): MutableProvider<R?>","description":"xyz.xenondevs.commons.provider.strongMapNonNull","location":"commons-provider/xyz.xenondevs.commons.provider/strong-map-non-null.html","searchKeys":["strongMapNonNull","inline fun <T : Any, R : Any> MutableProvider<T?>.strongMapNonNull(crossinline transform: (T) -> R?, crossinline untransform: (R) -> T?): MutableProvider<R?>","xyz.xenondevs.commons.provider.strongMapNonNull"]},{"name":"inline fun <T : Any, R> Provider<T?>.mapNonNull(crossinline transform: (T) -> R): Provider<R?>","description":"xyz.xenondevs.commons.provider.mapNonNull","location":"commons-provider/xyz.xenondevs.commons.provider/map-non-null.html","searchKeys":["mapNonNull","inline fun <T : Any, R> Provider<T?>.mapNonNull(crossinline transform: (T) -> R): Provider<R?>","xyz.xenondevs.commons.provider.mapNonNull"]},{"name":"inline fun <T : Any, R> Provider<T?>.strongMapNonNull(crossinline transform: (T) -> R): Provider<R?>","description":"xyz.xenondevs.commons.provider.strongMapNonNull","location":"commons-provider/xyz.xenondevs.commons.provider/strong-map-non-null.html","searchKeys":["strongMapNonNull","inline fun <T : Any, R> Provider<T?>.strongMapNonNull(crossinline transform: (T) -> R): Provider<R?>","xyz.xenondevs.commons.provider.strongMapNonNull"]},{"name":"inline fun <T : Any> Provider<T?>.requireNotNull(crossinline message: () -> String): Provider<T>","description":"xyz.xenondevs.commons.provider.requireNotNull","location":"commons-provider/xyz.xenondevs.commons.provider/require-not-null.html","searchKeys":["requireNotNull","inline fun <T : Any> Provider<T?>.requireNotNull(crossinline message: () -> String): Provider<T>","xyz.xenondevs.commons.provider.requireNotNull"]},{"name":"inline fun <T : Any> Provider<T?>.strongRequireNotNull(crossinline message: () -> String): Provider<T>","description":"xyz.xenondevs.commons.provider.strongRequireNotNull","location":"commons-provider/xyz.xenondevs.commons.provider/strong-require-not-null.html","searchKeys":["strongRequireNotNull","inline fun <T : Any> Provider<T?>.strongRequireNotNull(crossinline message: () -> String): Provider<T>","xyz.xenondevs.commons.provider.strongRequireNotNull"]},{"name":"inline fun <T, R : Any, C : MutableCollection<in R>> Provider<Collection<T>>.mapEachNotNullTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> R?): Provider<C>","description":"xyz.xenondevs.commons.provider.mapEachNotNullTo","location":"commons-provider/xyz.xenondevs.commons.provider/map-each-not-null-to.html","searchKeys":["mapEachNotNullTo","inline fun <T, R : Any, C : MutableCollection<in R>> Provider<Collection<T>>.mapEachNotNullTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> R?): Provider<C>","xyz.xenondevs.commons.provider.mapEachNotNullTo"]},{"name":"inline fun <T, R : Any, C : MutableCollection<in R>> Provider<Collection<T>>.strongMapEachNotNullTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> R?): Provider<C>","description":"xyz.xenondevs.commons.provider.strongMapEachNotNullTo","location":"commons-provider/xyz.xenondevs.commons.provider/strong-map-each-not-null-to.html","searchKeys":["strongMapEachNotNullTo","inline fun <T, R : Any, C : MutableCollection<in R>> Provider<Collection<T>>.strongMapEachNotNullTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> R?): Provider<C>","xyz.xenondevs.commons.provider.strongMapEachNotNullTo"]},{"name":"inline fun <T, R : Any> Provider<Collection<T>>.mapEachNotNull(crossinline transform: (T) -> R?): Provider<List<R>>","description":"xyz.xenondevs.commons.provider.mapEachNotNull","location":"commons-provider/xyz.xenondevs.commons.provider/map-each-not-null.html","searchKeys":["mapEachNotNull","inline fun <T, R : Any> Provider<Collection<T>>.mapEachNotNull(crossinline transform: (T) -> R?): Provider<List<R>>","xyz.xenondevs.commons.provider.mapEachNotNull"]},{"name":"inline fun <T, R : Any> Provider<Collection<T>>.strongMapEachNotNull(crossinline transform: (T) -> R?): Provider<List<R>>","description":"xyz.xenondevs.commons.provider.strongMapEachNotNull","location":"commons-provider/xyz.xenondevs.commons.provider/strong-map-each-not-null.html","searchKeys":["strongMapEachNotNull","inline fun <T, R : Any> Provider<Collection<T>>.strongMapEachNotNull(crossinline transform: (T) -> R?): Provider<List<R>>","xyz.xenondevs.commons.provider.strongMapEachNotNull"]},{"name":"inline fun <T, R, C : MutableCollection<in R>> Provider<Collection<T>>.flatMapCollectionTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> Iterable<R>): Provider<C>","description":"xyz.xenondevs.commons.provider.flatMapCollectionTo","location":"commons-provider/xyz.xenondevs.commons.provider/flat-map-collection-to.html","searchKeys":["flatMapCollectionTo","inline fun <T, R, C : MutableCollection<in R>> Provider<Collection<T>>.flatMapCollectionTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> Iterable<R>): Provider<C>","xyz.xenondevs.commons.provider.flatMapCollectionTo"]},{"name":"inline fun <T, R, C : MutableCollection<in R>> Provider<Collection<T>>.mapEachTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> R): Provider<C>","description":"xyz.xenondevs.commons.provider.mapEachTo","location":"commons-provider/xyz.xenondevs.commons.provider/map-each-to.html","searchKeys":["mapEachTo","inline fun <T, R, C : MutableCollection<in R>> Provider<Collection<T>>.mapEachTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> R): Provider<C>","xyz.xenondevs.commons.provider.mapEachTo"]},{"name":"inline fun <T, R, C : MutableCollection<in R>> Provider<Collection<T>>.strongFlatMapCollectionTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> Iterable<R>): Provider<C>","description":"xyz.xenondevs.commons.provider.strongFlatMapCollectionTo","location":"commons-provider/xyz.xenondevs.commons.provider/strong-flat-map-collection-to.html","searchKeys":["strongFlatMapCollectionTo","inline fun <T, R, C : MutableCollection<in R>> Provider<Collection<T>>.strongFlatMapCollectionTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> Iterable<R>): Provider<C>","xyz.xenondevs.commons.provider.strongFlatMapCollectionTo"]},{"name":"inline fun <T, R, C : MutableCollection<in R>> Provider<Collection<T>>.strongMapEachTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> R): Provider<C>","description":"xyz.xenondevs.commons.provider.strongMapEachTo","location":"commons-provider/xyz.xenondevs.commons.provider/strong-map-each-to.html","searchKeys":["strongMapEachTo","inline fun <T, R, C : MutableCollection<in R>> Provider<Collection<T>>.strongMapEachTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> R): Provider<C>","xyz.xenondevs.commons.provider.strongMapEachTo"]},{"name":"inline fun <T, R> Provider<Collection<T>>.flatMapCollection(crossinline transform: (T) -> Iterable<R>): Provider<List<R>>","description":"xyz.xenondevs.commons.provider.flatMapCollection","location":"commons-provider/xyz.xenondevs.commons.provider/flat-map-collection.html","searchKeys":["flatMapCollection","inline fun <T, R> Provider<Collection<T>>.flatMapCollection(crossinline transform: (T) -> Iterable<R>): Provider<List<R>>","xyz.xenondevs.commons.provider.flatMapCollection"]},{"name":"inline fun <T, R> Provider<Collection<T>>.mapEach(crossinline transform: (T) -> R): Provider<List<R>>","description":"xyz.xenondevs.commons.provider.mapEach","location":"commons-provider/xyz.xenondevs.commons.provider/map-each.html","searchKeys":["mapEach","inline fun <T, R> Provider<Collection<T>>.mapEach(crossinline transform: (T) -> R): Provider<List<R>>","xyz.xenondevs.commons.provider.mapEach"]},{"name":"inline fun <T, R> Provider<Collection<T>>.strongFlatMapCollection(crossinline transform: (T) -> Iterable<R>): Provider<List<R>>","description":"xyz.xenondevs.commons.provider.strongFlatMapCollection","location":"commons-provider/xyz.xenondevs.commons.provider/strong-flat-map-collection.html","searchKeys":["strongFlatMapCollection","inline fun <T, R> Provider<Collection<T>>.strongFlatMapCollection(crossinline transform: (T) -> Iterable<R>): Provider<List<R>>","xyz.xenondevs.commons.provider.strongFlatMapCollection"]},{"name":"inline fun <T, R> Provider<Collection<T>>.strongMapEach(crossinline transform: (T) -> R): Provider<List<R>>","description":"xyz.xenondevs.commons.provider.strongMapEach","location":"commons-provider/xyz.xenondevs.commons.provider/strong-map-each.html","searchKeys":["strongMapEach","inline fun <T, R> Provider<Collection<T>>.strongMapEach(crossinline transform: (T) -> R): Provider<List<R>>","xyz.xenondevs.commons.provider.strongMapEach"]},{"name":"inline fun <T> Provider<T>.require(crossinline condition: (T) -> Boolean, crossinline message: (T) -> String): Provider<T>","description":"xyz.xenondevs.commons.provider.require","location":"commons-provider/xyz.xenondevs.commons.provider/require.html","searchKeys":["require","inline fun <T> Provider<T>.require(crossinline condition: (T) -> Boolean, crossinline message: (T) -> String): Provider<T>","xyz.xenondevs.commons.provider.require"]},{"name":"inline fun <T> Provider<T>.strongRequire(crossinline condition: (T) -> Boolean, crossinline message: (T) -> String): Provider<T>","description":"xyz.xenondevs.commons.provider.strongRequire","location":"commons-provider/xyz.xenondevs.commons.provider/strong-require.html","searchKeys":["strongRequire","inline fun <T> Provider<T>.strongRequire(crossinline condition: (T) -> Boolean, crossinline message: (T) -> String): Provider<T>","xyz.xenondevs.commons.provider.strongRequire"]},{"name":"open operator fun <X> getValue(thisRef: X?, property: KProperty<*>?): T","description":"xyz.xenondevs.commons.provider.Provider.getValue","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/get-value.html","searchKeys":["getValue","open operator fun <X> getValue(thisRef: X?, property: KProperty<*>?): T","xyz.xenondevs.commons.provider.Provider.getValue"]},{"name":"open operator fun <X> setValue(thisRef: X?, property: KProperty<*>, value: T)","description":"xyz.xenondevs.commons.provider.MutableProvider.setValue","location":"commons-provider/xyz.xenondevs.commons.provider/-mutable-provider/set-value.html","searchKeys":["setValue","open operator fun <X> setValue(thisRef: X?, property: KProperty<*>, value: T)","xyz.xenondevs.commons.provider.MutableProvider.setValue"]},{"name":"operator fun <T> Provider<Array<T>>.get(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.get","location":"commons-provider/xyz.xenondevs.commons.provider/get.html","searchKeys":["get","operator fun <T> Provider<Array<T>>.get(index: Int): Provider<T>","xyz.xenondevs.commons.provider.get"]},{"name":"operator fun <T> Provider<Array<T>>.get(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.get","location":"commons-provider/xyz.xenondevs.commons.provider/get.html","searchKeys":["get","operator fun <T> Provider<Array<T>>.get(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.get"]},{"name":"operator fun <T> Provider<List<T>>.get(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.get","location":"commons-provider/xyz.xenondevs.commons.provider/get.html","searchKeys":["get","operator fun <T> Provider<List<T>>.get(index: Int): Provider<T>","xyz.xenondevs.commons.provider.get"]},{"name":"operator fun <T> Provider<List<T>>.get(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.get","location":"commons-provider/xyz.xenondevs.commons.provider/get.html","searchKeys":["get","operator fun <T> Provider<List<T>>.get(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.get"]},{"name":"sealed interface MutableProvider<T> : Provider<T> ","description":"xyz.xenondevs.commons.provider.MutableProvider","location":"commons-provider/xyz.xenondevs.commons.provider/-mutable-provider/index.html","searchKeys":["MutableProvider","sealed interface MutableProvider<T> : Provider<T> ","xyz.xenondevs.commons.provider.MutableProvider"]},{"name":"sealed interface Provider<out T> : Supplier<T> ","description":"xyz.xenondevs.commons.provider.Provider","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/index.html","searchKeys":["Provider","sealed interface Provider<out T> : Supplier<T> ","xyz.xenondevs.commons.provider.Provider"]},{"name":"val NULL_PROVIDER: Provider<Nothing?>","description":"xyz.xenondevs.commons.provider.NULL_PROVIDER","location":"commons-provider/xyz.xenondevs.commons.provider/-n-u-l-l_-p-r-o-v-i-d-e-r.html","searchKeys":["NULL_PROVIDER","val NULL_PROVIDER: Provider<Nothing?>","xyz.xenondevs.commons.provider.NULL_PROVIDER"]}]